; ModuleID = 'output.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@str.th.xdinfo = private unnamed_addr constant [18 x i8] c"TH: info %3d %3d\0A\00", align 1
%struct.dcomplex = type { double, double }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_put"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::__atomic_base" = type { i8 }
%class.NoelleRuntime = type <{ %"class.MARC::ThreadPoolForCSingleQueue"*, i32, [4 x i8], %"class.std::vector.42", %"class.std::vector.47", %"class.std::vector.51", i32, i32, i32, [4 x i8] }>
%"class.MARC::ThreadPoolForCSingleQueue" = type { %"class.MARC::ThreadPoolForC.base", %"class.MARC::ThreadSafeMutexQueue.28" }
%"class.MARC::ThreadPoolForC.base" = type <{ %"class.MARC::ThreadPoolInterface", %"class.std::vector.23", i32 }>
%"class.MARC::ThreadPoolInterface" = type { i32 (...)**, %"struct.std::atomic", %"class.std::vector", %"class.std::vector.0", %"class.MARC::ThreadSafeMutexQueue", i8, %"class.std::mutex" }
%"struct.std::atomic" = type { %"struct.std::__atomic_base" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl" }
%"struct.std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl" = type { %"class.std::thread"*, %"class.std::thread"*, %"class.std::thread"* }
%"class.std::thread" = type { %"class.std::thread::id" }
%"class.std::thread::id" = type { i64 }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::atomic<bool> *, std::allocator<std::atomic<bool> *> >::_Vector_impl" }
%"struct.std::_Vector_base<std::atomic<bool> *, std::allocator<std::atomic<bool> *> >::_Vector_impl" = type { %"struct.std::atomic"**, %"struct.std::atomic"**, %"struct.std::atomic"** }
%"class.MARC::ThreadSafeMutexQueue" = type { %"class.MARC::ThreadSafeQueue.base", %"class.std::mutex", %"class.std::condition_variable", %"class.std::condition_variable" }
%"class.MARC::ThreadSafeQueue.base" = type <{ i32 (...)**, %"class.std::queue", %"struct.std::atomic" }>
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl" }
%"struct.std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl" = type { %"class.std::function"**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"class.std::function" = type { %"class.std::_Function_base", void (%"union.std::_Any_data"*)* }
%"class.std::_Function_base" = type { %"union.std::_Any_data", i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* }
%"union.std::_Any_data" = type { %"union.std::_Nocopy_types" }
%"union.std::_Nocopy_types" = type { { i64, i64 } }
%"struct.std::_Deque_iterator" = type { %"class.std::function"*, %"class.std::function"*, %"class.std::function"*, %"class.std::function"** }
%"class.std::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %"class.std::thread::id", %"class.std::thread::id", [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%"class.std::mutex" = type { %"class.std::__mutex_base" }
%"class.std::__mutex_base" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::vector.23" = type { %"struct.std::_Vector_base.24" }
%"struct.std::_Vector_base.24" = type { %"struct.std::_Vector_base<MARC::ThreadCTask *, std::allocator<MARC::ThreadCTask *> >::_Vector_impl" }
%"struct.std::_Vector_base<MARC::ThreadCTask *, std::allocator<MARC::ThreadCTask *> >::_Vector_impl" = type { %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"** }
%"class.MARC::ThreadCTask" = type <{ %"class.MARC::IThreadTask", void (i8*)*, i8*, %struct.cpu_set_t, i8, i8, [6 x i8], i64, i32, [4 x i8] }>
%"class.MARC::IThreadTask" = type { i32 (...)** }
%struct.cpu_set_t = type { [16 x i64] }
%"class.MARC::ThreadSafeMutexQueue.28" = type { %"class.MARC::ThreadSafeQueue.base.34", %"class.std::mutex", %"class.std::condition_variable", %"class.std::condition_variable" }
%"class.MARC::ThreadSafeQueue.base.34" = type <{ i32 (...)**, %"class.std::queue.30", %"struct.std::atomic" }>
%"class.std::queue.30" = type { %"class.std::deque.31" }
%"class.std::deque.31" = type { %"class.std::_Deque_base.32" }
%"class.std::_Deque_base.32" = type { %"struct.std::_Deque_base<MARC::ThreadCTask *, std::allocator<MARC::ThreadCTask *> >::_Deque_impl" }
%"struct.std::_Deque_base<MARC::ThreadCTask *, std::allocator<MARC::ThreadCTask *> >::_Deque_impl" = type { %"class.MARC::ThreadCTask"***, i64, %"struct.std::_Deque_iterator.33", %"struct.std::_Deque_iterator.33" }
%"struct.std::_Deque_iterator.33" = type { %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** }
%"class.std::vector.42" = type { %"struct.std::_Vector_base.43" }
%"struct.std::_Vector_base.43" = type { %"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" }
%"struct.std::_Vector_base<unsigned int, std::allocator<unsigned int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::vector.47" = type { %"struct.std::_Bvector_base" }
%"struct.std::_Bvector_base" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" }
%"struct.std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data" = type { %"struct.std::_Bit_iterator", %"struct.std::_Bit_iterator", i64* }
%"struct.std::_Bit_iterator" = type { %"struct.std::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::_Bit_iterator_base.base" = type <{ i64*, i32 }>
%"class.std::vector.51" = type { %"struct.std::_Vector_base.52" }
%"struct.std::_Vector_base.52" = type { %"struct.std::_Vector_base<DOALL_args_t *, std::allocator<DOALL_args_t *> >::_Vector_impl" }
%"struct.std::_Vector_base<DOALL_args_t *, std::allocator<DOALL_args_t *> >::_Vector_impl" = type { %struct.DOALL_args_t**, %struct.DOALL_args_t**, %struct.DOALL_args_t** }
%struct.DOALL_args_t = type { void (i8*, i64, i64, i64)*, i8*, i64, i64, i64, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.MARC::ThreadPool" = type { %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadSafeMutexQueue.11" }
%"class.MARC::ThreadSafeMutexQueue.11" = type { %"class.MARC::ThreadSafeQueue.base.20", %"class.std::mutex", %"class.std::condition_variable", %"class.std::condition_variable" }
%"class.MARC::ThreadSafeQueue.base.20" = type <{ i32 (...)**, %"class.std::queue.13", %"struct.std::atomic" }>
%"class.std::queue.13" = type { %"class.std::deque.14" }
%"class.std::deque.14" = type { %"class.std::_Deque_base.15" }
%"class.std::_Deque_base.15" = type { %"struct.std::_Deque_base<std::unique_ptr<MARC::IThreadTask, std::default_delete<MARC::IThreadTask> >, std::allocator<std::unique_ptr<MARC::IThreadTask, std::default_delete<MARC::IThreadTask> > > >::_Deque_impl" }
%"struct.std::_Deque_base<std::unique_ptr<MARC::IThreadTask, std::default_delete<MARC::IThreadTask> >, std::allocator<std::unique_ptr<MARC::IThreadTask, std::default_delete<MARC::IThreadTask> > > >::_Deque_impl" = type { %"class.std::unique_ptr"**, i64, %"struct.std::_Deque_iterator.19", %"struct.std::_Deque_iterator.19" }
%"class.std::unique_ptr" = type { %"class.std::__uniq_ptr_impl" }
%"class.std::__uniq_ptr_impl" = type { %"class.std::tuple" }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base.22" }
%"struct.std::_Head_base.22" = type { %"class.MARC::IThreadTask"* }
%"struct.std::_Deque_iterator.19" = type { %"class.std::unique_ptr"*, %"class.std::unique_ptr"*, %"class.std::unique_ptr"*, %"class.std::unique_ptr"** }
%"class.MARC::ThreadPoolForC" = type <{ %"class.MARC::ThreadPoolInterface", %"class.std::vector.23", i32, [4 x i8] }>
%"class.MARC::ThreadPoolForCMultiQueues" = type <{ %"class.MARC::ThreadPoolForC.base", [4 x i8], %"class.std::vector.35", i32, [4 x i8] }>
%"class.std::vector.35" = type { %"struct.std::_Vector_base.36" }
%"struct.std::_Vector_base.36" = type { %"struct.std::_Vector_base<MARC::ThreadSafeSpinLockQueue<MARC::ThreadCTask *> *, std::allocator<MARC::ThreadSafeSpinLockQueue<MARC::ThreadCTask *> *> >::_Vector_impl" }
%"struct.std::_Vector_base<MARC::ThreadSafeSpinLockQueue<MARC::ThreadCTask *> *, std::allocator<MARC::ThreadSafeSpinLockQueue<MARC::ThreadCTask *> *> >::_Vector_impl" = type { %"class.MARC::ThreadSafeSpinLockQueue"**, %"class.MARC::ThreadSafeSpinLockQueue"**, %"class.MARC::ThreadSafeSpinLockQueue"** }
%"class.MARC::ThreadSafeSpinLockQueue" = type { %"class.MARC::ThreadSafeQueue.base.34", i32 }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }
%"class.std::unique_lock" = type <{ %"class.std::mutex"*, i8, [7 x i8] }>
%union.pthread_attr_t = type { i64, [48 x i8] }
%"struct.std::thread::_State_impl" = type { %"class.MARC::IThreadTask", %"struct.std::thread::_Invoker" }
%"struct.std::thread::_Invoker" = type { %"class.std::tuple.138" }
%"class.std::tuple.138" = type { %"struct.std::_Tuple_impl.139" }
%"struct.std::_Tuple_impl.139" = type { %"struct.std::_Tuple_impl.140", %"struct.std::_Head_base.146" }
%"struct.std::_Tuple_impl.140" = type { %"struct.std::_Tuple_impl.141", %"struct.std::_Head_base.145" }
%"struct.std::_Tuple_impl.141" = type { %"struct.std::_Tuple_impl.142", %"struct.std::_Head_base.144" }
%"struct.std::_Tuple_impl.142" = type { %"struct.std::_Head_base.143" }
%"struct.std::_Head_base.143" = type { i32 }
%"struct.std::_Head_base.144" = type { %"struct.std::atomic"* }
%"struct.std::_Head_base.145" = type { %"class.MARC::ThreadPoolInterface"* }
%"struct.std::_Head_base.146" = type { void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)* }
%"class.MARC::ThreadSafeQueue.29" = type <{ i32 (...)**, %"class.std::queue.30", %"struct.std::atomic", [7 x i8] }>
%"class.MARC::ThreadSafeQueue" = type <{ i32 (...)**, %"class.std::queue", %"struct.std::atomic", [7 x i8] }>
%"class.MARC::ThreadSafeQueue.12" = type <{ i32 (...)**, %"class.std::queue.13", %"struct.std::atomic", [7 x i8] }>
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon.59 }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon.59 = type { i64, [8 x i8] }
%"class.MARC::ThreadSafeQueue.60" = type <{ i32 (...)**, %"class.std::queue.61", %"struct.std::atomic", [7 x i8] }>
%"class.std::queue.61" = type { %"class.std::deque.62" }
%"class.std::deque.62" = type { %"class.std::_Deque_base.63" }
%"class.std::_Deque_base.63" = type { %"struct.std::_Deque_base<signed char, std::allocator<signed char> >::_Deque_impl" }
%"struct.std::_Deque_base<signed char, std::allocator<signed char> >::_Deque_impl" = type { i8**, i64, %"struct.std::_Deque_iterator.67", %"struct.std::_Deque_iterator.67" }
%"struct.std::_Deque_iterator.67" = type { i8*, i8*, i8*, i8** }
%"class.MARC::ThreadSafeQueue.69" = type <{ i32 (...)**, %"class.std::queue.70", %"struct.std::atomic", [7 x i8] }>
%"class.std::queue.70" = type { %"class.std::deque.71" }
%"class.std::deque.71" = type { %"class.std::_Deque_base.72" }
%"class.std::_Deque_base.72" = type { %"struct.std::_Deque_base<short, std::allocator<short> >::_Deque_impl" }
%"struct.std::_Deque_base<short, std::allocator<short> >::_Deque_impl" = type { i16**, i64, %"struct.std::_Deque_iterator.76", %"struct.std::_Deque_iterator.76" }
%"struct.std::_Deque_iterator.76" = type { i16*, i16*, i16*, i16** }
%"class.MARC::ThreadSafeQueue.78" = type <{ i32 (...)**, %"class.std::queue.79", %"struct.std::atomic", [7 x i8] }>
%"class.std::queue.79" = type { %"class.std::deque.80" }
%"class.std::deque.80" = type { %"class.std::_Deque_base.81" }
%"class.std::_Deque_base.81" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator.85", %"struct.std::_Deque_iterator.85" }
%"struct.std::_Deque_iterator.85" = type { i32*, i32*, i32*, i32** }
%"class.MARC::ThreadSafeQueue.87" = type <{ i32 (...)**, %"class.std::queue.88", %"struct.std::atomic", [7 x i8] }>
%"class.std::queue.88" = type { %"class.std::deque.89" }
%"class.std::deque.89" = type { %"class.std::_Deque_base.90" }
%"class.std::_Deque_base.90" = type { %"struct.std::_Deque_base<long, std::allocator<long> >::_Deque_impl" }
%"struct.std::_Deque_base<long, std::allocator<long> >::_Deque_impl" = type { i64**, i64, %"struct.std::_Deque_iterator.94", %"struct.std::_Deque_iterator.94" }
%"struct.std::_Deque_iterator.94" = type { i64*, i64*, i64*, i64** }
%struct.NOELLE_HELIX_args_t = type { void (i8*, i8*, i8*, i8*, i64, i64, i64*)*, i8*, i8*, i8*, i8*, i64, i64, i64*, i32 }
%struct.NOELLE_DSWP_args_t = type { void (i8*, i8*)*, i8*, i8*, %union.pthread_mutex_t }
%"class.MARC::ThreadSafeLockFreeQueue" = type { %"class.MARC::ThreadSafeQueue.base.68", %"class.moodycamel::BlockingReaderWriterQueue" }
%"class.MARC::ThreadSafeQueue.base.68" = type <{ i32 (...)**, %"class.std::queue.61", %"struct.std::atomic" }>
%"class.moodycamel::BlockingReaderWriterQueue" = type { %"class.moodycamel::ReaderWriterQueue", %"class.moodycamel::spsc_sema::LightweightSemaphore" }
%"class.moodycamel::ReaderWriterQueue" = type <{ %"class.moodycamel::weak_atomic", [56 x i8], %"class.moodycamel::weak_atomic", i64, i8, i8, [6 x i8] }>
%"class.moodycamel::weak_atomic" = type { %"struct.std::atomic.96" }
%"struct.std::atomic.96" = type { %"struct.std::__atomic_base.97" }
%"struct.std::__atomic_base.97" = type { %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* }
%"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block" = type { %"class.moodycamel::weak_atomic.122", i64, [48 x i8], %"class.moodycamel::weak_atomic.122", i64, [48 x i8], %"class.moodycamel::weak_atomic", i8*, i64, i8* }
%"class.moodycamel::weak_atomic.122" = type { %"class.std::thread" }
%"class.moodycamel::spsc_sema::LightweightSemaphore" = type { %"class.moodycamel::weak_atomic.122", %"class.moodycamel::spsc_sema::Semaphore" }
%"class.moodycamel::spsc_sema::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.MARC::ThreadSafeLockFreeQueue.101" = type { %"class.MARC::ThreadSafeQueue.base.77", %"class.moodycamel::BlockingReaderWriterQueue.102" }
%"class.MARC::ThreadSafeQueue.base.77" = type <{ i32 (...)**, %"class.std::queue.70", %"struct.std::atomic" }>
%"class.moodycamel::BlockingReaderWriterQueue.102" = type { %"class.moodycamel::ReaderWriterQueue.103", %"class.moodycamel::spsc_sema::LightweightSemaphore" }
%"class.moodycamel::ReaderWriterQueue.103" = type <{ %"class.moodycamel::weak_atomic.104", [56 x i8], %"class.moodycamel::weak_atomic.104", i64, i8, i8, [6 x i8] }>
%"class.moodycamel::weak_atomic.104" = type { %"struct.std::atomic.105" }
%"struct.std::atomic.105" = type { %"struct.std::__atomic_base.106" }
%"struct.std::__atomic_base.106" = type { %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* }
%"struct.moodycamel::ReaderWriterQueue<short, 512>::Block" = type { %"class.moodycamel::weak_atomic.122", i64, [48 x i8], %"class.moodycamel::weak_atomic.122", i64, [48 x i8], %"class.moodycamel::weak_atomic.104", i8*, i64, i8* }
%"class.MARC::ThreadSafeLockFreeQueue.108" = type { %"class.MARC::ThreadSafeQueue.base.86", %"class.moodycamel::BlockingReaderWriterQueue.109" }
%"class.MARC::ThreadSafeQueue.base.86" = type <{ i32 (...)**, %"class.std::queue.79", %"struct.std::atomic" }>
%"class.moodycamel::BlockingReaderWriterQueue.109" = type { %"class.moodycamel::ReaderWriterQueue.110", %"class.moodycamel::spsc_sema::LightweightSemaphore" }
%"class.moodycamel::ReaderWriterQueue.110" = type <{ %"class.moodycamel::weak_atomic.111", [56 x i8], %"class.moodycamel::weak_atomic.111", i64, i8, i8, [6 x i8] }>
%"class.moodycamel::weak_atomic.111" = type { %"struct.std::atomic.112" }
%"struct.std::atomic.112" = type { %"struct.std::__atomic_base.113" }
%"struct.std::__atomic_base.113" = type { %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* }
%"struct.moodycamel::ReaderWriterQueue<int, 512>::Block" = type { %"class.moodycamel::weak_atomic.122", i64, [48 x i8], %"class.moodycamel::weak_atomic.122", i64, [48 x i8], %"class.moodycamel::weak_atomic.111", i8*, i64, i8* }
%"class.MARC::ThreadSafeLockFreeQueue.115" = type { %"class.MARC::ThreadSafeQueue.base.95", %"class.moodycamel::BlockingReaderWriterQueue.116" }
%"class.MARC::ThreadSafeQueue.base.95" = type <{ i32 (...)**, %"class.std::queue.88", %"struct.std::atomic" }>
%"class.moodycamel::BlockingReaderWriterQueue.116" = type { %"class.moodycamel::ReaderWriterQueue.117", %"class.moodycamel::spsc_sema::LightweightSemaphore" }
%"class.moodycamel::ReaderWriterQueue.117" = type <{ %"class.moodycamel::weak_atomic.118", [56 x i8], %"class.moodycamel::weak_atomic.118", i64, i8, i8, [6 x i8] }>
%"class.moodycamel::weak_atomic.118" = type { %"struct.std::atomic.119" }
%"struct.std::atomic.119" = type { %"struct.std::__atomic_base.120" }
%"struct.std::__atomic_base.120" = type { %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* }
%"struct.moodycamel::ReaderWriterQueue<long, 512>::Block" = type { %"class.moodycamel::weak_atomic.122", i64, [48 x i8], %"class.moodycamel::weak_atomic.122", i64, [48 x i8], %"class.moodycamel::weak_atomic.118", i8*, i64, i8* }
%"class.std::bad_alloc" = type { %"class.MARC::IThreadTask" }

$_ZN4MARC11IThreadTaskD2Ev = comdat any

$_ZN4MARC11ThreadCTaskD0Ev = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE7waitPopERS5_ = comdat any

$_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE4pushES2_ = comdat any

$_ZNSt6vectorISt6threadSaIS0_EE12emplace_backIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES6_RS9_RiEEEvDpOT_ = comdat any

$_ZNSt6vectorISt6threadSaIS0_EE17_M_realloc_insertIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES6_RS9_RiEEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_ = comdat any

$__clang_call_terminate = comdat any

$_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEED0Ev = comdat any

$_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEE6_M_runEv = comdat any

$_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE17_M_reallocate_mapEmb = comdat any

$_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE7waitPopERS2_ = comdat any

$_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_ = comdat any

$_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEED2Ev = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE7waitPopERS3_ = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEED2Ev = comdat any

$_ZNSt6vectorIPSt6atomicIbESaIS2_EED2Ev = comdat any

$_ZNSt6vectorISt6threadSaIS0_EED2Ev = comdat any

$_ZNSt5dequeISt8functionIFvvEESaIS2_EED2Ev = comdat any

$_ZN4MARC15ThreadSafeQueueISt8functionIFvvEEED2Ev = comdat any

$_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_ = comdat any

$_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED2Ev = comdat any

$_ZNK4MARC15ThreadSafeQueueISt8functionIFvvEEE7isValidEv = comdat any

$_ZN4MARC15ThreadSafeQueueISt8functionIFvvEEE10invalidateEv = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE6tryPopERS3_ = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE7waitPopEv = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE4pushES3_ = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE8waitPushES3_l = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE5clearEv = comdat any

$_ZNK4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE5emptyEv = comdat any

$_ZNK4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE4sizeEv = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE10invalidateEv = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE22internal_pushAndNotifyERS3_ = comdat any

$_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb = comdat any

$_ZN4MARC15ThreadSafeQueueISt8functionIFvvEEE12internal_popERS3_ = comdat any

$_ZN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEED2Ev = comdat any

$_ZNK4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEE7isValidEv = comdat any

$_ZN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEE10invalidateEv = comdat any

$_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE6tryPopERS2_ = comdat any

$_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE7waitPopEv = comdat any

$_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE8waitPushES2_l = comdat any

$_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE5clearEv = comdat any

$_ZNK4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE5emptyEv = comdat any

$_ZNK4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE4sizeEv = comdat any

$_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE10invalidateEv = comdat any

$_ZNSt11_Deque_baseIPN4MARC11ThreadCTaskESaIS2_EE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE17_M_initialize_mapEm = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEED2Ev = comdat any

$_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EED2Ev = comdat any

$_ZN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEED2Ev = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE6tryPopERS5_ = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE7waitPopEv = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE4pushES5_ = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE8waitPushES5_l = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE5clearEv = comdat any

$_ZNK4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE5emptyEv = comdat any

$_ZNK4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE4sizeEv = comdat any

$_ZNK4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE7isValidEv = comdat any

$_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE10invalidateEv = comdat any

$_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE17_M_reallocate_mapEmb = comdat any

$_ZN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE10invalidateEv = comdat any

$_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE6tryPopERS2_ = comdat any

$_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopEv = comdat any

$_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE4pushES2_ = comdat any

$_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE8waitPushES2_l = comdat any

$_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE5clearEv = comdat any

$_ZNK4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE5emptyEv = comdat any

$_ZNK4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE4sizeEv = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ = comdat any

$_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIaEC2Ev = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIsEC2Ev = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIiEC2Ev = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIlEC2Ev = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIaED2Ev = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIsED2Ev = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIiED2Ev = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIlED2Ev = comdat any

$_ZNK4MARC15ThreadSafeQueueIlE7isValidEv = comdat any

$_ZN4MARC15ThreadSafeQueueIlE10invalidateEv = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIlE6tryPopERl = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIlE7waitPopERl = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIlE7waitPopEv = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIlE4pushEl = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIlE8waitPushEll = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIlE5clearEv = comdat any

$_ZNK4MARC23ThreadSafeLockFreeQueueIlE5emptyEv = comdat any

$_ZNK4MARC23ThreadSafeLockFreeQueueIlE4sizeEv = comdat any

$_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl = comdat any

$_ZN10moodycamel17ReaderWriterQueueIlLm512EE11try_dequeueIlEEbRT_ = comdat any

$_ZN10moodycamel17ReaderWriterQueueIlLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKlEEEbDpOT0_ = comdat any

$_ZNK4MARC15ThreadSafeQueueIiE7isValidEv = comdat any

$_ZN4MARC15ThreadSafeQueueIiE10invalidateEv = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIiE6tryPopERi = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIiE7waitPopERi = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIiE7waitPopEv = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIiE4pushEi = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIiE8waitPushEil = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIiE5clearEv = comdat any

$_ZNK4MARC23ThreadSafeLockFreeQueueIiE5emptyEv = comdat any

$_ZNK4MARC23ThreadSafeLockFreeQueueIiE4sizeEv = comdat any

$_ZN10moodycamel17ReaderWriterQueueIiLm512EE11try_dequeueIiEEbRT_ = comdat any

$_ZN10moodycamel17ReaderWriterQueueIiLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKiEEEbDpOT0_ = comdat any

$_ZNK4MARC15ThreadSafeQueueIsE7isValidEv = comdat any

$_ZN4MARC15ThreadSafeQueueIsE10invalidateEv = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIsE6tryPopERs = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIsE7waitPopERs = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIsE7waitPopEv = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIsE4pushEs = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIsE8waitPushEsl = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIsE5clearEv = comdat any

$_ZNK4MARC23ThreadSafeLockFreeQueueIsE5emptyEv = comdat any

$_ZNK4MARC23ThreadSafeLockFreeQueueIsE4sizeEv = comdat any

$_ZN10moodycamel17ReaderWriterQueueIsLm512EE11try_dequeueIsEEbRT_ = comdat any

$_ZN10moodycamel17ReaderWriterQueueIsLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKsEEEbDpOT0_ = comdat any

$_ZNK4MARC15ThreadSafeQueueIaE7isValidEv = comdat any

$_ZN4MARC15ThreadSafeQueueIaE10invalidateEv = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIaE6tryPopERa = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIaE7waitPopERa = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIaE7waitPopEv = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIaE4pushEa = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIaE8waitPushEal = comdat any

$_ZN4MARC23ThreadSafeLockFreeQueueIaE5clearEv = comdat any

$_ZNK4MARC23ThreadSafeLockFreeQueueIaE5emptyEv = comdat any

$_ZNK4MARC23ThreadSafeLockFreeQueueIaE4sizeEv = comdat any

$_ZN10moodycamel17ReaderWriterQueueIaLm512EE11try_dequeueIaEEbRT_ = comdat any

$_ZN10moodycamel17ReaderWriterQueueIaLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKaEEEbDpOT0_ = comdat any

$_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIsSaIsEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIaSaIaEE17_M_initialize_mapEm = comdat any

$_ZTIN4MARC11IThreadTaskE = comdat any

$_ZTSN4MARC11IThreadTaskE = comdat any

$_ZTIN4MARC19ThreadPoolInterfaceE = comdat any

$_ZTSN4MARC19ThreadPoolInterfaceE = comdat any

$_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEE = comdat any

$_ZTINSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEE = comdat any

$_ZTSNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEE = comdat any

$_ZTIN4MARC14ThreadPoolForCE = comdat any

$_ZTSN4MARC14ThreadPoolForCE = comdat any

$_ZTVN4MARC14ThreadPoolForCE = comdat any

$_ZTVN4MARC19ThreadPoolInterfaceE = comdat any

$_ZTVN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE = comdat any

$_ZTVN4MARC15ThreadSafeQueueISt8functionIFvvEEEE = comdat any

$_ZTIN4MARC15ThreadSafeQueueISt8functionIFvvEEEE = comdat any

$_ZTSN4MARC15ThreadSafeQueueISt8functionIFvvEEEE = comdat any

$_ZTIN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE = comdat any

$_ZTSN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE = comdat any

$_ZTVN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEEE = comdat any

$_ZTVN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE = comdat any

$_ZTIN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE = comdat any

$_ZTSN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE = comdat any

$_ZTIN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEEE = comdat any

$_ZTSN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEEE = comdat any

$_ZTVN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = comdat any

$_ZTVN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = comdat any

$_ZTIN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = comdat any

$_ZTSN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = comdat any

$_ZTIN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = comdat any

$_ZTSN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = comdat any

$_ZTVN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEEE = comdat any

$_ZTIN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEEE = comdat any

$_ZTSN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEEE = comdat any

$_ZTVN4MARC23ThreadSafeLockFreeQueueIlEE = comdat any

$_ZTVN4MARC15ThreadSafeQueueIlEE = comdat any

$_ZTIN4MARC15ThreadSafeQueueIlEE = comdat any

$_ZTSN4MARC15ThreadSafeQueueIlEE = comdat any

$_ZTIN4MARC23ThreadSafeLockFreeQueueIlEE = comdat any

$_ZTSN4MARC23ThreadSafeLockFreeQueueIlEE = comdat any

$_ZTVN4MARC23ThreadSafeLockFreeQueueIiEE = comdat any

$_ZTVN4MARC15ThreadSafeQueueIiEE = comdat any

$_ZTIN4MARC15ThreadSafeQueueIiEE = comdat any

$_ZTSN4MARC15ThreadSafeQueueIiEE = comdat any

$_ZTIN4MARC23ThreadSafeLockFreeQueueIiEE = comdat any

$_ZTSN4MARC23ThreadSafeLockFreeQueueIiEE = comdat any

$_ZTVN4MARC23ThreadSafeLockFreeQueueIsEE = comdat any

$_ZTVN4MARC15ThreadSafeQueueIsEE = comdat any

$_ZTIN4MARC15ThreadSafeQueueIsEE = comdat any

$_ZTSN4MARC15ThreadSafeQueueIsEE = comdat any

$_ZTIN4MARC23ThreadSafeLockFreeQueueIsEE = comdat any

$_ZTSN4MARC23ThreadSafeLockFreeQueueIsEE = comdat any

$_ZTVN4MARC23ThreadSafeLockFreeQueueIaEE = comdat any

$_ZTVN4MARC15ThreadSafeQueueIaEE = comdat any

$_ZTIN4MARC15ThreadSafeQueueIaEE = comdat any

$_ZTSN4MARC15ThreadSafeQueueIaEE = comdat any

$_ZTIN4MARC23ThreadSafeLockFreeQueueIaEE = comdat any

$_ZTSN4MARC23ThreadSafeLockFreeQueueIaEE = comdat any

@fftblock = common dso_local local_unnamed_addr global i32 0, align 4
@fftblockpad = common dso_local local_unnamed_addr global i32 0, align 4
@elapsed = common dso_local local_unnamed_addr global [64 x double] zeroinitializer, align 16
@start = common dso_local local_unnamed_addr global [64 x double] zeroinitializer, align 16
@dims.2.0 = internal unnamed_addr global i1 false, align 8
@dims.2.1 = internal unnamed_addr global i1 false, align 8
@dims.2.2 = internal unnamed_addr global i1 false, align 8
@zstart.2 = internal unnamed_addr global i1 false, align 4
@ystart.2 = internal unnamed_addr global i1 false, align 4
@xstart.2 = internal unnamed_addr global i1 false, align 4
@main.indexmap = internal unnamed_addr global [256 x [256 x [512 x i32]]] zeroinitializer, align 16
@ex = internal unnamed_addr global [1966081 x double] zeroinitializer, align 16
@dims.0.0 = internal unnamed_addr global i1 false, align 16
@niter = internal unnamed_addr global i1 false, align 4
@dims.1.2 = internal unnamed_addr global i1 false, align 8
@dims.1.0 = internal unnamed_addr global i1 false, align 16
@dims.1.1 = internal unnamed_addr global i1 false, align 16
@dims.0.2 = internal unnamed_addr global i1 false, align 8
@dims.0.1 = internal unnamed_addr global i1 false, align 16
@xstart.0 = internal unnamed_addr global i1 false, align 4
@xend.0 = internal unnamed_addr global i1 false, align 4
@ystart.0 = internal unnamed_addr global i1 false, align 4
@yend.0 = internal unnamed_addr global i1 false, align 4
@zstart.0 = internal unnamed_addr global i1 false, align 4
@zend.0 = internal unnamed_addr global i1 false, align 4
@main.u0 = internal unnamed_addr global [256 x [256 x [512 x %struct.dcomplex]]] zeroinitializer, align 16
@main.u1 = internal unnamed_addr global [256 x [256 x [512 x %struct.dcomplex]]] zeroinitializer, align 16
@main.u2 = internal unnamed_addr global [256 x [256 x [512 x %struct.dcomplex]]] zeroinitializer, align 16
@sums = internal unnamed_addr global [21 x %struct.dcomplex] zeroinitializer, align 16
@.str.14 = private unnamed_addr constant [40 x i8] c"T = %5d     Checksum = %22.12e %22.12e\0A\00", align 1
@__const.verify.vdata_real_b = private unnamed_addr constant [21 x double] [double 0.000000e+00, double 0x40802E1D67491D27, double 0x40801B9DF5E01838, double 0x408015209C2AC008, double 0x408011E72B556FFE, double 0x40800FB38AA32FE6, double 0x40800DF0531A9C48, double 0x40800C700989200D, double 0x40800B20F5210ADA, double 0x408009FA001E667B, double 0x408008F54B8BB893, double 0x4080080E66C1709C, double 0x40800741A55F37AD, double 0x4080068BDAC33674, double 0x408005EA3C919C43, double 0x4080055A545A3920, double 0x408004D9F6B6B8E1, double 0x408004673C213244, double 0x408004007A3FD0EA, double 0x408003A43D5F793B, double 0x40800351422D2EDF], align 16
@__const.verify.vdata_imag_b = private unnamed_addr constant [21 x double] [double 0.000000e+00, double 0x407FBC7C4BF0AFB0, double 0x407FCD32F7994D45, double 0x407FD9EF2BAE169A, double 0x407FE1A32DF83794, double 0x407FE65CD1D86E4E, double 0x407FE9844F14C8E1, double 0x407FEBD8BF0DD370, double 0x407FEDB8F6EE292B, double 0x407FEF52DA70C18D, double 0x407FF0BC8A6C6119, double 0x407FF200FF33D23F, double 0x407FF3261FE7F7AD, double 0x407FF42F9BEB8DC0, double 0x407FF5203263B154, double 0x407FF5FA3C741F6E, double 0x407FF6BFE1A61501, double 0x407FF77327A3F7B0, double 0x407FF815F3F1C1DE, double 0x407FF8AA099402A0, double 0x407FF93106A352EE], align 16
@str.1 = private unnamed_addr constant [27 x i8] c"Result verification failed\00", align 1
@str.2 = private unnamed_addr constant [31 x i8] c"Result verification successful\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"class = %1c\0A\00", align 1
@.str = private unnamed_addr constant [3 x i8] c"FT\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"          floating point\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"3.0 structured\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"03 Apr 2023\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"gclang\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"-I../common\00", align 1
@.str.7 = private unnamed_addr constant [36 x i8] c"-g -O1 -Xclang -disable-llvm-passes\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"-lm -mcmodel=large\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"randdp\00", align 1
@.str.1.19 = private unnamed_addr constant [27 x i8] c"\0A\0A %s Benchmark Completed\0A\00", align 1
@.str.2.20 = private unnamed_addr constant [46 x i8] c" Class           =                        %c\0A\00", align 1
@.str.3.21 = private unnamed_addr constant [37 x i8] c" Size            =             %12d\0A\00", align 1
@.str.4.22 = private unnamed_addr constant [45 x i8] c" Size            =              %3dx%3dx%3d\0A\00", align 1
@.str.5.23 = private unnamed_addr constant [37 x i8] c" Iterations      =             %12d\0A\00", align 1
@.str.6.24 = private unnamed_addr constant [37 x i8] c" Threads         =             %12d\0A\00", align 1
@.str.7.25 = private unnamed_addr constant [39 x i8] c" Time in seconds =             %12.2f\0A\00", align 1
@.str.8.26 = private unnamed_addr constant [39 x i8] c" Mop/s total     =             %12.2f\0A\00", align 1
@.str.9.27 = private unnamed_addr constant [25 x i8] c" Operation type  = %24s\0A\00", align 1
@str.3 = private unnamed_addr constant [44 x i8] c" Verification    =             UNSUCCESSFUL\00", align 1
@str.5 = private unnamed_addr constant [44 x i8] c" Verification    =               SUCCESSFUL\00", align 1
@.str.12.30 = private unnamed_addr constant [35 x i8] c" Version         =           %12s\0A\00", align 1
@.str.13.31 = private unnamed_addr constant [37 x i8] c" Compile date    =             %12s\0A\00", align 1
@str.4 = private unnamed_addr constant [19 x i8] c"\0A Compile options:\00", align 1
@.str.15.33 = private unnamed_addr constant [23 x i8] c"    CC           = %s\0A\00", align 1
@.str.16.34 = private unnamed_addr constant [23 x i8] c"    CLINK        = %s\0A\00", align 1
@.str.17.35 = private unnamed_addr constant [23 x i8] c"    C_LIB        = %s\0A\00", align 1
@.str.18.36 = private unnamed_addr constant [23 x i8] c"    C_INC        = %s\0A\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"    CFLAGS       = %s\0A\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"    CLINKFLAGS   = %s\0A\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"    RAND         = %s\0A\00", align 1
@wtime_.sec = internal unnamed_addr global i32 -1, align 4
@.str.13 = private unnamed_addr constant [99 x i8] c"CFFTZ: Either U has not been initialized, or else\0Aone of the input parameters is invalid%5d%5d%5d\0A\00", align 1
@u = internal unnamed_addr global [512 x %struct.dcomplex] zeroinitializer, align 16
@compute_initial_conditions.tmp = internal unnamed_addr global [524289 x double] zeroinitializer, align 16
@str = private unnamed_addr constant [75 x i8] c"\0A\0A NAS Parallel Benchmarks 3.0 structured OpenMP C version - FT Benchmark\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c" Size                : %3dx%3dx%3d\0A\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c" Iterations          :     %7d\0A\00", align 1
@_ZTVN4MARC11ThreadCTaskE = dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC11ThreadCTaskE to i8*), i8* bitcast (void (%"class.MARC::ThreadCTask"*)* @_ZN4MARC11ThreadCTask7executeEv to i8*), i8* bitcast (void (%"class.MARC::IThreadTask"*)* @_ZN4MARC11IThreadTaskD2Ev to i8*), i8* bitcast (void (%"class.MARC::ThreadCTask"*)* @_ZN4MARC11ThreadCTaskD0Ev to i8*)] }, align 8
@_ZTIN4MARC11ThreadCTaskE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZTSN4MARC11ThreadCTaskE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC11IThreadTaskE to i8*) }, align 8
@_ZSt4cerr = external dso_local global %"class.std::basic_ostream", align 8
@.str.10 = private unnamed_addr constant [51 x i8] c"ThreadPool: Error calling pthread_setaffinity_np: \00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN4MARC11ThreadCTaskE = dso_local constant [21 x i8] c"N4MARC11ThreadCTaskE\00", align 1
@_ZTIN4MARC11IThreadTaskE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZTSN4MARC11IThreadTaskE, i32 0, i32 0) }, comdat, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSN4MARC11IThreadTaskE = linkonce_odr dso_local constant [21 x i8] c"N4MARC11IThreadTaskE\00", comdat, align 1
@_ZTVN4MARC10ThreadPoolE = dso_local unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC10ThreadPoolE to i8*), i8* bitcast (i64 (%"class.MARC::ThreadPool"*)* @_ZNK4MARC10ThreadPool33numberOfTasksWaitingToBeProcessedEv to i8*), i8* bitcast (void (%"class.MARC::ThreadPool"*, %"struct.std::atomic"*, i32)* @_ZN4MARC10ThreadPool14workerFunctionEPSt6atomicIbEj to i8*)] }, align 8
@_ZTIN4MARC10ThreadPoolE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTSN4MARC10ThreadPoolE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC19ThreadPoolInterfaceE to i8*) }, align 8
@_ZTSN4MARC10ThreadPoolE = dso_local constant [20 x i8] c"N4MARC10ThreadPoolE\00", align 1
@_ZTIN4MARC19ThreadPoolInterfaceE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN4MARC19ThreadPoolInterfaceE, i32 0, i32 0) }, comdat, align 8
@_ZTSN4MARC19ThreadPoolInterfaceE = linkonce_odr dso_local constant [29 x i8] c"N4MARC19ThreadPoolInterfaceE\00", comdat, align 1
@_ZTVN4MARC25ThreadPoolForCSingleQueueE = dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC25ThreadPoolForCSingleQueueE to i8*), i8* bitcast (i64 (%"class.MARC::ThreadPoolForCSingleQueue"*)* @_ZNK4MARC25ThreadPoolForCSingleQueue33numberOfTasksWaitingToBeProcessedEv to i8*), i8* bitcast (void (%"class.MARC::ThreadPoolForCSingleQueue"*, %"struct.std::atomic"*, i32)* @_ZN4MARC25ThreadPoolForCSingleQueue14workerFunctionEPSt6atomicIbEj to i8*), i8* bitcast (void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)* @_ZN4MARC25ThreadPoolForCSingleQueue15submitAndDetachEPFvPvES1_ to i8*)] }, align 8
@_ZTIN4MARC25ThreadPoolForCSingleQueueE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZTSN4MARC25ThreadPoolForCSingleQueueE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC14ThreadPoolForCE to i8*) }, align 8
@.str.1.11 = private unnamed_addr constant [14 x i8] c"!this->m_done\00", align 1
@.str.2.12 = private unnamed_addr constant [57 x i8] c"../../include/threadpool/include/ThreadPoolInterface.hpp\00", align 1
@__PRETTY_FUNCTION__._ZN4MARC19ThreadPoolInterface10expandPoolEv = private unnamed_addr constant [45 x i8] c"void MARC::ThreadPoolInterface::expandPool()\00", align 1
@__PRETTY_FUNCTION__._ZN4MARC19ThreadPoolInterface10newThreadsEj = private unnamed_addr constant [58 x i8] c"void MARC::ThreadPoolInterface::newThreads(std::uint32_t)\00", align 1
@_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTINSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEE to i8*), i8* bitcast (void (%"class.MARC::IThreadTask"*)* @_ZNSt6thread6_StateD2Ev to i8*), i8* bitcast (void (%"struct.std::thread::_State_impl"*)* @_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEED0Ev to i8*), i8* bitcast (void (%"struct.std::thread::_State_impl"*)* @_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEE6_M_runEv to i8*)] }, comdat, align 8
@_ZTINSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([108 x i8], [108 x i8]* @_ZTSNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEE, i32 0, i32 0), i8* bitcast (i8** @_ZTINSt6thread6_StateE to i8*) }, comdat, align 8
@_ZTSNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEE = linkonce_odr dso_local constant [108 x i8] c"NSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEE\00", comdat, align 1
@_ZTINSt6thread6_StateE = external dso_local constant i8*
@_ZTSN4MARC25ThreadPoolForCSingleQueueE = dso_local constant [35 x i8] c"N4MARC25ThreadPoolForCSingleQueueE\00", align 1
@_ZTIN4MARC14ThreadPoolForCE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN4MARC14ThreadPoolForCE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC19ThreadPoolInterfaceE to i8*) }, comdat, align 8
@_ZTSN4MARC14ThreadPoolForCE = linkonce_odr dso_local constant [24 x i8] c"N4MARC14ThreadPoolForCE\00", comdat, align 1
@_ZTVN4MARC25ThreadPoolForCMultiQueuesE = dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC25ThreadPoolForCMultiQueuesE to i8*), i8* bitcast (i64 (%"class.MARC::ThreadPoolForCMultiQueues"*)* @_ZNK4MARC25ThreadPoolForCMultiQueues33numberOfTasksWaitingToBeProcessedEv to i8*), i8* bitcast (void (%"class.MARC::ThreadPoolForCMultiQueues"*, %"struct.std::atomic"*, i32)* @_ZN4MARC25ThreadPoolForCMultiQueues14workerFunctionEPSt6atomicIbEj to i8*), i8* bitcast (void (%"class.MARC::ThreadPoolForCMultiQueues"*, void (i8*)*, i8*)* @_ZN4MARC25ThreadPoolForCMultiQueues15submitAndDetachEPFvPvES1_ to i8*)] }, align 8
@_ZTIN4MARC25ThreadPoolForCMultiQueuesE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZTSN4MARC25ThreadPoolForCMultiQueuesE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC14ThreadPoolForCE to i8*) }, align 8
@_ZZN4MARC25ThreadPoolForCMultiQueues15submitAndDetachEPFvPvES1_E12nextLocality = internal unnamed_addr global i32 0, align 4
@.str.21.13 = private unnamed_addr constant [74 x i8] c"vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)\00", align 1
@_ZTSN4MARC25ThreadPoolForCMultiQueuesE = dso_local constant [35 x i8] c"N4MARC25ThreadPoolForCMultiQueuesE\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_Parallelizer_utils.cpp, i8* null }]
@_ZStL8__ioinit = internal global %"struct.std::__atomic_base" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZL7runtime = internal global %class.NoelleRuntime zeroinitializer, align 8
@_ZTVN4MARC14ThreadPoolForCE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC14ThreadPoolForCE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN4MARC19ThreadPoolInterfaceE = linkonce_odr dso_local unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC19ThreadPoolInterfaceE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.3.14 = private unnamed_addr constant [13 x i8] c"this->m_done\00", align 1
@__PRETTY_FUNCTION__._ZN4MARC19ThreadPoolInterfaceD2Ev = private unnamed_addr constant [50 x i8] c"MARC::ThreadPoolInterface::~ThreadPoolInterface()\00", align 1
@_ZTVN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue"*, %"class.std::function"*)* @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE6tryPopERS3_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue"*, %"class.std::function"*)* @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE7waitPopERS3_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue"*)* @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE7waitPopEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeMutexQueue"*, %"class.std::function"*)* @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE4pushES3_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue"*, %"class.std::function"*, i64)* @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE8waitPushES3_l to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeMutexQueue"*)* @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE5clearEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue"*)* @_ZNK4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE5emptyEv to i8*), i8* bitcast (i64 (%"class.MARC::ThreadSafeMutexQueue"*)* @_ZNK4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE4sizeEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue"*)* @_ZNK4MARC15ThreadSafeQueueISt8functionIFvvEEE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeMutexQueue"*)* @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE10invalidateEv to i8*)] }, comdat, align 8
@_ZTVN4MARC15ThreadSafeQueueISt8functionIFvvEEEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueISt8functionIFvvEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue"*)* @_ZNK4MARC15ThreadSafeQueueISt8functionIFvvEEE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue"*)* @_ZN4MARC15ThreadSafeQueueISt8functionIFvvEEE10invalidateEv to i8*)] }, comdat, align 8
@_ZTIN4MARC15ThreadSafeQueueISt8functionIFvvEEEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @_ZTSN4MARC15ThreadSafeQueueISt8functionIFvvEEEE, i32 0, i32 0) }, comdat, align 8
@_ZTSN4MARC15ThreadSafeQueueISt8functionIFvvEEEE = linkonce_odr dso_local constant [44 x i8] c"N4MARC15ThreadSafeQueueISt8functionIFvvEEEE\00", comdat, align 1
@_ZTIN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @_ZTSN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueISt8functionIFvvEEEE to i8*) }, comdat, align 8
@_ZTSN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE = linkonce_odr dso_local constant [49 x i8] c"N4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE\00", comdat, align 1
@_ZTVN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEEE to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue.28"*, %"class.MARC::ThreadCTask"**)* @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE6tryPopERS2_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue.28"*, %"class.MARC::ThreadCTask"**)* @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE7waitPopERS2_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue.28"*)* @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE7waitPopEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeMutexQueue.28"*, %"class.MARC::ThreadCTask"*)* @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE4pushES2_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue.28"*, %"class.MARC::ThreadCTask"*, i64)* @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE8waitPushES2_l to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeMutexQueue.28"*)* @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE5clearEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue.28"*)* @_ZNK4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE5emptyEv to i8*), i8* bitcast (i64 (%"class.MARC::ThreadSafeMutexQueue.28"*)* @_ZNK4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE4sizeEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.29"*)* @_ZNK4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeMutexQueue.28"*)* @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE10invalidateEv to i8*)] }, comdat, align 8
@_ZTVN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.29"*)* @_ZNK4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue.29"*)* @_ZN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEE10invalidateEv to i8*)] }, comdat, align 8
@_ZTIN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @_ZTSN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE, i32 0, i32 0) }, comdat, align 8
@_ZTSN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE = linkonce_odr dso_local constant [45 x i8] c"N4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE\00", comdat, align 1
@_ZTIN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @_ZTSN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE to i8*) }, comdat, align 8
@_ZTSN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEEE = linkonce_odr dso_local constant [50 x i8] c"N4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEEE\00", comdat, align 1
@_ZZN13NoelleRuntime23getMaximumNumberOfCoresEvE5cores = internal unnamed_addr global i32 0, align 4
@.str.15 = private unnamed_addr constant [13 x i8] c"NOELLE_CORES\00", align 1
@_ZTVN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.12"*)* @_ZNK4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue.12"*)* @_ZN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE10invalidateEv to i8*)] }, comdat, align 8
@_ZTVN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue.11"*, %"class.std::unique_ptr"*)* @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE6tryPopERS5_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue.11"*, %"class.std::unique_ptr"*)* @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE7waitPopERS5_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue.11"*)* @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE7waitPopEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeMutexQueue.11"*, %"class.std::unique_ptr"*)* @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE4pushES5_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue.11"*, %"class.std::unique_ptr"*, i64)* @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE8waitPushES5_l to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeMutexQueue.11"*)* @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE5clearEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeMutexQueue.11"*)* @_ZNK4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE5emptyEv to i8*), i8* bitcast (i64 (%"class.MARC::ThreadSafeMutexQueue.11"*)* @_ZNK4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE4sizeEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.12"*)* @_ZNK4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeMutexQueue.11"*)* @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE10invalidateEv to i8*)] }, comdat, align 8
@_ZTIN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @_ZTSN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE to i8*) }, comdat, align 8
@_ZTSN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = linkonce_odr dso_local constant [88 x i8] c"N4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE\00", comdat, align 1
@_ZTIN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @_ZTSN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE, i32 0, i32 0) }, comdat, align 8
@_ZTSN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE = linkonce_odr dso_local constant [83 x i8] c"N4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE\00", comdat, align 1
@_ZTVN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEEE to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadCTask"**)* @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE6tryPopERS2_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadCTask"**)* @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeSpinLockQueue"*)* @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadCTask"*)* @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE4pushES2_ to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadCTask"*, i64)* @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE8waitPushES2_l to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeSpinLockQueue"*)* @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE5clearEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeSpinLockQueue"*)* @_ZNK4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE5emptyEv to i8*), i8* bitcast (i64 (%"class.MARC::ThreadSafeSpinLockQueue"*)* @_ZNK4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE4sizeEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.29"*)* @_ZNK4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue.29"*)* @_ZN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEE10invalidateEv to i8*)] }, comdat, align 8
@_ZTIN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @_ZTSN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE to i8*) }, comdat, align 8
@_ZTSN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEEE = linkonce_odr dso_local constant [53 x i8] c"N4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEEE\00", comdat, align 1
@.str.5.15 = private unnamed_addr constant [10 x i8] c"Reached: \00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@.str.7.16 = private unnamed_addr constant [13 x i8] c"Reached: %d\0A\00", align 1
@.str.8.17 = private unnamed_addr constant [12 x i8] c"Pushed: %p\0A\00", align 1
@.str.9.18 = private unnamed_addr constant [12 x i8] c"Pulled: %p\0A\00", align 1
@.str.14.21 = private unnamed_addr constant [53 x i8] c"this->NOELLE_idleCores <= ((uint32_t)this->maxCores)\00", align 1
@.str.11.22 = private unnamed_addr constant [23 x i8] c"Parallelizer_utils.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN13NoelleRuntime12releaseCoresEj = private unnamed_addr constant [43 x i8] c"void NoelleRuntime::releaseCores(uint32_t)\00", align 1
@.str.38 = private unnamed_addr constant [28 x i8] c"vector<bool>::_M_insert_aux\00", align 1
@.str.13.23 = private unnamed_addr constant [18 x i8] c"coresReleased > 0\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"parallelizedLoop != NULL\00", align 1
@__PRETTY_FUNCTION__._ZL23NOELLE_HELIX_dispatcherPFvPvS_S_S_llPmES_S_llb = private unnamed_addr constant [151 x i8] c"DispatcherInfo NOELLE_HELIX_dispatcher(void (*)(void *, void *, void *, void *, int64_t, int64_t, uint64_t *), void *, void *, int64_t, int64_t, bool)\00", align 1
@.str.17.24 = private unnamed_addr constant [12 x i8] c"env != NULL\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"maxNumberOfCores > 1\00", align 1
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.19.25 = private unnamed_addr constant [89 x i8] c"HELIX: dispatcher: ERROR = not enough memory to allocate %lld sequential segment arrays\0A\00", align 1
@.str.12.26 = private unnamed_addr constant [38 x i8] c"NOELLE: Runtime: QUEUE SIZE INCORRECT\00", align 1
@_ZTVN4MARC23ThreadSafeLockFreeQueueIlEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC23ThreadSafeLockFreeQueueIlEE to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.115"*, i64*)* @_ZN4MARC23ThreadSafeLockFreeQueueIlE6tryPopERl to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.115"*, i64*)* @_ZN4MARC23ThreadSafeLockFreeQueueIlE7waitPopERl to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.115"*)* @_ZN4MARC23ThreadSafeLockFreeQueueIlE7waitPopEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeLockFreeQueue.115"*, i64)* @_ZN4MARC23ThreadSafeLockFreeQueueIlE4pushEl to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.115"*, i64, i64)* @_ZN4MARC23ThreadSafeLockFreeQueueIlE8waitPushEll to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeLockFreeQueue.115"*)* @_ZN4MARC23ThreadSafeLockFreeQueueIlE5clearEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.115"*)* @_ZNK4MARC23ThreadSafeLockFreeQueueIlE5emptyEv to i8*), i8* bitcast (i64 (%"class.MARC::ThreadSafeLockFreeQueue.115"*)* @_ZNK4MARC23ThreadSafeLockFreeQueueIlE4sizeEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.87"*)* @_ZNK4MARC15ThreadSafeQueueIlE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue.87"*)* @_ZN4MARC15ThreadSafeQueueIlE10invalidateEv to i8*)] }, comdat, align 8
@_ZTVN4MARC15ThreadSafeQueueIlEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueIlEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.87"*)* @_ZNK4MARC15ThreadSafeQueueIlE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue.87"*)* @_ZN4MARC15ThreadSafeQueueIlE10invalidateEv to i8*)] }, comdat, align 8
@_ZTIN4MARC15ThreadSafeQueueIlEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN4MARC15ThreadSafeQueueIlEE, i32 0, i32 0) }, comdat, align 8
@_ZTSN4MARC15ThreadSafeQueueIlEE = linkonce_odr dso_local constant [28 x i8] c"N4MARC15ThreadSafeQueueIlEE\00", comdat, align 1
@_ZTIN4MARC23ThreadSafeLockFreeQueueIlEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSN4MARC23ThreadSafeLockFreeQueueIlEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueIlEE to i8*) }, comdat, align 8
@.str.30 = private unnamed_addr constant [8 x i8] c"success\00", align 1
@.str.24 = private unnamed_addr constant [71 x i8] c"../../include/threadpool/include/readerwriterqueue/readerwriterqueue.h\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIlLm512EE18wait_dequeue_timedIlEEbRT_l = private unnamed_addr constant [136 x i8] c"bool moodycamel::BlockingReaderWriterQueue<long, 512>::wait_dequeue_timed(U &, std::int64_t) [T = long, MAX_BLOCK_SIZE = 512, U = long]\00", align 1
@.str.33 = private unnamed_addr constant [120 x i8] c"!inSection && \22ReaderWriterQueue does not support enqueuing or dequeuing elements from other elements' ctors and dtors\22\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIlLm512EE14ReentrantGuardC2ERb = private unnamed_addr constant [114 x i8] c"moodycamel::ReaderWriterQueue<long, 512>::ReentrantGuard::ReentrantGuard(bool &) [T = long, MAX_BLOCK_SIZE = 512]\00", align 1
@.str.31 = private unnamed_addr constant [32 x i8] c"nextBlockFront != nextBlockTail\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIlLm512EE11try_dequeueIlEEbRT_ = private unnamed_addr constant [107 x i8] c"bool moodycamel::ReaderWriterQueue<long, 512>::try_dequeue(U &) [T = long, MAX_BLOCK_SIZE = 512, U = long]\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"oldCount >= -1\00", align 1
@.str.28 = private unnamed_addr constant [63 x i8] c"../../include/threadpool/include/readerwriterqueue/atomicops.h\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel9spsc_sema20LightweightSemaphore6signalEl = private unnamed_addr constant [111 x i8] c"void moodycamel::spsc_sema::LightweightSemaphore::signal(moodycamel::spsc_sema::LightweightSemaphore::ssize_t)\00", align 1
@.str.34 = private unnamed_addr constant [32 x i8] c"nextBlockFront == nextBlockTail\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIlLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKlEEEbDpOT0_ = private unnamed_addr constant [192 x i8] c"bool moodycamel::ReaderWriterQueue<long, 512>::inner_enqueue(Args &&...) [T = long, MAX_BLOCK_SIZE = 512, canAlloc = moodycamel::ReaderWriterQueue<long, 512>::CanAlloc, Args = <const long &>]\00", align 1
@.str.35 = private unnamed_addr constant [21 x i8] c"newBlock->front == 0\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIlLm512EE11try_dequeueIlEEbRT_ = private unnamed_addr constant [115 x i8] c"bool moodycamel::BlockingReaderWriterQueue<long, 512>::try_dequeue(U &) [T = long, MAX_BLOCK_SIZE = 512, U = long]\00", align 1
@_ZTSN4MARC23ThreadSafeLockFreeQueueIlEE = linkonce_odr dso_local constant [36 x i8] c"N4MARC23ThreadSafeLockFreeQueueIlEE\00", comdat, align 1
@_ZTVN4MARC23ThreadSafeLockFreeQueueIiEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC23ThreadSafeLockFreeQueueIiEE to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.108"*, i32*)* @_ZN4MARC23ThreadSafeLockFreeQueueIiE6tryPopERi to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.108"*, i32*)* @_ZN4MARC23ThreadSafeLockFreeQueueIiE7waitPopERi to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.108"*)* @_ZN4MARC23ThreadSafeLockFreeQueueIiE7waitPopEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeLockFreeQueue.108"*, i32)* @_ZN4MARC23ThreadSafeLockFreeQueueIiE4pushEi to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.108"*, i32, i64)* @_ZN4MARC23ThreadSafeLockFreeQueueIiE8waitPushEil to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeLockFreeQueue.108"*)* @_ZN4MARC23ThreadSafeLockFreeQueueIiE5clearEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.108"*)* @_ZNK4MARC23ThreadSafeLockFreeQueueIiE5emptyEv to i8*), i8* bitcast (i64 (%"class.MARC::ThreadSafeLockFreeQueue.108"*)* @_ZNK4MARC23ThreadSafeLockFreeQueueIiE4sizeEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.78"*)* @_ZNK4MARC15ThreadSafeQueueIiE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue.78"*)* @_ZN4MARC15ThreadSafeQueueIiE10invalidateEv to i8*)] }, comdat, align 8
@_ZTVN4MARC15ThreadSafeQueueIiEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueIiEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.78"*)* @_ZNK4MARC15ThreadSafeQueueIiE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue.78"*)* @_ZN4MARC15ThreadSafeQueueIiE10invalidateEv to i8*)] }, comdat, align 8
@_ZTIN4MARC15ThreadSafeQueueIiEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN4MARC15ThreadSafeQueueIiEE, i32 0, i32 0) }, comdat, align 8
@_ZTSN4MARC15ThreadSafeQueueIiEE = linkonce_odr dso_local constant [28 x i8] c"N4MARC15ThreadSafeQueueIiEE\00", comdat, align 1
@_ZTIN4MARC23ThreadSafeLockFreeQueueIiEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSN4MARC23ThreadSafeLockFreeQueueIiEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueIiEE to i8*) }, comdat, align 8
@__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIiLm512EE18wait_dequeue_timedIiEEbRT_l = private unnamed_addr constant [133 x i8] c"bool moodycamel::BlockingReaderWriterQueue<int, 512>::wait_dequeue_timed(U &, std::int64_t) [T = int, MAX_BLOCK_SIZE = 512, U = int]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIiLm512EE14ReentrantGuardC2ERb = private unnamed_addr constant [112 x i8] c"moodycamel::ReaderWriterQueue<int, 512>::ReentrantGuard::ReentrantGuard(bool &) [T = int, MAX_BLOCK_SIZE = 512]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIiLm512EE11try_dequeueIiEEbRT_ = private unnamed_addr constant [104 x i8] c"bool moodycamel::ReaderWriterQueue<int, 512>::try_dequeue(U &) [T = int, MAX_BLOCK_SIZE = 512, U = int]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIiLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKiEEEbDpOT0_ = private unnamed_addr constant [188 x i8] c"bool moodycamel::ReaderWriterQueue<int, 512>::inner_enqueue(Args &&...) [T = int, MAX_BLOCK_SIZE = 512, canAlloc = moodycamel::ReaderWriterQueue<int, 512>::CanAlloc, Args = <const int &>]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIiLm512EE11try_dequeueIiEEbRT_ = private unnamed_addr constant [112 x i8] c"bool moodycamel::BlockingReaderWriterQueue<int, 512>::try_dequeue(U &) [T = int, MAX_BLOCK_SIZE = 512, U = int]\00", align 1
@_ZTSN4MARC23ThreadSafeLockFreeQueueIiEE = linkonce_odr dso_local constant [36 x i8] c"N4MARC23ThreadSafeLockFreeQueueIiEE\00", comdat, align 1
@_ZTVN4MARC23ThreadSafeLockFreeQueueIsEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC23ThreadSafeLockFreeQueueIsEE to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.101"*, i16*)* @_ZN4MARC23ThreadSafeLockFreeQueueIsE6tryPopERs to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.101"*, i16*)* @_ZN4MARC23ThreadSafeLockFreeQueueIsE7waitPopERs to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.101"*)* @_ZN4MARC23ThreadSafeLockFreeQueueIsE7waitPopEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeLockFreeQueue.101"*, i16)* @_ZN4MARC23ThreadSafeLockFreeQueueIsE4pushEs to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.101"*, i16, i64)* @_ZN4MARC23ThreadSafeLockFreeQueueIsE8waitPushEsl to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeLockFreeQueue.101"*)* @_ZN4MARC23ThreadSafeLockFreeQueueIsE5clearEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue.101"*)* @_ZNK4MARC23ThreadSafeLockFreeQueueIsE5emptyEv to i8*), i8* bitcast (i64 (%"class.MARC::ThreadSafeLockFreeQueue.101"*)* @_ZNK4MARC23ThreadSafeLockFreeQueueIsE4sizeEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.69"*)* @_ZNK4MARC15ThreadSafeQueueIsE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue.69"*)* @_ZN4MARC15ThreadSafeQueueIsE10invalidateEv to i8*)] }, comdat, align 8
@_ZTVN4MARC15ThreadSafeQueueIsEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueIsEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.69"*)* @_ZNK4MARC15ThreadSafeQueueIsE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue.69"*)* @_ZN4MARC15ThreadSafeQueueIsE10invalidateEv to i8*)] }, comdat, align 8
@_ZTIN4MARC15ThreadSafeQueueIsEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN4MARC15ThreadSafeQueueIsEE, i32 0, i32 0) }, comdat, align 8
@_ZTSN4MARC15ThreadSafeQueueIsEE = linkonce_odr dso_local constant [28 x i8] c"N4MARC15ThreadSafeQueueIsEE\00", comdat, align 1
@_ZTIN4MARC23ThreadSafeLockFreeQueueIsEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSN4MARC23ThreadSafeLockFreeQueueIsEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueIsEE to i8*) }, comdat, align 8
@__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIsLm512EE18wait_dequeue_timedIsEEbRT_l = private unnamed_addr constant [139 x i8] c"bool moodycamel::BlockingReaderWriterQueue<short, 512>::wait_dequeue_timed(U &, std::int64_t) [T = short, MAX_BLOCK_SIZE = 512, U = short]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIsLm512EE14ReentrantGuardC2ERb = private unnamed_addr constant [116 x i8] c"moodycamel::ReaderWriterQueue<short, 512>::ReentrantGuard::ReentrantGuard(bool &) [T = short, MAX_BLOCK_SIZE = 512]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIsLm512EE11try_dequeueIsEEbRT_ = private unnamed_addr constant [110 x i8] c"bool moodycamel::ReaderWriterQueue<short, 512>::try_dequeue(U &) [T = short, MAX_BLOCK_SIZE = 512, U = short]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIsLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKsEEEbDpOT0_ = private unnamed_addr constant [196 x i8] c"bool moodycamel::ReaderWriterQueue<short, 512>::inner_enqueue(Args &&...) [T = short, MAX_BLOCK_SIZE = 512, canAlloc = moodycamel::ReaderWriterQueue<short, 512>::CanAlloc, Args = <const short &>]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIsLm512EE11try_dequeueIsEEbRT_ = private unnamed_addr constant [118 x i8] c"bool moodycamel::BlockingReaderWriterQueue<short, 512>::try_dequeue(U &) [T = short, MAX_BLOCK_SIZE = 512, U = short]\00", align 1
@_ZTSN4MARC23ThreadSafeLockFreeQueueIsEE = linkonce_odr dso_local constant [36 x i8] c"N4MARC23ThreadSafeLockFreeQueueIsEE\00", comdat, align 1
@_ZTVN4MARC23ThreadSafeLockFreeQueueIaEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4MARC23ThreadSafeLockFreeQueueIaEE to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue"*, i8*)* @_ZN4MARC23ThreadSafeLockFreeQueueIaE6tryPopERa to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue"*, i8*)* @_ZN4MARC23ThreadSafeLockFreeQueueIaE7waitPopERa to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue"*)* @_ZN4MARC23ThreadSafeLockFreeQueueIaE7waitPopEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeLockFreeQueue"*, i8)* @_ZN4MARC23ThreadSafeLockFreeQueueIaE4pushEa to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue"*, i8, i64)* @_ZN4MARC23ThreadSafeLockFreeQueueIaE8waitPushEal to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeLockFreeQueue"*)* @_ZN4MARC23ThreadSafeLockFreeQueueIaE5clearEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeLockFreeQueue"*)* @_ZNK4MARC23ThreadSafeLockFreeQueueIaE5emptyEv to i8*), i8* bitcast (i64 (%"class.MARC::ThreadSafeLockFreeQueue"*)* @_ZNK4MARC23ThreadSafeLockFreeQueueIaE4sizeEv to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.60"*)* @_ZNK4MARC15ThreadSafeQueueIaE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue.60"*)* @_ZN4MARC15ThreadSafeQueueIaE10invalidateEv to i8*)] }, comdat, align 8
@_ZTVN4MARC15ThreadSafeQueueIaEE = linkonce_odr dso_local unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueIaEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.MARC::ThreadSafeQueue.60"*)* @_ZNK4MARC15ThreadSafeQueueIaE7isValidEv to i8*), i8* bitcast (void (%"class.MARC::ThreadSafeQueue.60"*)* @_ZN4MARC15ThreadSafeQueueIaE10invalidateEv to i8*)] }, comdat, align 8
@_ZTIN4MARC15ThreadSafeQueueIaEE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN4MARC15ThreadSafeQueueIaEE, i32 0, i32 0) }, comdat, align 8
@_ZTSN4MARC15ThreadSafeQueueIaEE = linkonce_odr dso_local constant [28 x i8] c"N4MARC15ThreadSafeQueueIaEE\00", comdat, align 1
@_ZTIN4MARC23ThreadSafeLockFreeQueueIaEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSN4MARC23ThreadSafeLockFreeQueueIaEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4MARC15ThreadSafeQueueIaEE to i8*) }, comdat, align 8
@__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIaLm512EE18wait_dequeue_timedIaEEbRT_l = private unnamed_addr constant [157 x i8] c"bool moodycamel::BlockingReaderWriterQueue<signed char, 512>::wait_dequeue_timed(U &, std::int64_t) [T = signed char, MAX_BLOCK_SIZE = 512, U = signed char]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIaLm512EE14ReentrantGuardC2ERb = private unnamed_addr constant [128 x i8] c"moodycamel::ReaderWriterQueue<signed char, 512>::ReentrantGuard::ReentrantGuard(bool &) [T = signed char, MAX_BLOCK_SIZE = 512]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIaLm512EE11try_dequeueIaEEbRT_ = private unnamed_addr constant [128 x i8] c"bool moodycamel::ReaderWriterQueue<signed char, 512>::try_dequeue(U &) [T = signed char, MAX_BLOCK_SIZE = 512, U = signed char]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIaLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKaEEEbDpOT0_ = private unnamed_addr constant [220 x i8] c"bool moodycamel::ReaderWriterQueue<signed char, 512>::inner_enqueue(Args &&...) [T = signed char, MAX_BLOCK_SIZE = 512, canAlloc = moodycamel::ReaderWriterQueue<signed char, 512>::CanAlloc, Args = <const signed char &>]\00", align 1
@__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIaLm512EE11try_dequeueIaEEbRT_ = private unnamed_addr constant [136 x i8] c"bool moodycamel::BlockingReaderWriterQueue<signed char, 512>::try_dequeue(U &) [T = signed char, MAX_BLOCK_SIZE = 512, U = signed char]\00", align 1
@_ZTSN4MARC23ThreadSafeLockFreeQueueIaEE = linkonce_odr dso_local constant [36 x i8] c"N4MARC23ThreadSafeLockFreeQueueIaEE\00", comdat, align 1
@_ZTVSt9bad_alloc = external dso_local unnamed_addr constant { [5 x i8*] }, align 8
@_ZTISt9bad_alloc = external dso_local constant i8*

@_ZN4MARC11ThreadCTaskC1Em = dso_local unnamed_addr alias void (%"class.MARC::ThreadCTask"*, i64), void (%"class.MARC::ThreadCTask"*, i64)* @_ZN4MARC11ThreadCTaskC2Em
@_ZN4MARC11ThreadCTaskC1EmPFvPvES1_ = dso_local unnamed_addr alias void (%"class.MARC::ThreadCTask"*, i64, void (i8*)*, i8*), void (%"class.MARC::ThreadCTask"*, i64, void (i8*)*, i8*)* @_ZN4MARC11ThreadCTaskC2EmPFvPvES1_
@_ZN4MARC11ThreadCTaskC1Em9cpu_set_tPFvPvES2_ = dso_local unnamed_addr alias void (%"class.MARC::ThreadCTask"*, i64, %struct.cpu_set_t*, void (i8*)*, i8*), void (%"class.MARC::ThreadCTask"*, i64, %struct.cpu_set_t*, void (i8*)*, i8*)* @_ZN4MARC11ThreadCTaskC2Em9cpu_set_tPFvPvES2_
@_ZN4MARC19ThreadPoolInterfaceD1Ev = dso_local unnamed_addr alias void (%"class.MARC::ThreadPoolInterface"*), void (%"class.MARC::ThreadPoolInterface"*)* @_ZN4MARC19ThreadPoolInterfaceD2Ev
@_ZN4MARC10ThreadPoolC1Ev = dso_local unnamed_addr alias void (%"class.MARC::ThreadPool"*), void (%"class.MARC::ThreadPool"*)* @_ZN4MARC10ThreadPoolC2Ev
@_ZN4MARC10ThreadPoolC1EbjSt8functionIFvvEE = dso_local unnamed_addr alias void (%"class.MARC::ThreadPool"*, i1, i32, %"class.std::function"*), void (%"class.MARC::ThreadPool"*, i1, i32, %"class.std::function"*)* @_ZN4MARC10ThreadPoolC2EbjSt8functionIFvvEE
@_ZN4MARC10ThreadPoolD1Ev = dso_local unnamed_addr alias void (%"class.MARC::ThreadPool"*), void (%"class.MARC::ThreadPool"*)* @_ZN4MARC10ThreadPoolD2Ev
@_ZN4MARC14ThreadPoolForCD1Ev = dso_local unnamed_addr alias void (%"class.MARC::ThreadPoolForC"*), void (%"class.MARC::ThreadPoolForC"*)* @_ZN4MARC14ThreadPoolForCD2Ev
@_ZN4MARC25ThreadPoolForCSingleQueueC1Ev = dso_local unnamed_addr alias void (%"class.MARC::ThreadPoolForCSingleQueue"*), void (%"class.MARC::ThreadPoolForCSingleQueue"*)* @_ZN4MARC25ThreadPoolForCSingleQueueC2Ev
@_ZN4MARC25ThreadPoolForCSingleQueueC1EbjSt8functionIFvvEE = dso_local unnamed_addr alias void (%"class.MARC::ThreadPoolForCSingleQueue"*, i1, i32, %"class.std::function"*), void (%"class.MARC::ThreadPoolForCSingleQueue"*, i1, i32, %"class.std::function"*)* @_ZN4MARC25ThreadPoolForCSingleQueueC2EbjSt8functionIFvvEE
@_ZN4MARC25ThreadPoolForCSingleQueueD1Ev = dso_local unnamed_addr alias void (%"class.MARC::ThreadPoolForCSingleQueue"*), void (%"class.MARC::ThreadPoolForCSingleQueue"*)* @_ZN4MARC25ThreadPoolForCSingleQueueD2Ev
@_ZN4MARC25ThreadPoolForCMultiQueuesC1Ev = dso_local unnamed_addr alias void (%"class.MARC::ThreadPoolForCMultiQueues"*), void (%"class.MARC::ThreadPoolForCMultiQueues"*)* @_ZN4MARC25ThreadPoolForCMultiQueuesC2Ev
@_ZN4MARC25ThreadPoolForCMultiQueuesC1EbjSt8functionIFvvEE = dso_local unnamed_addr alias void (%"class.MARC::ThreadPoolForCMultiQueues"*, i1, i32, %"class.std::function"*), void (%"class.MARC::ThreadPoolForCMultiQueues"*, i1, i32, %"class.std::function"*)* @_ZN4MARC25ThreadPoolForCMultiQueuesC2EbjSt8functionIFvvEE
@_ZN4MARC25ThreadPoolForCMultiQueuesD1Ev = dso_local unnamed_addr alias void (%"class.MARC::ThreadPoolForCMultiQueues"*), void (%"class.MARC::ThreadPoolForCMultiQueues"*)* @_ZN4MARC25ThreadPoolForCMultiQueuesD2Ev
@_ZN13NoelleRuntimeC1Ev = dso_local unnamed_addr alias void (%class.NoelleRuntime*), void (%class.NoelleRuntime*)* @_ZN13NoelleRuntimeC2Ev
@_ZN13NoelleRuntimeD1Ev = dso_local unnamed_addr alias void (%class.NoelleRuntime*), void (%class.NoelleRuntime*)* @_ZN13NoelleRuntimeD2Ev

; Function Attrs: cold nounwind uwtable
define dso_local i32 @main(i32, i8** nocapture readnone) local_unnamed_addr #0 {
  %3 = alloca double, align 8
  %noelle.loop_environment.i = alloca [32 x i64], align 8
  %4 = alloca double, align 8
  %noelle.loop_environment5 = alloca [40 x i64], align 8
  %5 = bitcast [40 x i64]* %noelle.loop_environment5 to i8*
  %6 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment5, i64 0, i64 8
  %7 = bitcast i64* %6 to [512 x [18 x %struct.dcomplex]]**
  %8 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment5, i64 0, i64 24
  %noelle.loop_environment4 = alloca [40 x i64], align 8
  %9 = bitcast [40 x i64]* %noelle.loop_environment4 to i8*
  %10 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment4, i64 0, i64 8
  %11 = bitcast i64* %10 to [512 x [18 x %struct.dcomplex]]**
  %12 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment4, i64 0, i64 24
  %noelle.loop_environment3 = alloca [40 x i64], align 8
  %13 = bitcast [40 x i64]* %noelle.loop_environment3 to i8*
  %14 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment3, i64 0, i64 8
  %15 = bitcast i64* %14 to [512 x [18 x %struct.dcomplex]]**
  %16 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment3, i64 0, i64 24
  %noelle.loop_environment2 = alloca [40 x i64], align 8
  %17 = bitcast [40 x i64]* %noelle.loop_environment2 to i8*
  %18 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment2, i64 0, i64 8
  %19 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment2, i64 0, i64 24
  %noelle.loop_environment1 = alloca [40 x i64], align 8
  %20 = bitcast [40 x i64]* %noelle.loop_environment1 to i8*
  %21 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment1, i64 0, i64 8
  %22 = bitcast i64* %21 to [512 x [18 x %struct.dcomplex]]**
  %23 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment1, i64 0, i64 24
  %noelle.loop_environment = alloca [40 x i64], align 8
  %24 = bitcast [40 x i64]* %noelle.loop_environment to i8*
  %25 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment, i64 0, i64 8
  %26 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment, i64 0, i64 24
  %27 = alloca [512 x [18 x %struct.dcomplex]], align 16
  %28 = alloca [512 x [18 x %struct.dcomplex]], align 16
  %29 = alloca [512 x [18 x %struct.dcomplex]], align 16
  tail call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([64 x double]* @elapsed to i8*), i8 0, i64 56, i1 false)
  %30 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment5, i64 0, i64 0
  %31 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment5, i64 0, i64 16
  %32 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment5, i64 0, i64 32
  %33 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment4, i64 0, i64 0
  %34 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment4, i64 0, i64 16
  %35 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment4, i64 0, i64 32
  %36 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment3, i64 0, i64 0
  %37 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment3, i64 0, i64 16
  %38 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment3, i64 0, i64 32
  %39 = bitcast [40 x i64]* %noelle.loop_environment2 to [512 x [18 x %struct.dcomplex]]**
  %40 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment2, i64 0, i64 16
  %41 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment2, i64 0, i64 32
  %42 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment1, i64 0, i64 0
  %43 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment1, i64 0, i64 16
  %44 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment1, i64 0, i64 32
  %45 = bitcast [40 x i64]* %noelle.loop_environment to [512 x [18 x %struct.dcomplex]]**
  %46 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment, i64 0, i64 16
  %47 = getelementptr inbounds [40 x i64], [40 x i64]* %noelle.loop_environment, i64 0, i64 32
  tail call fastcc void @setup()
  %.pre.i.b = load i1, i1* @dims.2.0, align 8
  %48 = select i1 %.pre.i.b, i64 512, i64 0
  %.pre4.i.b = load i1, i1* @dims.2.1, align 8
  %49 = select i1 %.pre4.i.b, i64 256, i64 0
  %.pre5.i.b = load i1, i1* @dims.2.2, align 8
  %50 = select i1 %.pre5.i.b, i64 256, i64 0
  br i1 %.pre.i.b, label %.lr.ph6.i, label %.loopexit3._crit_edge.i

.lr.ph6.i:                                        ; preds = %2
  %.b176 = load i1, i1* @ystart.2, align 4
  %.b172 = load i1, i1* @xstart.2, align 4
  %51 = select i1 %.b172, i32 255, i32 254
  %52 = select i1 %.b176, i32 127, i32 126
  %or.cond = and i1 %.pre4.i.b, %.pre5.i.b
  br i1 %or.cond, label %.lr.ph6.split.us.i.us.preheader, label %.loopexit3._crit_edge.i

.lr.ph6.split.us.i.us.preheader:                  ; preds = %.lr.ph6.i
  %.b180 = load i1, i1* @zstart.2, align 4
  %53 = select i1 %.b180, i32 127, i32 126
  %broadcast.splatinsert = insertelement <4 x i32> undef, i32 %53, i32 0
  %54 = add <4 x i32> %broadcast.splatinsert, <i32 1, i32 undef, i32 undef, i32 undef>
  %55 = shufflevector <4 x i32> %54, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %.lr.ph.us.us.i.us.us.preheader

.lr.ph.us.us.i.us.us.preheader:                   ; preds = %.loopexit..loopexit3.loopexit_crit_edge.us.i.loopexit.us, %.lr.ph6.split.us.i.us.preheader
  %indvars.iv105.us.i.us = phi i64 [ %indvars.iv.next11.us.i.us, %.loopexit..loopexit3.loopexit_crit_edge.us.i.loopexit.us ], [ 0, %.lr.ph6.split.us.i.us.preheader ]
  %indvars.iv.next11.us.i.us = add nuw nsw i64 %indvars.iv105.us.i.us, 1
  %56 = trunc i64 %indvars.iv.next11.us.i.us to i32
  %57 = add i32 %51, %56
  %58 = srem i32 %57, 512
  %59 = add nsw i32 %58, -256
  %60 = mul nsw i32 %59, %59
  br label %.lr.ph.us.us.i.us.us

.lr.ph.us.us.i.us.us:                             ; preds = %.lr.ph.us.us.i.us.us.preheader, %..loopexit.loopexit_crit_edge.us.us.i.us.loopexit.us
  %indvars.iv83.us.us.i.us.us = phi i64 [ %indvars.iv.next9.us.us.i.us.us, %..loopexit.loopexit_crit_edge.us.us.i.us.loopexit.us ], [ 0, %.lr.ph.us.us.i.us.us.preheader ]
  %indvars.iv.next9.us.us.i.us.us = add nuw nsw i64 %indvars.iv83.us.us.i.us.us, 1
  %61 = trunc i64 %indvars.iv.next9.us.us.i.us.us to i32
  %62 = add i32 %52, %61
  %63 = srem i32 %62, 256
  %64 = add nsw i32 %63, -128
  %65 = mul nsw i32 %64, %64
  %66 = add nuw nsw i32 %65, %60
  %broadcast.splatinsert206.us = insertelement <4 x i32> undef, i32 %66, i32 0
  %broadcast.splat207.us = shufflevector <4 x i32> %broadcast.splatinsert206.us, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %vector.body.us

vector.body.us:                                   ; preds = %vector.body.us, %.lr.ph.us.us.i.us.us
  %index.us = phi i64 [ 0, %.lr.ph.us.us.i.us.us ], [ %index.next.us, %vector.body.us ]
  %vec.ind.us = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %.lr.ph.us.us.i.us.us ], [ %vec.ind.next.us, %vector.body.us ]
  %67 = or i64 %index.us, 1
  %68 = or i64 %index.us, 2
  %69 = or i64 %index.us, 3
  %70 = trunc <4 x i64> %vec.ind.us to <4 x i32>
  %71 = add <4 x i32> %55, %70
  %72 = srem <4 x i32> %71, <i32 256, i32 256, i32 256, i32 256>
  %73 = add nsw <4 x i32> %72, <i32 -128, i32 -128, i32 -128, i32 -128>
  %74 = mul nsw <4 x i32> %73, %73
  %75 = add nuw nsw <4 x i32> %74, %broadcast.splat207.us
  %76 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %index.us, i64 %indvars.iv83.us.us.i.us.us, i64 %indvars.iv105.us.i.us
  %77 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %67, i64 %indvars.iv83.us.us.i.us.us, i64 %indvars.iv105.us.i.us
  %78 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %68, i64 %indvars.iv83.us.us.i.us.us, i64 %indvars.iv105.us.i.us
  %79 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %69, i64 %indvars.iv83.us.us.i.us.us, i64 %indvars.iv105.us.i.us
  %80 = extractelement <4 x i32> %75, i32 0
  store i32 %80, i32* %76, align 4, !tbaa !2
  %81 = extractelement <4 x i32> %75, i32 1
  store i32 %81, i32* %77, align 4, !tbaa !2
  %82 = extractelement <4 x i32> %75, i32 2
  store i32 %82, i32* %78, align 4, !tbaa !2
  %83 = extractelement <4 x i32> %75, i32 3
  store i32 %83, i32* %79, align 4, !tbaa !2
  %index.next.us = add i64 %index.us, 4
  %vec.ind.next.us = add <4 x i64> %vec.ind.us, <i64 4, i64 4, i64 4, i64 4>
  %84 = icmp eq i64 %index.next.us, %50
  br i1 %84, label %..loopexit.loopexit_crit_edge.us.us.i.us.loopexit.us, label %vector.body.us, !llvm.loop !6

..loopexit.loopexit_crit_edge.us.us.i.us.loopexit.us: ; preds = %vector.body.us
  %exitcond20.i.us.us = icmp eq i64 %indvars.iv.next9.us.us.i.us.us, %49
  br i1 %exitcond20.i.us.us, label %.loopexit..loopexit3.loopexit_crit_edge.us.i.loopexit.us, label %.lr.ph.us.us.i.us.us

.loopexit..loopexit3.loopexit_crit_edge.us.i.loopexit.us: ; preds = %..loopexit.loopexit_crit_edge.us.us.i.us.loopexit.us
  %exitcond21.i.us = icmp eq i64 %indvars.iv.next11.us.i.us, %48
  br i1 %exitcond21.i.us, label %.loopexit3._crit_edge.i, label %.lr.ph.us.us.i.us.us.preheader

.loopexit3._crit_edge.i:                          ; preds = %.loopexit..loopexit3.loopexit_crit_edge.us.i.loopexit.us, %.lr.ph6.i, %2
  store <2 x double> <double 1.000000e+00, double 0x3FEFFFAD359AB364>, <2 x double>* bitcast ([1966081 x double]* @ex to <2 x double>*), align 16, !tbaa !8
  store <2 x double> <double 0x3FEFFF5A6C0B990F, double 0x3FEFFF07A352AED7>, <2 x double>* bitcast (double* getelementptr inbounds ([1966081 x double], [1966081 x double]* @ex, i64 0, i64 2) to <2 x double>*), align 16, !tbaa !8
  br label %._crit_edge.i13.._crit_edge.i13_crit_edge

._crit_edge.i13.._crit_edge.i13_crit_edge:        ; preds = %._crit_edge.i13.._crit_edge.i13_crit_edge.1, %.loopexit3._crit_edge.i
  %.pre23.i.pre = phi double [ 0x3FEFFFAD359AB364, %.loopexit3._crit_edge.i ], [ %.pre23.i.pre.1.1, %._crit_edge.i13.._crit_edge.i13_crit_edge.1 ]
  %indvars.iv.next.i11205 = phi i64 [ 4, %.loopexit3._crit_edge.i ], [ %indvars.iv.next.i11.2.1, %._crit_edge.i13.._crit_edge.i13_crit_edge.1 ]
  %85 = phi double [ 0x3FEFFF07A352AED7, %.loopexit3._crit_edge.i ], [ %522, %._crit_edge.i13.._crit_edge.i13_crit_edge.1 ]
  %86 = fmul double %85, %.pre23.i.pre
  %87 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i11205
  store double %86, double* %87, align 16, !tbaa !8
  %indvars.iv.next.i11 = or i64 %indvars.iv.next.i11205, 1
  %.pre23.i.pre.1 = load double, double* getelementptr inbounds ([1966081 x double], [1966081 x double]* @ex, i64 0, i64 1), align 8, !tbaa !8
  %88 = fmul double %86, %.pre23.i.pre.1
  %89 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i11
  store double %88, double* %89, align 8, !tbaa !8
  %indvars.iv.next.i11.1 = add nuw nsw i64 %indvars.iv.next.i11205, 2
  %90 = fmul double %.pre23.i.pre.1, %88
  %91 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i11.1
  store double %90, double* %91, align 16, !tbaa !8
  %indvars.iv.next.i11.2 = add nuw nsw i64 %indvars.iv.next.i11205, 3
  %exitcond.i12.2 = icmp eq i64 %indvars.iv.next.i11.2, 1966081
  br i1 %exitcond.i12.2, label %compute_indexmap.exit, label %._crit_edge.i13.._crit_edge.i13_crit_edge.1

compute_indexmap.exit:                            ; preds = %._crit_edge.i13.._crit_edge.i13_crit_edge
  tail call fastcc void @compute_initial_conditions()
  %.b186 = load i1, i1* @dims.0.0, align 16
  %92 = select i1 %.b186, i32 512, i32 0
  tail call fastcc void @fft_init(i32 %92)
  tail call fastcc void @fft()
  tail call void @llvm.memset.p0i8.i64(i8* align 16 bitcast ([64 x double]* @elapsed to i8*), i8 0, i64 56, i1 false)
  %93 = bitcast double* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #10
  call void @wtime_(double* nonnull %3) #10
  %94 = bitcast double* %3 to i64*
  %95 = load i64, i64* %94, align 8, !tbaa !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #10
  store i64 %95, i64* bitcast ([64 x double]* @start to i64*), align 16, !tbaa !8
  %.pre.i16.b = load i1, i1* @dims.2.0, align 8
  %96 = select i1 %.pre.i16.b, i64 512, i64 0
  %.pre4.i17.b = load i1, i1* @dims.2.1, align 8
  %97 = select i1 %.pre4.i17.b, i64 256, i64 0
  %.pre5.i18.b = load i1, i1* @dims.2.2, align 8
  %98 = select i1 %.pre5.i18.b, i64 256, i64 0
  br i1 %.pre.i16.b, label %.lr.ph6.i19, label %.loopexit3._crit_edge.i33

.lr.ph6.i19:                                      ; preds = %compute_indexmap.exit
  %.b177 = load i1, i1* @ystart.2, align 4
  %.b173 = load i1, i1* @xstart.2, align 4
  %99 = select i1 %.b173, i32 255, i32 254
  %100 = select i1 %.b177, i32 127, i32 126
  %or.cond153 = and i1 %.pre4.i17.b, %.pre5.i18.b
  br i1 %or.cond153, label %.lr.ph6.split.us.i22.us.preheader, label %.loopexit3._crit_edge.i33

.lr.ph6.split.us.i22.us.preheader:                ; preds = %.lr.ph6.i19
  %.b181 = load i1, i1* @zstart.2, align 4
  %101 = select i1 %.b181, i32 127, i32 126
  %broadcast.splatinsert221 = insertelement <4 x i32> undef, i32 %101, i32 0
  %102 = add <4 x i32> %broadcast.splatinsert221, <i32 1, i32 undef, i32 undef, i32 undef>
  %103 = shufflevector <4 x i32> %102, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %.lr.ph.us.us.i27.us.us.preheader

.lr.ph.us.us.i27.us.us.preheader:                 ; preds = %.loopexit..loopexit3.loopexit_crit_edge.us.i24.loopexit.us, %.lr.ph6.split.us.i22.us.preheader
  %indvars.iv105.us.i20.us = phi i64 [ %indvars.iv.next11.us.i21.us, %.loopexit..loopexit3.loopexit_crit_edge.us.i24.loopexit.us ], [ 0, %.lr.ph6.split.us.i22.us.preheader ]
  %indvars.iv.next11.us.i21.us = add nuw nsw i64 %indvars.iv105.us.i20.us, 1
  %104 = trunc i64 %indvars.iv.next11.us.i21.us to i32
  %105 = add i32 %99, %104
  %106 = srem i32 %105, 512
  %107 = add nsw i32 %106, -256
  %108 = mul nsw i32 %107, %107
  br label %.lr.ph.us.us.i27.us.us

.lr.ph.us.us.i27.us.us:                           ; preds = %.lr.ph.us.us.i27.us.us.preheader, %..loopexit.loopexit_crit_edge.us.us.i29.us.loopexit.us
  %indvars.iv83.us.us.i25.us.us = phi i64 [ %indvars.iv.next9.us.us.i26.us.us, %..loopexit.loopexit_crit_edge.us.us.i29.us.loopexit.us ], [ 0, %.lr.ph.us.us.i27.us.us.preheader ]
  %indvars.iv.next9.us.us.i26.us.us = add nuw nsw i64 %indvars.iv83.us.us.i25.us.us, 1
  %109 = trunc i64 %indvars.iv.next9.us.us.i26.us.us to i32
  %110 = add i32 %100, %109
  %111 = srem i32 %110, 256
  %112 = add nsw i32 %111, -128
  %113 = mul nsw i32 %112, %112
  %114 = add nuw nsw i32 %113, %108
  %broadcast.splatinsert223.us = insertelement <4 x i32> undef, i32 %114, i32 0
  %broadcast.splat224.us = shufflevector <4 x i32> %broadcast.splatinsert223.us, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %vector.body208.us

vector.body208.us:                                ; preds = %vector.body208.us, %.lr.ph.us.us.i27.us.us
  %index215.us = phi i64 [ 0, %.lr.ph.us.us.i27.us.us ], [ %index.next216.us, %vector.body208.us ]
  %vec.ind219.us = phi <4 x i64> [ <i64 0, i64 1, i64 2, i64 3>, %.lr.ph.us.us.i27.us.us ], [ %vec.ind.next220.us, %vector.body208.us ]
  %115 = or i64 %index215.us, 1
  %116 = or i64 %index215.us, 2
  %117 = or i64 %index215.us, 3
  %118 = trunc <4 x i64> %vec.ind219.us to <4 x i32>
  %119 = add <4 x i32> %103, %118
  %120 = srem <4 x i32> %119, <i32 256, i32 256, i32 256, i32 256>
  %121 = add nsw <4 x i32> %120, <i32 -128, i32 -128, i32 -128, i32 -128>
  %122 = mul nsw <4 x i32> %121, %121
  %123 = add nuw nsw <4 x i32> %122, %broadcast.splat224.us
  %124 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %index215.us, i64 %indvars.iv83.us.us.i25.us.us, i64 %indvars.iv105.us.i20.us
  %125 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %115, i64 %indvars.iv83.us.us.i25.us.us, i64 %indvars.iv105.us.i20.us
  %126 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %116, i64 %indvars.iv83.us.us.i25.us.us, i64 %indvars.iv105.us.i20.us
  %127 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %117, i64 %indvars.iv83.us.us.i25.us.us, i64 %indvars.iv105.us.i20.us
  %128 = extractelement <4 x i32> %123, i32 0
  store i32 %128, i32* %124, align 4, !tbaa !2
  %129 = extractelement <4 x i32> %123, i32 1
  store i32 %129, i32* %125, align 4, !tbaa !2
  %130 = extractelement <4 x i32> %123, i32 2
  store i32 %130, i32* %126, align 4, !tbaa !2
  %131 = extractelement <4 x i32> %123, i32 3
  store i32 %131, i32* %127, align 4, !tbaa !2
  %index.next216.us = add i64 %index215.us, 4
  %vec.ind.next220.us = add <4 x i64> %vec.ind219.us, <i64 4, i64 4, i64 4, i64 4>
  %132 = icmp eq i64 %index.next216.us, %98
  br i1 %132, label %..loopexit.loopexit_crit_edge.us.us.i29.us.loopexit.us, label %vector.body208.us, !llvm.loop !10

..loopexit.loopexit_crit_edge.us.us.i29.us.loopexit.us: ; preds = %vector.body208.us
  %exitcond20.i28.us.us = icmp eq i64 %indvars.iv.next9.us.us.i26.us.us, %97
  br i1 %exitcond20.i28.us.us, label %.loopexit..loopexit3.loopexit_crit_edge.us.i24.loopexit.us, label %.lr.ph.us.us.i27.us.us

.loopexit..loopexit3.loopexit_crit_edge.us.i24.loopexit.us: ; preds = %..loopexit.loopexit_crit_edge.us.us.i29.us.loopexit.us
  %exitcond21.i23.us = icmp eq i64 %indvars.iv.next11.us.i21.us, %96
  br i1 %exitcond21.i23.us, label %.loopexit3._crit_edge.i33, label %.lr.ph.us.us.i27.us.us.preheader

.loopexit3._crit_edge.i33:                        ; preds = %.loopexit..loopexit3.loopexit_crit_edge.us.i24.loopexit.us, %.lr.ph6.i19, %compute_indexmap.exit
  store <2 x double> <double 1.000000e+00, double 0x3FEFFFAD359AB364>, <2 x double>* bitcast ([1966081 x double]* @ex to <2 x double>*), align 16, !tbaa !8
  store <2 x double> <double 0x3FEFFF5A6C0B990F, double 0x3FEFFF07A352AED7>, <2 x double>* bitcast (double* getelementptr inbounds ([1966081 x double], [1966081 x double]* @ex, i64 0, i64 2) to <2 x double>*), align 16, !tbaa !8
  br label %._crit_edge.i38.._crit_edge.i38_crit_edge

._crit_edge.i38.._crit_edge.i38_crit_edge:        ; preds = %._crit_edge.i38.._crit_edge.i38_crit_edge.1, %.loopexit3._crit_edge.i33
  %.pre23.i37.pre = phi double [ 0x3FEFFFAD359AB364, %.loopexit3._crit_edge.i33 ], [ %.pre23.i37.pre.1.1, %._crit_edge.i38.._crit_edge.i38_crit_edge.1 ]
  %indvars.iv.next.i35204 = phi i64 [ 4, %.loopexit3._crit_edge.i33 ], [ %indvars.iv.next.i35.2.1, %._crit_edge.i38.._crit_edge.i38_crit_edge.1 ]
  %133 = phi double [ 0x3FEFFF07A352AED7, %.loopexit3._crit_edge.i33 ], [ %516, %._crit_edge.i38.._crit_edge.i38_crit_edge.1 ]
  %134 = fmul double %133, %.pre23.i37.pre
  %135 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i35204
  store double %134, double* %135, align 16, !tbaa !8
  %indvars.iv.next.i35 = or i64 %indvars.iv.next.i35204, 1
  %.pre23.i37.pre.1 = load double, double* getelementptr inbounds ([1966081 x double], [1966081 x double]* @ex, i64 0, i64 1), align 8, !tbaa !8
  %136 = fmul double %134, %.pre23.i37.pre.1
  %137 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i35
  store double %136, double* %137, align 8, !tbaa !8
  %indvars.iv.next.i35.1 = add nuw nsw i64 %indvars.iv.next.i35204, 2
  %138 = fmul double %.pre23.i37.pre.1, %136
  %139 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i35.1
  store double %138, double* %139, align 16, !tbaa !8
  %indvars.iv.next.i35.2 = add nuw nsw i64 %indvars.iv.next.i35204, 3
  %exitcond.i36.2 = icmp eq i64 %indvars.iv.next.i35.2, 1966081
  br i1 %exitcond.i36.2, label %compute_indexmap.exit39, label %._crit_edge.i38.._crit_edge.i38_crit_edge.1

compute_indexmap.exit39:                          ; preds = %._crit_edge.i38.._crit_edge.i38_crit_edge
  tail call fastcc void @compute_initial_conditions()
  %.b185 = load i1, i1* @dims.0.0, align 16
  %140 = select i1 %.b185, i32 512, i32 0
  tail call fastcc void @fft_init(i32 %140)
  tail call fastcc void @fft()
  %141 = bitcast [512 x [18 x %struct.dcomplex]]* %27 to i8*
  %142 = bitcast [512 x [18 x %struct.dcomplex]]* %28 to i8*
  %143 = bitcast [512 x [18 x %struct.dcomplex]]* %29 to i8*
  %144 = load i1, i1* @niter, align 4
  %.b200 = load i1, i1* @dims.2.1, align 8
  %145 = select i1 %.b200, i64 256, i64 0
  %146 = load i32, i32* @fftblock, align 4
  %.b198 = load i1, i1* @dims.2.0, align 8
  %147 = select i1 %.b198, i32 512, i32 0
  %148 = sub nsw i32 %147, %146
  %.b202 = load i1, i1* @dims.2.2, align 8
  %149 = sext i32 %146 to i64
  %150 = select i1 %.b202, i64 256, i64 0
  %151 = sext i32 %148 to i64
  %.b196 = load i1, i1* @dims.1.2, align 8
  %152 = select i1 %.b196, i64 256, i64 0
  %.b192 = load i1, i1* @dims.1.0, align 16
  %153 = select i1 %.b192, i32 512, i32 0
  %154 = sub nsw i32 %153, %146
  %.b194 = load i1, i1* @dims.1.1, align 16
  %155 = select i1 %.b194, i64 256, i64 0
  %156 = sext i32 %154 to i64
  %.b190 = load i1, i1* @dims.0.2, align 8
  %157 = select i1 %.b190, i32 256, i32 0
  %158 = zext i32 %157 to i64
  %.b188 = load i1, i1* @dims.0.1, align 16
  %159 = select i1 %.b188, i32 256, i32 0
  %160 = sub nsw i32 %159, %146
  %.b184 = load i1, i1* @dims.0.0, align 16
  %161 = select i1 %.b184, i32 512, i32 0
  %162 = zext i32 %161 to i64
  %163 = sext i32 %160 to i64
  %.b = load i1, i1* @xstart.0, align 4
  %164 = zext i1 %.b to i32
  %.b174 = load i1, i1* @xend.0, align 4
  %.b175 = load i1, i1* @ystart.0, align 4
  %165 = zext i1 %.b175 to i32
  %.b178 = load i1, i1* @yend.0, align 4
  %.b179 = load i1, i1* @zstart.0, align 4
  %166 = zext i1 %.b179 to i32
  %.b182 = load i1, i1* @zend.0, align 4
  %167 = select i1 %144, i64 21, i64 1
  br i1 %144, label %.lr.ph106, label %verify.exit, !noelle.parallelizer.looporder !11

.lr.ph106:                                        ; preds = %compute_indexmap.exit39
  %168 = bitcast [32 x i64]* %noelle.loop_environment.i to i8*
  %169 = getelementptr inbounds [32 x i64], [32 x i64]* %noelle.loop_environment.i, i64 0, i64 24
  %170 = bitcast i64* %169 to i32*
  %171 = getelementptr inbounds [32 x i64], [32 x i64]* %noelle.loop_environment.i, i64 0, i64 16
  %172 = getelementptr inbounds [32 x i64], [32 x i64]* %noelle.loop_environment.i, i64 0, i64 8
  %173 = getelementptr inbounds [32 x i64], [32 x i64]* %noelle.loop_environment.i, i64 0, i64 0
  %174 = icmp slt i32 %148, 0
  %175 = icmp sgt i32 %146, 0
  %176 = icmp slt i32 %154, 0
  %177 = icmp slt i32 %160, 0
  %178 = add nsw i64 %149, -1
  %brmerge.demorgan = and i1 %175, %.b202
  %xtraiter = and i64 %149, 1
  %179 = icmp eq i64 %178, 0
  %unroll_iter = sub nsw i64 %149, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %xtraiter227 = and i64 %149, 3
  %180 = icmp ult i64 %178, 3
  %unroll_iter229 = sub nsw i64 %149, %xtraiter227
  %lcmp.mod228 = icmp eq i64 %xtraiter227, 0
  %brmerge162.demorgan = and i1 %175, %.b194
  %brmerge168.demorgan = and i1 %175, %.b184
  %181 = shl nuw nsw i64 %xtraiter227, 4
  %brmerge.demorgan53 = and i1 %.b174, %.b178
  br label %182

182:                                              ; preds = %checksum.exit._crit_edge, %.lr.ph106
  %183 = phi i32 [ %161, %.lr.ph106 ], [ %.pre151, %checksum.exit._crit_edge ]
  %184 = phi i32 [ %159, %.lr.ph106 ], [ %.pre150, %checksum.exit._crit_edge ]
  %185 = phi i32 [ %157, %.lr.ph106 ], [ %.pre, %checksum.exit._crit_edge ]
  %indvars.iv105 = phi i64 [ 1, %.lr.ph106 ], [ %indvars.iv.next, %checksum.exit._crit_edge ]
  %186 = trunc i64 %indvars.iv105 to i32
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %168)
  %187 = zext i32 %185 to i64
  %188 = zext i32 %184 to i64
  %189 = zext i32 %183 to i64
  %190 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %191 = icmp sgt i32 %190, 1
  br i1 %191, label %223, label %.preheader2.i

.preheader2.i:                                    ; preds = %182
  %192 = icmp ne i32 %185, 0
  %193 = icmp ne i32 %184, 0
  %or.cond154 = and i1 %193, %192
  %194 = icmp ne i32 %183, 0
  %or.cond155 = and i1 %194, %or.cond154
  br i1 %or.cond155, label %.preheader1.preheader.us.i.us, label %evolve.exit, !noelle.parallelizer.looporder !21

.preheader1.preheader.us.i.us:                    ; preds = %.preheader2.i, %.preheader1._crit_edge.us.i.loopexit.us
  %indvars.iv56.us.i.us = phi i64 [ %indvars.iv.next6.us.i.us, %.preheader1._crit_edge.us.i.loopexit.us ], [ 0, %.preheader2.i ]
  br label %.preheader.preheader.us.us.i.us

.preheader.preheader.us.us.i.us:                  ; preds = %.preheader1.preheader.us.i.us, %.preheader._crit_edge.us.us.i.us
  %indvars.iv35.us.us.i.us = phi i64 [ %indvars.iv.next4.us.us.i.us, %.preheader._crit_edge.us.us.i.us ], [ 0, %.preheader1.preheader.us.i.us ]
  br label %.preheader.us.us.i.us

.preheader.us.us.i.us:                            ; preds = %.preheader.us.us.i.us, %.preheader.preheader.us.us.i.us
  %indvars.iv4.us.us.i.us = phi i64 [ 0, %.preheader.preheader.us.us.i.us ], [ %indvars.iv.next.us.us.i.us.1, %.preheader.us.us.i.us ]
  %195 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %indvars.iv56.us.i.us, i64 %indvars.iv35.us.us.i.us, i64 %indvars.iv4.us.us.i.us, i32 0
  %196 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %indvars.iv56.us.i.us, i64 %indvars.iv35.us.us.i.us, i64 %indvars.iv4.us.us.i.us
  %197 = load i32, i32* %196, align 8, !tbaa !2
  %198 = mul nsw i32 %197, %186
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %199
  %201 = load double, double* %200, align 8, !tbaa !8
  %202 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv56.us.i.us, i64 %indvars.iv35.us.us.i.us, i64 %indvars.iv4.us.us.i.us, i32 0
  %203 = bitcast double* %195 to <2 x double>*
  %204 = load <2 x double>, <2 x double>* %203, align 16, !tbaa !8
  %205 = insertelement <2 x double> undef, double %201, i32 0
  %206 = shufflevector <2 x double> %205, <2 x double> undef, <2 x i32> zeroinitializer
  %207 = fmul <2 x double> %204, %206
  %208 = bitcast double* %202 to <2 x double>*
  store <2 x double> %207, <2 x double>* %208, align 16, !tbaa !8
  %indvars.iv.next.us.us.i.us = or i64 %indvars.iv4.us.us.i.us, 1
  %209 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %indvars.iv56.us.i.us, i64 %indvars.iv35.us.us.i.us, i64 %indvars.iv.next.us.us.i.us, i32 0
  %210 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %indvars.iv56.us.i.us, i64 %indvars.iv35.us.us.i.us, i64 %indvars.iv.next.us.us.i.us
  %211 = load i32, i32* %210, align 4, !tbaa !2
  %212 = mul nsw i32 %211, %186
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %213
  %215 = load double, double* %214, align 8, !tbaa !8
  %216 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv56.us.i.us, i64 %indvars.iv35.us.us.i.us, i64 %indvars.iv.next.us.us.i.us, i32 0
  %217 = bitcast double* %209 to <2 x double>*
  %218 = load <2 x double>, <2 x double>* %217, align 16, !tbaa !8
  %219 = insertelement <2 x double> undef, double %215, i32 0
  %220 = shufflevector <2 x double> %219, <2 x double> undef, <2 x i32> zeroinitializer
  %221 = fmul <2 x double> %218, %220
  %222 = bitcast double* %216 to <2 x double>*
  store <2 x double> %221, <2 x double>* %222, align 16, !tbaa !8
  %indvars.iv.next.us.us.i.us.1 = add nuw nsw i64 %indvars.iv4.us.us.i.us, 2
  %exitcond.i14.us.1 = icmp eq i64 %indvars.iv.next.us.us.i.us.1, %189
  br i1 %exitcond.i14.us.1, label %.preheader._crit_edge.us.us.i.us, label %.preheader.us.us.i.us, !noelle.parallelizer.looporder !22

.preheader._crit_edge.us.us.i.us:                 ; preds = %.preheader.us.us.i.us
  %indvars.iv.next4.us.us.i.us = add nuw nsw i64 %indvars.iv35.us.us.i.us, 1
  %exitcond22.i.us = icmp eq i64 %indvars.iv.next4.us.us.i.us, %188
  br i1 %exitcond22.i.us, label %.preheader1._crit_edge.us.i.loopexit.us, label %.preheader.preheader.us.us.i.us, !noelle.parallelizer.looporder !23

.preheader1._crit_edge.us.i.loopexit.us:          ; preds = %.preheader._crit_edge.us.us.i.us
  %indvars.iv.next6.us.i.us = add nuw nsw i64 %indvars.iv56.us.i.us, 1
  %exitcond23.i.us = icmp eq i64 %indvars.iv.next6.us.i.us, %187
  br i1 %exitcond23.i.us, label %evolve.exit, label %.preheader1.preheader.us.i.us, !noelle.parallelizer.looporder !21

223:                                              ; preds = %182
  store i64 %187, i64* %173, align 8, !noelle.environment_variable.live_in.store_pointer !24
  store i64 %188, i64* %172, align 8, !noelle.environment_variable.live_in.store_pointer !25
  store i64 %189, i64* %171, align 8, !noelle.environment_variable.live_in.store_pointer !26
  store i32 %186, i32* %170, align 8, !noelle.environment_variable.live_in.store_pointer !27
  %224 = call { i32, i64 } @NOELLE_DOALLDispatcher(void (i8*, i64, i64, i64)* nonnull @noelle_task_7, i8* nonnull %168, i64 8, i64 8) #10
  br label %evolve.exit

evolve.exit:                                      ; preds = %.preheader1._crit_edge.us.i.loopexit.us, %.preheader2.i, %223
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %168)
  %.b197 = load i1, i1* @dims.2.0, align 8
  %225 = select i1 %.b197, i32 512, i32 0
  br label %.preheader.i2.i9

.preheader.i2.i9:                                 ; preds = %evolve.exit, %.preheader.i2.i9
  %.01.i.i8 = phi i32 [ %227, %.preheader.i2.i9 ], [ 2, %evolve.exit ]
  %226 = icmp slt i32 %.01.i.i8, %225
  %227 = shl i32 %.01.i.i8, 1
  br i1 %226, label %.preheader.i2.i9, label %ilog2.exit.i13

ilog2.exit.i13:                                   ; preds = %.preheader.i2.i9
  %.b199 = load i1, i1* @dims.2.1, align 8
  %228 = select i1 %.b199, i32 256, i32 0
  br label %.preheader.i2.i9.1

.preheader21.preheader:                           ; preds = %ilog2.exit.i13.2, %.preheader21._crit_edge
  %indvars.iv13.i1466 = phi i64 [ %indvars.iv.next14.i62, %.preheader21._crit_edge ], [ 0, %ilog2.exit.i13.2 ]
  br i1 %174, label %.preheader21._crit_edge, label %.preheader18.preheader, !noelle.parallelizer.looporder !28

.preheader18.preheader:                           ; preds = %.preheader21.preheader, %.preheader21
  %indvar = phi i64 [ %indvar.next, %.preheader21 ], [ 0, %.preheader21.preheader ]
  %indvars.iv7262 = phi i64 [ %indvars.iv.next73, %.preheader21 ], [ 0, %.preheader21.preheader ]
  %229 = mul i64 %indvar, %149
  %230 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %231 = icmp sgt i32 %230, 1
  br i1 %231, label %477, label %.preheader18.preheader53

.preheader18.preheader53:                         ; preds = %.preheader18.preheader
  br i1 %brmerge.demorgan, label %.preheader1.i18.preheader.us.preheader, label %.preheader21, !noelle.parallelizer.looporder !29

.preheader1.i18.preheader.us.preheader:           ; preds = %.preheader18.preheader53
  br i1 %179, label %.preheader1.i18.preheader.us.us.preheader, label %.preheader1.i18.preheader.us

.preheader1.i18.preheader.us.us.preheader:        ; preds = %.preheader1.i18.preheader.us.preheader
  %sext79.us.epil.us = shl i64 %indvars.iv7262, 32
  %232 = ashr exact i64 %sext79.us.epil.us, 32
  br label %.preheader1.i18.preheader.us.us

.preheader1.i18.preheader.us.us:                  ; preds = %.preheader1.i18._crit_edge.us.us.1, %.preheader1.i18.preheader.us.us.preheader
  %indvars.iv7.i1758.us.us = phi i64 [ 0, %.preheader1.i18.preheader.us.us.preheader ], [ %indvars.iv.next8.i21.us.us.1, %.preheader1.i18._crit_edge.us.us.1 ]
  br i1 %lcmp.mod, label %.preheader1.i18._crit_edge.us.us, label %.preheader1.i18.us.epil.us

.preheader1.i18.us.epil.us:                       ; preds = %.preheader1.i18.preheader.us.us
  %233 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv7.i1758.us.us, i64 %indvars.iv13.i1466, i64 %232
  %234 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv7.i1758.us.us, i64 0
  %235 = bitcast %struct.dcomplex* %233 to <2 x i64>*
  %236 = load <2 x i64>, <2 x i64>* %235, align 16, !tbaa !8
  %237 = bitcast %struct.dcomplex* %234 to <2 x i64>*
  store <2 x i64> %236, <2 x i64>* %237, align 16, !tbaa !8
  br label %.preheader1.i18._crit_edge.us.us

.preheader1.i18._crit_edge.us.us:                 ; preds = %.preheader1.i18.us.epil.us, %.preheader1.i18.preheader.us.us
  %indvars.iv.next8.i21.us.us = or i64 %indvars.iv7.i1758.us.us, 1
  br i1 %lcmp.mod, label %.preheader1.i18._crit_edge.us.us.1, label %.preheader1.i18.us.epil.us.1

.preheader1.i18.preheader.us:                     ; preds = %.preheader1.i18.preheader.us.preheader, %.preheader1.i18._crit_edge.us
  %indvars.iv7.i1758.us = phi i64 [ %indvars.iv.next8.i21.us, %.preheader1.i18._crit_edge.us ], [ 0, %.preheader1.i18.preheader.us.preheader ]
  br label %.preheader1.i18.us

.preheader1.i18.us:                               ; preds = %.preheader1.i18.preheader.us, %.preheader1.i18.us
  %indvars.iv.i1957.us = phi i64 [ %indvars.iv.next.i20.us.1, %.preheader1.i18.us ], [ 0, %.preheader1.i18.preheader.us ]
  %niter = phi i64 [ %niter.nsub.1, %.preheader1.i18.us ], [ %unroll_iter, %.preheader1.i18.preheader.us ]
  %238 = add i64 %indvars.iv.i1957.us, %indvars.iv7262
  %sext79.us = shl i64 %238, 32
  %239 = ashr exact i64 %sext79.us, 32
  %240 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv7.i1758.us, i64 %indvars.iv13.i1466, i64 %239
  %241 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv7.i1758.us, i64 %indvars.iv.i1957.us
  %242 = bitcast %struct.dcomplex* %240 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 16, !tbaa !8
  %244 = bitcast %struct.dcomplex* %241 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %244, align 16, !tbaa !8
  %indvars.iv.next.i20.us = or i64 %indvars.iv.i1957.us, 1
  %245 = add i64 %indvars.iv.next.i20.us, %indvars.iv7262
  %sext79.us.1 = shl i64 %245, 32
  %246 = ashr exact i64 %sext79.us.1, 32
  %247 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv7.i1758.us, i64 %indvars.iv13.i1466, i64 %246
  %248 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv7.i1758.us, i64 %indvars.iv.next.i20.us
  %249 = bitcast %struct.dcomplex* %247 to <2 x i64>*
  %250 = load <2 x i64>, <2 x i64>* %249, align 16, !tbaa !8
  %251 = bitcast %struct.dcomplex* %248 to <2 x i64>*
  store <2 x i64> %250, <2 x i64>* %251, align 16, !tbaa !8
  %indvars.iv.next.i20.us.1 = add nuw nsw i64 %indvars.iv.i1957.us, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %.preheader1.i18._crit_edge.us.unr-lcssa, label %.preheader1.i18.us

.preheader1.i18._crit_edge.us.unr-lcssa:          ; preds = %.preheader1.i18.us
  br i1 %lcmp.mod, label %.preheader1.i18._crit_edge.us, label %.preheader1.i18.us.epil

.preheader1.i18.us.epil:                          ; preds = %.preheader1.i18._crit_edge.us.unr-lcssa
  %252 = add i64 %indvars.iv.next.i20.us.1, %indvars.iv7262
  %sext79.us.epil = shl i64 %252, 32
  %253 = ashr exact i64 %sext79.us.epil, 32
  %254 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv7.i1758.us, i64 %indvars.iv13.i1466, i64 %253
  %255 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv7.i1758.us, i64 %indvars.iv.next.i20.us.1
  %256 = bitcast %struct.dcomplex* %254 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 16, !tbaa !8
  %258 = bitcast %struct.dcomplex* %255 to <2 x i64>*
  store <2 x i64> %257, <2 x i64>* %258, align 16, !tbaa !8
  br label %.preheader1.i18._crit_edge.us

.preheader1.i18._crit_edge.us:                    ; preds = %.preheader1.i18._crit_edge.us.unr-lcssa, %.preheader1.i18.us.epil
  %indvars.iv.next8.i21.us = add nuw nsw i64 %indvars.iv7.i1758.us, 1
  %exitcond127 = icmp eq i64 %indvars.iv.next8.i21.us, %150
  br i1 %exitcond127, label %cfftz.exit.i56, label %.preheader1.i18.preheader.us, !noelle.parallelizer.looporder !29

cfftz.exit.i56:                                   ; preds = %.preheader1.i18._crit_edge.us, %.preheader1.i18._crit_edge.us.us.1, %477
  %259 = phi i32 [ %.pre43, %477 ], [ %230, %.preheader1.i18._crit_edge.us.us.1 ], [ %230, %.preheader1.i18._crit_edge.us ]
  %260 = icmp sgt i32 %259, 1
  br i1 %260, label %481, label %.preheader51

.preheader51:                                     ; preds = %cfftz.exit.i56
  br i1 %brmerge.demorgan, label %.preheader.i58.preheader.us.preheader, label %.preheader21, !noelle.parallelizer.looporder !30

.preheader.i58.preheader.us.preheader:            ; preds = %.preheader51
  br i1 %180, label %.preheader.i58.preheader.us.us, label %.preheader.i58.preheader.us

.preheader.i58.preheader.us.us:                   ; preds = %.preheader.i58.preheader.us.preheader, %.preheader.i58._crit_edge.us.us.1
  %indvars.iv11.i5761.us.us = phi i64 [ %indvars.iv.next12.i61.us.us.1, %.preheader.i58._crit_edge.us.us.1 ], [ 0, %.preheader.i58.preheader.us.preheader ]
  br i1 %lcmp.mod228, label %.preheader.i58._crit_edge.us.us, label %.preheader.i58.us.epil.us.preheader

.preheader.i58.us.epil.us.preheader:              ; preds = %.preheader.i58.preheader.us.us
  %scevgep27 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv11.i5761.us.us, i64 0
  %scevgep2728 = bitcast %struct.dcomplex* %scevgep27 to i8*
  %scevgep25 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv11.i5761.us.us, i64 %indvars.iv13.i1466, i64 %229
  %scevgep2526 = bitcast %struct.dcomplex* %scevgep25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep2526, i8* align 16 %scevgep2728, i64 %181, i1 false)
  br label %.preheader.i58._crit_edge.us.us

.preheader.i58._crit_edge.us.us:                  ; preds = %.preheader.i58.us.epil.us.preheader, %.preheader.i58.preheader.us.us
  %indvars.iv.next12.i61.us.us = or i64 %indvars.iv11.i5761.us.us, 1
  br i1 %lcmp.mod228, label %.preheader.i58._crit_edge.us.us.1, label %.preheader.i58.us.epil.us.preheader.1

.preheader.i58.preheader.us:                      ; preds = %.preheader.i58.preheader.us.preheader, %.preheader.i58._crit_edge.us
  %indvars.iv11.i5761.us = phi i64 [ %indvars.iv.next12.i61.us, %.preheader.i58._crit_edge.us ], [ 0, %.preheader.i58.preheader.us.preheader ]
  br label %.preheader.i58.us

.preheader.i58.us:                                ; preds = %.preheader.i58.preheader.us, %.preheader.i58.us
  %indvars.iv9.i5959.us = phi i64 [ %indvars.iv.next10.i60.us.3, %.preheader.i58.us ], [ 0, %.preheader.i58.preheader.us ]
  %niter230 = phi i64 [ %niter230.nsub.3, %.preheader.i58.us ], [ %unroll_iter229, %.preheader.i58.preheader.us ]
  %261 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv11.i5761.us, i64 %indvars.iv9.i5959.us
  %262 = add nsw i64 %indvars.iv9.i5959.us, %indvars.iv7262
  %263 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv11.i5761.us, i64 %indvars.iv13.i1466, i64 %262
  %264 = bitcast %struct.dcomplex* %261 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 16, !tbaa !8
  %266 = bitcast %struct.dcomplex* %263 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %266, align 16, !tbaa !8
  %indvars.iv.next10.i60.us = or i64 %indvars.iv9.i5959.us, 1
  %267 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv11.i5761.us, i64 %indvars.iv.next10.i60.us
  %268 = add nsw i64 %indvars.iv.next10.i60.us, %indvars.iv7262
  %269 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv11.i5761.us, i64 %indvars.iv13.i1466, i64 %268
  %270 = bitcast %struct.dcomplex* %267 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 16, !tbaa !8
  %272 = bitcast %struct.dcomplex* %269 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %272, align 16, !tbaa !8
  %indvars.iv.next10.i60.us.1 = or i64 %indvars.iv9.i5959.us, 2
  %273 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv11.i5761.us, i64 %indvars.iv.next10.i60.us.1
  %274 = add nsw i64 %indvars.iv.next10.i60.us.1, %indvars.iv7262
  %275 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv11.i5761.us, i64 %indvars.iv13.i1466, i64 %274
  %276 = bitcast %struct.dcomplex* %273 to <2 x i64>*
  %277 = load <2 x i64>, <2 x i64>* %276, align 16, !tbaa !8
  %278 = bitcast %struct.dcomplex* %275 to <2 x i64>*
  store <2 x i64> %277, <2 x i64>* %278, align 16, !tbaa !8
  %indvars.iv.next10.i60.us.2 = or i64 %indvars.iv9.i5959.us, 3
  %279 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv11.i5761.us, i64 %indvars.iv.next10.i60.us.2
  %280 = add nsw i64 %indvars.iv.next10.i60.us.2, %indvars.iv7262
  %281 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv11.i5761.us, i64 %indvars.iv13.i1466, i64 %280
  %282 = bitcast %struct.dcomplex* %279 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 16, !tbaa !8
  %284 = bitcast %struct.dcomplex* %281 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %284, align 16, !tbaa !8
  %indvars.iv.next10.i60.us.3 = add nuw nsw i64 %indvars.iv9.i5959.us, 4
  %niter230.nsub.3 = add i64 %niter230, -4
  %niter230.ncmp.3 = icmp eq i64 %niter230.nsub.3, 0
  br i1 %niter230.ncmp.3, label %.preheader.i58._crit_edge.us.unr-lcssa, label %.preheader.i58.us

.preheader.i58._crit_edge.us.unr-lcssa:           ; preds = %.preheader.i58.us
  br i1 %lcmp.mod228, label %.preheader.i58._crit_edge.us, label %.preheader.i58.us.epil.preheader

.preheader.i58.us.epil.preheader:                 ; preds = %.preheader.i58._crit_edge.us.unr-lcssa
  %285 = add nsw i64 %229, %indvars.iv.next10.i60.us.3
  %scevgep20 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv11.i5761.us, i64 %indvars.iv13.i1466, i64 %285
  %scevgep2021 = bitcast %struct.dcomplex* %scevgep20 to i8*
  %scevgep23 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv11.i5761.us, i64 %indvars.iv.next10.i60.us.3
  %scevgep2324 = bitcast %struct.dcomplex* %scevgep23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep2021, i8* align 16 %scevgep2324, i64 %181, i1 false)
  br label %.preheader.i58._crit_edge.us

.preheader.i58._crit_edge.us:                     ; preds = %.preheader.i58.us.epil.preheader, %.preheader.i58._crit_edge.us.unr-lcssa
  %indvars.iv.next12.i61.us = add nuw nsw i64 %indvars.iv11.i5761.us, 1
  %exitcond130 = icmp eq i64 %indvars.iv.next12.i61.us, %150
  br i1 %exitcond130, label %.preheader21, label %.preheader.i58.preheader.us, !noelle.parallelizer.looporder !30

.preheader21:                                     ; preds = %.preheader.i58._crit_edge.us, %.preheader.i58._crit_edge.us.us.1, %.preheader18.preheader53, %.preheader51, %481
  %indvars.iv.next73 = add i64 %indvars.iv7262, %149
  %286 = icmp sgt i64 %indvars.iv.next73, %151
  %indvar.next = add i64 %indvar, 1
  br i1 %286, label %.preheader21._crit_edge, label %.preheader18.preheader, !noelle.parallelizer.looporder !28

.preheader21._crit_edge:                          ; preds = %.preheader21, %.preheader21.preheader
  %indvars.iv.next14.i62 = add nuw nsw i64 %indvars.iv13.i1466, 1
  %exitcond131 = icmp eq i64 %indvars.iv.next14.i62, %145
  br i1 %exitcond131, label %cffts3.exit, label %.preheader21.preheader, !noelle.parallelizer.looporder !31

cffts3.exit:                                      ; preds = %.preheader21._crit_edge, %ilog2.exit.i13.2
  call void @llvm.lifetime.end.p0i8(i64 147456, i8* nonnull %141) #10
  %.b191 = load i1, i1* @dims.1.0, align 16
  %287 = select i1 %.b191, i32 512, i32 0
  br label %.preheader.i2.i

.preheader.i2.i:                                  ; preds = %cffts3.exit, %.preheader.i2.i
  %.01.i.i = phi i32 [ %289, %.preheader.i2.i ], [ 2, %cffts3.exit ]
  %288 = icmp slt i32 %.01.i.i, %287
  %289 = shl i32 %.01.i.i, 1
  br i1 %288, label %.preheader.i2.i, label %ilog2.exit.i

ilog2.exit.i:                                     ; preds = %.preheader.i2.i
  %.b193 = load i1, i1* @dims.1.1, align 16
  %290 = select i1 %.b193, i32 256, i32 0
  br label %.preheader.i2.i.1

.preheader20.preheader:                           ; preds = %ilog2.exit.i.2, %.preheader20._crit_edge
  %indvars.iv13.i79 = phi i64 [ %indvars.iv.next14.i, %.preheader20._crit_edge ], [ 0, %ilog2.exit.i.2 ]
  br i1 %176, label %.preheader20._crit_edge, label %.preheader16.preheader, !noelle.parallelizer.looporder !32

.preheader16.preheader:                           ; preds = %.preheader20.preheader, %.preheader20
  %indvar30 = phi i64 [ %indvar.next31, %.preheader20 ], [ 0, %.preheader20.preheader ]
  %indvars.iv7475 = phi i64 [ %indvars.iv.next75, %.preheader20 ], [ 0, %.preheader20.preheader ]
  %291 = mul i64 %indvar30, %149
  %292 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %293 = icmp sgt i32 %292, 1
  br i1 %293, label %479, label %.preheader16.preheader50

.preheader16.preheader50:                         ; preds = %.preheader16.preheader
  br i1 %brmerge162.demorgan, label %.preheader1.i.preheader.us.preheader, label %.preheader20, !noelle.parallelizer.looporder !33

.preheader1.i.preheader.us.preheader:             ; preds = %.preheader16.preheader50
  br i1 %179, label %.preheader1.i.preheader.us.us.preheader, label %.preheader1.i.preheader.us

.preheader1.i.preheader.us.us.preheader:          ; preds = %.preheader1.i.preheader.us.preheader
  %sext78.us.epil.us = shl i64 %indvars.iv7475, 32
  %294 = ashr exact i64 %sext78.us.epil.us, 32
  br label %.preheader1.i.preheader.us.us

.preheader1.i.preheader.us.us:                    ; preds = %.preheader1.i._crit_edge.us.us.1, %.preheader1.i.preheader.us.us.preheader
  %indvars.iv7.i71.us.us = phi i64 [ 0, %.preheader1.i.preheader.us.us.preheader ], [ %indvars.iv.next8.i.us.us.1, %.preheader1.i._crit_edge.us.us.1 ]
  br i1 %lcmp.mod, label %.preheader1.i._crit_edge.us.us, label %.preheader1.i.us.epil.us

.preheader1.i.us.epil.us:                         ; preds = %.preheader1.i.preheader.us.us
  %295 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv7.i71.us.us, i64 %294
  %296 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv7.i71.us.us, i64 0
  %297 = bitcast %struct.dcomplex* %295 to <2 x i64>*
  %298 = load <2 x i64>, <2 x i64>* %297, align 16, !tbaa !8
  %299 = bitcast %struct.dcomplex* %296 to <2 x i64>*
  store <2 x i64> %298, <2 x i64>* %299, align 16, !tbaa !8
  br label %.preheader1.i._crit_edge.us.us

.preheader1.i._crit_edge.us.us:                   ; preds = %.preheader1.i.us.epil.us, %.preheader1.i.preheader.us.us
  %indvars.iv.next8.i.us.us = or i64 %indvars.iv7.i71.us.us, 1
  br i1 %lcmp.mod, label %.preheader1.i._crit_edge.us.us.1, label %.preheader1.i.us.epil.us.1

.preheader1.i.preheader.us:                       ; preds = %.preheader1.i.preheader.us.preheader, %.preheader1.i._crit_edge.us
  %indvars.iv7.i71.us = phi i64 [ %indvars.iv.next8.i.us, %.preheader1.i._crit_edge.us ], [ 0, %.preheader1.i.preheader.us.preheader ]
  br label %.preheader1.i.us

.preheader1.i.us:                                 ; preds = %.preheader1.i.preheader.us, %.preheader1.i.us
  %indvars.iv.i669.us = phi i64 [ %indvars.iv.next.i7.us.1, %.preheader1.i.us ], [ 0, %.preheader1.i.preheader.us ]
  %niter234 = phi i64 [ %niter234.nsub.1, %.preheader1.i.us ], [ %unroll_iter, %.preheader1.i.preheader.us ]
  %300 = add i64 %indvars.iv.i669.us, %indvars.iv7475
  %sext78.us = shl i64 %300, 32
  %301 = ashr exact i64 %sext78.us, 32
  %302 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv7.i71.us, i64 %301
  %303 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv7.i71.us, i64 %indvars.iv.i669.us
  %304 = bitcast %struct.dcomplex* %302 to <2 x i64>*
  %305 = load <2 x i64>, <2 x i64>* %304, align 16, !tbaa !8
  %306 = bitcast %struct.dcomplex* %303 to <2 x i64>*
  store <2 x i64> %305, <2 x i64>* %306, align 16, !tbaa !8
  %indvars.iv.next.i7.us = or i64 %indvars.iv.i669.us, 1
  %307 = add i64 %indvars.iv.next.i7.us, %indvars.iv7475
  %sext78.us.1 = shl i64 %307, 32
  %308 = ashr exact i64 %sext78.us.1, 32
  %309 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv7.i71.us, i64 %308
  %310 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv7.i71.us, i64 %indvars.iv.next.i7.us
  %311 = bitcast %struct.dcomplex* %309 to <2 x i64>*
  %312 = load <2 x i64>, <2 x i64>* %311, align 16, !tbaa !8
  %313 = bitcast %struct.dcomplex* %310 to <2 x i64>*
  store <2 x i64> %312, <2 x i64>* %313, align 16, !tbaa !8
  %indvars.iv.next.i7.us.1 = add nuw nsw i64 %indvars.iv.i669.us, 2
  %niter234.nsub.1 = add i64 %niter234, -2
  %niter234.ncmp.1 = icmp eq i64 %niter234.nsub.1, 0
  br i1 %niter234.ncmp.1, label %.preheader1.i._crit_edge.us.unr-lcssa, label %.preheader1.i.us

.preheader1.i._crit_edge.us.unr-lcssa:            ; preds = %.preheader1.i.us
  br i1 %lcmp.mod, label %.preheader1.i._crit_edge.us, label %.preheader1.i.us.epil

.preheader1.i.us.epil:                            ; preds = %.preheader1.i._crit_edge.us.unr-lcssa
  %314 = add i64 %indvars.iv.next.i7.us.1, %indvars.iv7475
  %sext78.us.epil = shl i64 %314, 32
  %315 = ashr exact i64 %sext78.us.epil, 32
  %316 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv7.i71.us, i64 %315
  %317 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv7.i71.us, i64 %indvars.iv.next.i7.us.1
  %318 = bitcast %struct.dcomplex* %316 to <2 x i64>*
  %319 = load <2 x i64>, <2 x i64>* %318, align 16, !tbaa !8
  %320 = bitcast %struct.dcomplex* %317 to <2 x i64>*
  store <2 x i64> %319, <2 x i64>* %320, align 16, !tbaa !8
  br label %.preheader1.i._crit_edge.us

.preheader1.i._crit_edge.us:                      ; preds = %.preheader1.i._crit_edge.us.unr-lcssa, %.preheader1.i.us.epil
  %indvars.iv.next8.i.us = add nuw nsw i64 %indvars.iv7.i71.us, 1
  %exitcond134 = icmp eq i64 %indvars.iv.next8.i.us, %155
  br i1 %exitcond134, label %cfftz.exit.i42, label %.preheader1.i.preheader.us, !noelle.parallelizer.looporder !33

cfftz.exit.i42:                                   ; preds = %.preheader1.i._crit_edge.us, %.preheader1.i._crit_edge.us.us.1, %479
  %321 = phi i32 [ %.pre44, %479 ], [ %292, %.preheader1.i._crit_edge.us.us.1 ], [ %292, %.preheader1.i._crit_edge.us ]
  %322 = icmp sgt i32 %321, 1
  br i1 %322, label %483, label %.preheader48

.preheader48:                                     ; preds = %cfftz.exit.i42
  br i1 %brmerge162.demorgan, label %.preheader.i43.preheader.us.preheader, label %.preheader20, !noelle.parallelizer.looporder !34

.preheader.i43.preheader.us.preheader:            ; preds = %.preheader48
  br i1 %180, label %.preheader.i43.preheader.us.us, label %.preheader.i43.preheader.us

.preheader.i43.preheader.us.us:                   ; preds = %.preheader.i43.preheader.us.preheader, %.preheader.i43._crit_edge.us.us.1
  %indvars.iv11.i74.us.us = phi i64 [ %indvars.iv.next12.i.us.us.1, %.preheader.i43._crit_edge.us.us.1 ], [ 0, %.preheader.i43.preheader.us.preheader ]
  br i1 %lcmp.mod228, label %.preheader.i43._crit_edge.us.us, label %.preheader.i43.us.epil.us.preheader

.preheader.i43.us.epil.us.preheader:              ; preds = %.preheader.i43.preheader.us.us
  %scevgep39 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv11.i74.us.us, i64 0
  %scevgep3940 = bitcast %struct.dcomplex* %scevgep39 to i8*
  %scevgep37 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv11.i74.us.us, i64 %291
  %scevgep3738 = bitcast %struct.dcomplex* %scevgep37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep3738, i8* align 16 %scevgep3940, i64 %181, i1 false)
  br label %.preheader.i43._crit_edge.us.us

.preheader.i43._crit_edge.us.us:                  ; preds = %.preheader.i43.us.epil.us.preheader, %.preheader.i43.preheader.us.us
  %indvars.iv.next12.i.us.us = or i64 %indvars.iv11.i74.us.us, 1
  br i1 %lcmp.mod228, label %.preheader.i43._crit_edge.us.us.1, label %.preheader.i43.us.epil.us.preheader.1

.preheader.i43.preheader.us:                      ; preds = %.preheader.i43.preheader.us.preheader, %.preheader.i43._crit_edge.us
  %indvars.iv11.i74.us = phi i64 [ %indvars.iv.next12.i.us, %.preheader.i43._crit_edge.us ], [ 0, %.preheader.i43.preheader.us.preheader ]
  br label %.preheader.i43.us

.preheader.i43.us:                                ; preds = %.preheader.i43.preheader.us, %.preheader.i43.us
  %indvars.iv9.i72.us = phi i64 [ %indvars.iv.next10.i.us.3, %.preheader.i43.us ], [ 0, %.preheader.i43.preheader.us ]
  %niter239 = phi i64 [ %niter239.nsub.3, %.preheader.i43.us ], [ %unroll_iter229, %.preheader.i43.preheader.us ]
  %323 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv11.i74.us, i64 %indvars.iv9.i72.us
  %324 = add nsw i64 %indvars.iv9.i72.us, %indvars.iv7475
  %325 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv11.i74.us, i64 %324
  %326 = bitcast %struct.dcomplex* %323 to <2 x i64>*
  %327 = load <2 x i64>, <2 x i64>* %326, align 16, !tbaa !8
  %328 = bitcast %struct.dcomplex* %325 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %328, align 16, !tbaa !8
  %indvars.iv.next10.i.us = or i64 %indvars.iv9.i72.us, 1
  %329 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv11.i74.us, i64 %indvars.iv.next10.i.us
  %330 = add nsw i64 %indvars.iv.next10.i.us, %indvars.iv7475
  %331 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv11.i74.us, i64 %330
  %332 = bitcast %struct.dcomplex* %329 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 16, !tbaa !8
  %334 = bitcast %struct.dcomplex* %331 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %334, align 16, !tbaa !8
  %indvars.iv.next10.i.us.1 = or i64 %indvars.iv9.i72.us, 2
  %335 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv11.i74.us, i64 %indvars.iv.next10.i.us.1
  %336 = add nsw i64 %indvars.iv.next10.i.us.1, %indvars.iv7475
  %337 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv11.i74.us, i64 %336
  %338 = bitcast %struct.dcomplex* %335 to <2 x i64>*
  %339 = load <2 x i64>, <2 x i64>* %338, align 16, !tbaa !8
  %340 = bitcast %struct.dcomplex* %337 to <2 x i64>*
  store <2 x i64> %339, <2 x i64>* %340, align 16, !tbaa !8
  %indvars.iv.next10.i.us.2 = or i64 %indvars.iv9.i72.us, 3
  %341 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv11.i74.us, i64 %indvars.iv.next10.i.us.2
  %342 = add nsw i64 %indvars.iv.next10.i.us.2, %indvars.iv7475
  %343 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv11.i74.us, i64 %342
  %344 = bitcast %struct.dcomplex* %341 to <2 x i64>*
  %345 = load <2 x i64>, <2 x i64>* %344, align 16, !tbaa !8
  %346 = bitcast %struct.dcomplex* %343 to <2 x i64>*
  store <2 x i64> %345, <2 x i64>* %346, align 16, !tbaa !8
  %indvars.iv.next10.i.us.3 = add nuw nsw i64 %indvars.iv9.i72.us, 4
  %niter239.nsub.3 = add i64 %niter239, -4
  %niter239.ncmp.3 = icmp eq i64 %niter239.nsub.3, 0
  br i1 %niter239.ncmp.3, label %.preheader.i43._crit_edge.us.unr-lcssa, label %.preheader.i43.us

.preheader.i43._crit_edge.us.unr-lcssa:           ; preds = %.preheader.i43.us
  br i1 %lcmp.mod228, label %.preheader.i43._crit_edge.us, label %.preheader.i43.us.epil.preheader

.preheader.i43.us.epil.preheader:                 ; preds = %.preheader.i43._crit_edge.us.unr-lcssa
  %347 = add nsw i64 %291, %indvars.iv.next10.i.us.3
  %scevgep32 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv11.i74.us, i64 %347
  %scevgep3233 = bitcast %struct.dcomplex* %scevgep32 to i8*
  %scevgep35 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv11.i74.us, i64 %indvars.iv.next10.i.us.3
  %scevgep3536 = bitcast %struct.dcomplex* %scevgep35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep3233, i8* align 16 %scevgep3536, i64 %181, i1 false)
  br label %.preheader.i43._crit_edge.us

.preheader.i43._crit_edge.us:                     ; preds = %.preheader.i43.us.epil.preheader, %.preheader.i43._crit_edge.us.unr-lcssa
  %indvars.iv.next12.i.us = add nuw nsw i64 %indvars.iv11.i74.us, 1
  %exitcond137 = icmp eq i64 %indvars.iv.next12.i.us, %155
  br i1 %exitcond137, label %.preheader20, label %.preheader.i43.preheader.us, !noelle.parallelizer.looporder !34

.preheader20:                                     ; preds = %.preheader.i43._crit_edge.us, %.preheader.i43._crit_edge.us.us.1, %.preheader16.preheader50, %.preheader48, %483
  %indvars.iv.next75 = add i64 %indvars.iv7475, %149
  %348 = icmp sgt i64 %indvars.iv.next75, %156
  %indvar.next31 = add i64 %indvar30, 1
  br i1 %348, label %.preheader20._crit_edge, label %.preheader16.preheader, !noelle.parallelizer.looporder !32

.preheader20._crit_edge:                          ; preds = %.preheader20, %.preheader20.preheader
  %indvars.iv.next14.i = add nuw nsw i64 %indvars.iv13.i79, 1
  %exitcond138 = icmp eq i64 %indvars.iv.next14.i, %152
  br i1 %exitcond138, label %cffts2.exit, label %.preheader20.preheader, !noelle.parallelizer.looporder !35

cffts2.exit:                                      ; preds = %.preheader20._crit_edge, %ilog2.exit.i.2
  call void @llvm.lifetime.end.p0i8(i64 147456, i8* nonnull %142) #10
  %.b183 = load i1, i1* @dims.0.0, align 16
  %349 = select i1 %.b183, i32 512, i32 0
  br label %.preheader.i2

.preheader.i2:                                    ; preds = %cffts2.exit, %.preheader.i2
  %.01.i = phi i32 [ %351, %.preheader.i2 ], [ 2, %cffts2.exit ]
  %350 = icmp slt i32 %.01.i, %349
  %351 = shl i32 %.01.i, 1
  br i1 %350, label %.preheader.i2, label %ilog2.exit

ilog2.exit:                                       ; preds = %.preheader.i2
  %.b187 = load i1, i1* @dims.0.1, align 16
  %352 = select i1 %.b187, i32 256, i32 0
  br label %.preheader.i2.1

.preheader19.preheader:                           ; preds = %ilog2.exit.2, %.preheader19._crit_edge
  %indvars.iv12.i100 = phi i64 [ %indvars.iv.next13.i, %.preheader19._crit_edge ], [ 0, %ilog2.exit.2 ]
  br i1 %177, label %.preheader19._crit_edge, label %.preheader.i.preheader.preheader, !noelle.parallelizer.looporder !36

.preheader.i.preheader.preheader:                 ; preds = %.preheader19.preheader
  br i1 %brmerge168.demorgan, label %.preheader.i.preheader.us, label %.preheader.i.preheader

.preheader.i.preheader.us:                        ; preds = %.preheader.i.preheader.preheader, %.preheader19.us
  %indvars.iv7696.us = phi i64 [ %indvars.iv.next77.us, %.preheader19.us ], [ 0, %.preheader.i.preheader.preheader ]
  %353 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %354 = icmp sgt i32 %353, 1
  br i1 %354, label %378, label %.lr.ph88.split.us.us

.lr.ph88.split.us.us:                             ; preds = %.preheader.i.preheader.us, %._crit_edge85.us.us
  %indvars.iv6.i86.us.us = phi i64 [ %indvars.iv.next7.i.us.us, %._crit_edge85.us.us ], [ 0, %.preheader.i.preheader.us ]
  %355 = add i64 %indvars.iv6.i86.us.us, %indvars.iv7696.us
  %sext.us.us = shl i64 %355, 32
  %356 = ashr exact i64 %sext.us.us, 32
  br label %357

357:                                              ; preds = %357, %.lr.ph88.split.us.us
  %indvars.iv.i482.us.us = phi i64 [ 0, %.lr.ph88.split.us.us ], [ %indvars.iv.next.i5.us.3.us, %357 ]
  %358 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i100, i64 %356, i64 %indvars.iv.i482.us.us
  %359 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %29, i64 0, i64 %indvars.iv.i482.us.us, i64 %indvars.iv6.i86.us.us
  %360 = bitcast %struct.dcomplex* %358 to <2 x i64>*
  %361 = load <2 x i64>, <2 x i64>* %360, align 16, !tbaa !8
  %362 = bitcast %struct.dcomplex* %359 to <2 x i64>*
  store <2 x i64> %361, <2 x i64>* %362, align 16, !tbaa !8
  %indvars.iv.next.i5.us.us = or i64 %indvars.iv.i482.us.us, 1
  %363 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i100, i64 %356, i64 %indvars.iv.next.i5.us.us
  %364 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %29, i64 0, i64 %indvars.iv.next.i5.us.us, i64 %indvars.iv6.i86.us.us
  %365 = bitcast %struct.dcomplex* %363 to <2 x i64>*
  %366 = load <2 x i64>, <2 x i64>* %365, align 16, !tbaa !8
  %367 = bitcast %struct.dcomplex* %364 to <2 x i64>*
  store <2 x i64> %366, <2 x i64>* %367, align 16, !tbaa !8
  %indvars.iv.next.i5.us.1.us = or i64 %indvars.iv.i482.us.us, 2
  %368 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i100, i64 %356, i64 %indvars.iv.next.i5.us.1.us
  %369 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %29, i64 0, i64 %indvars.iv.next.i5.us.1.us, i64 %indvars.iv6.i86.us.us
  %370 = bitcast %struct.dcomplex* %368 to <2 x i64>*
  %371 = load <2 x i64>, <2 x i64>* %370, align 16, !tbaa !8
  %372 = bitcast %struct.dcomplex* %369 to <2 x i64>*
  store <2 x i64> %371, <2 x i64>* %372, align 16, !tbaa !8
  %indvars.iv.next.i5.us.2.us = or i64 %indvars.iv.i482.us.us, 3
  %373 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i100, i64 %356, i64 %indvars.iv.next.i5.us.2.us
  %374 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %29, i64 0, i64 %indvars.iv.next.i5.us.2.us, i64 %indvars.iv6.i86.us.us
  %375 = bitcast %struct.dcomplex* %373 to <2 x i64>*
  %376 = load <2 x i64>, <2 x i64>* %375, align 16, !tbaa !8
  %377 = bitcast %struct.dcomplex* %374 to <2 x i64>*
  store <2 x i64> %376, <2 x i64>* %377, align 16, !tbaa !8
  %indvars.iv.next.i5.us.3.us = add nuw nsw i64 %indvars.iv.i482.us.us, 4
  %exitcond140.3.us = icmp eq i64 %indvars.iv.next.i5.us.3.us, %162
  br i1 %exitcond140.3.us, label %._crit_edge85.us.us, label %357, !noelle.parallelizer.looporder !37

._crit_edge85.us.us:                              ; preds = %357
  %indvars.iv.next7.i.us.us = add nuw nsw i64 %indvars.iv6.i86.us.us, 1
  %exitcond141.us = icmp eq i64 %indvars.iv.next7.i.us.us, %149
  br i1 %exitcond141.us, label %cfftz.exit.i.us, label %.lr.ph88.split.us.us, !noelle.parallelizer.looporder !38

378:                                              ; preds = %.preheader.i.preheader.us
  store i64 %149, i64* %33, align 8, !noelle.environment_variable.live_in.store_pointer !24
  store [512 x [18 x %struct.dcomplex]]* %29, [512 x [18 x %struct.dcomplex]]** %11, align 8, !noelle.environment_variable.live_in.store_pointer !25
  store i64 %162, i64* %34, align 8, !noelle.environment_variable.live_in.store_pointer !26
  store i64 %indvars.iv12.i100, i64* %12, align 8, !noelle.environment_variable.live_in.store_pointer !27
  store i64 %indvars.iv7696.us, i64* %35, align 8, !noelle.environment_variable.live_in.store_pointer !11
  %379 = call { i32, i64 } @NOELLE_DOALLDispatcher(void (i8*, i64, i64, i64)* nonnull @noelle_task_5, i8* nonnull %9, i64 8, i64 8) #10
  %.pre46 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  br label %cfftz.exit.i.us

cfftz.exit.i.us:                                  ; preds = %._crit_edge85.us.us, %378
  %380 = phi i32 [ %.pre46, %378 ], [ %353, %._crit_edge85.us.us ]
  %381 = icmp sgt i32 %380, 1
  br i1 %381, label %404, label %.lr.ph95.split.us.us

.lr.ph95.split.us.us:                             ; preds = %cfftz.exit.i.us, %._crit_edge92.us.us
  %indvars.iv10.i93.us.us = phi i64 [ %indvars.iv.next11.i.us.us, %._crit_edge92.us.us ], [ 0, %cfftz.exit.i.us ]
  %382 = add nsw i64 %indvars.iv10.i93.us.us, %indvars.iv7696.us
  br label %383

383:                                              ; preds = %383, %.lr.ph95.split.us.us
  %indvars.iv8.i89.us.us = phi i64 [ 0, %.lr.ph95.split.us.us ], [ %indvars.iv.next9.i.us.3.us, %383 ]
  %384 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %29, i64 0, i64 %indvars.iv8.i89.us.us, i64 %indvars.iv10.i93.us.us
  %385 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u2, i64 0, i64 %indvars.iv12.i100, i64 %382, i64 %indvars.iv8.i89.us.us
  %386 = bitcast %struct.dcomplex* %384 to <2 x i64>*
  %387 = load <2 x i64>, <2 x i64>* %386, align 16, !tbaa !8
  %388 = bitcast %struct.dcomplex* %385 to <2 x i64>*
  store <2 x i64> %387, <2 x i64>* %388, align 16, !tbaa !8
  %indvars.iv.next9.i.us.us = or i64 %indvars.iv8.i89.us.us, 1
  %389 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %29, i64 0, i64 %indvars.iv.next9.i.us.us, i64 %indvars.iv10.i93.us.us
  %390 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u2, i64 0, i64 %indvars.iv12.i100, i64 %382, i64 %indvars.iv.next9.i.us.us
  %391 = bitcast %struct.dcomplex* %389 to <2 x i64>*
  %392 = load <2 x i64>, <2 x i64>* %391, align 16, !tbaa !8
  %393 = bitcast %struct.dcomplex* %390 to <2 x i64>*
  store <2 x i64> %392, <2 x i64>* %393, align 16, !tbaa !8
  %indvars.iv.next9.i.us.1.us = or i64 %indvars.iv8.i89.us.us, 2
  %394 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %29, i64 0, i64 %indvars.iv.next9.i.us.1.us, i64 %indvars.iv10.i93.us.us
  %395 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u2, i64 0, i64 %indvars.iv12.i100, i64 %382, i64 %indvars.iv.next9.i.us.1.us
  %396 = bitcast %struct.dcomplex* %394 to <2 x i64>*
  %397 = load <2 x i64>, <2 x i64>* %396, align 16, !tbaa !8
  %398 = bitcast %struct.dcomplex* %395 to <2 x i64>*
  store <2 x i64> %397, <2 x i64>* %398, align 16, !tbaa !8
  %indvars.iv.next9.i.us.2.us = or i64 %indvars.iv8.i89.us.us, 3
  %399 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %29, i64 0, i64 %indvars.iv.next9.i.us.2.us, i64 %indvars.iv10.i93.us.us
  %400 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u2, i64 0, i64 %indvars.iv12.i100, i64 %382, i64 %indvars.iv.next9.i.us.2.us
  %401 = bitcast %struct.dcomplex* %399 to <2 x i64>*
  %402 = load <2 x i64>, <2 x i64>* %401, align 16, !tbaa !8
  %403 = bitcast %struct.dcomplex* %400 to <2 x i64>*
  store <2 x i64> %402, <2 x i64>* %403, align 16, !tbaa !8
  %indvars.iv.next9.i.us.3.us = add nuw nsw i64 %indvars.iv8.i89.us.us, 4
  %exitcond143.3.us = icmp eq i64 %indvars.iv.next9.i.us.3.us, %162
  br i1 %exitcond143.3.us, label %._crit_edge92.us.us, label %383, !noelle.parallelizer.looporder !39

._crit_edge92.us.us:                              ; preds = %383
  %indvars.iv.next11.i.us.us = add nuw nsw i64 %indvars.iv10.i93.us.us, 1
  %exitcond144.us = icmp eq i64 %indvars.iv.next11.i.us.us, %149
  br i1 %exitcond144.us, label %.preheader19.us, label %.lr.ph95.split.us.us, !noelle.parallelizer.looporder !40

404:                                              ; preds = %cfftz.exit.i.us
  store i64 %149, i64* %30, align 8, !noelle.environment_variable.live_in.store_pointer !24
  store [512 x [18 x %struct.dcomplex]]* %29, [512 x [18 x %struct.dcomplex]]** %7, align 8, !noelle.environment_variable.live_in.store_pointer !25
  store i64 %162, i64* %31, align 8, !noelle.environment_variable.live_in.store_pointer !26
  store i64 %indvars.iv12.i100, i64* %8, align 8, !noelle.environment_variable.live_in.store_pointer !27
  store i64 %indvars.iv7696.us, i64* %32, align 8, !noelle.environment_variable.live_in.store_pointer !11
  %405 = call { i32, i64 } @NOELLE_DOALLDispatcher(void (i8*, i64, i64, i64)* nonnull @noelle_task_6, i8* nonnull %5, i64 8, i64 8) #10
  br label %.preheader19.us

.preheader19.us:                                  ; preds = %._crit_edge92.us.us, %404
  %indvars.iv.next77.us = add i64 %indvars.iv7696.us, %149
  %406 = icmp sgt i64 %indvars.iv.next77.us, %163
  br i1 %406, label %.preheader19._crit_edge, label %.preheader.i.preheader.us, !noelle.parallelizer.looporder !36

.preheader.i.preheader:                           ; preds = %.preheader.i.preheader.preheader, %.preheader19
  %indvars.iv7696 = phi i64 [ %indvars.iv.next77, %.preheader19 ], [ 0, %.preheader.i.preheader.preheader ]
  %407 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %408 = icmp sgt i32 %407, 1
  br i1 %408, label %cfftz.exit.i, label %.preheader19

cfftz.exit.i:                                     ; preds = %.preheader.i.preheader
  store i64 %149, i64* %33, align 8, !noelle.environment_variable.live_in.store_pointer !24
  store [512 x [18 x %struct.dcomplex]]* %29, [512 x [18 x %struct.dcomplex]]** %11, align 8, !noelle.environment_variable.live_in.store_pointer !25
  store i64 %162, i64* %34, align 8, !noelle.environment_variable.live_in.store_pointer !26
  store i64 %indvars.iv12.i100, i64* %12, align 8, !noelle.environment_variable.live_in.store_pointer !27
  store i64 %indvars.iv7696, i64* %35, align 8, !noelle.environment_variable.live_in.store_pointer !11
  %409 = call { i32, i64 } @NOELLE_DOALLDispatcher(void (i8*, i64, i64, i64)* nonnull @noelle_task_5, i8* nonnull %9, i64 8, i64 8) #10
  %.pre45 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %410 = icmp sgt i32 %.pre45, 1
  br i1 %410, label %485, label %.preheader19

.preheader19:                                     ; preds = %.preheader.i.preheader, %cfftz.exit.i, %485
  %indvars.iv.next77 = add i64 %indvars.iv7696, %149
  %411 = icmp sgt i64 %indvars.iv.next77, %163
  br i1 %411, label %.preheader19._crit_edge, label %.preheader.i.preheader, !noelle.parallelizer.looporder !36

.preheader19._crit_edge:                          ; preds = %.preheader19, %.preheader19.us, %.preheader19.preheader
  %indvars.iv.next13.i = add nuw nsw i64 %indvars.iv12.i100, 1
  %exitcond145 = icmp eq i64 %indvars.iv.next13.i, %158
  br i1 %exitcond145, label %cffts1.exit, label %.preheader19.preheader, !noelle.parallelizer.looporder !41

cffts1.exit:                                      ; preds = %.preheader19._crit_edge, %ilog2.exit.2
  call void @llvm.lifetime.end.p0i8(i64 147456, i8* nonnull %143) #10
  br i1 %brmerge.demorgan53, label %cffts1.exit.split.us.split.us, label %checksum.exit

cffts1.exit.split.us.split.us:                    ; preds = %cffts1.exit, %._crit_edge.i.us.us
  %.0.i102.us.us = phi i32 [ %438, %._crit_edge.i.us.us ], [ 1, %cffts1.exit ]
  %412 = phi <2 x double> [ %437, %._crit_edge.i.us.us ], [ zeroinitializer, %cffts1.exit ]
  %413 = and i32 %.0.i102.us.us, 511
  %414 = add nuw nsw i32 %413, 1
  %415 = icmp ult i32 %414, %164
  br i1 %415, label %._crit_edge.i.us.us, label %416

416:                                              ; preds = %cffts1.exit.split.us.split.us
  %417 = mul nuw nsw i32 %.0.i102.us.us, 3
  %418 = and i32 %417, 255
  %419 = add nuw nsw i32 %418, 1
  %420 = icmp ult i32 %419, %165
  br i1 %420, label %._crit_edge.i.us.us, label %421

421:                                              ; preds = %416
  %422 = mul nuw nsw i32 %.0.i102.us.us, 5
  %423 = and i32 %422, 255
  %424 = add nuw nsw i32 %423, 1
  %425 = icmp uge i32 %424, %166
  %or.cond4.i.us.us = and i1 %.b182, %425
  br i1 %or.cond4.i.us.us, label %426, label %._crit_edge.i.us.us

426:                                              ; preds = %421
  %427 = sub nuw nsw i32 %424, %166
  %428 = sext i32 %427 to i64
  %429 = sub nuw nsw i32 %419, %165
  %430 = sext i32 %429 to i64
  %431 = sub nuw nsw i32 %414, %164
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u2, i64 0, i64 %428, i64 %430, i64 %432, i32 0
  %434 = bitcast double* %433 to <2 x double>*
  %435 = load <2 x double>, <2 x double>* %434, align 16, !tbaa !8
  %436 = fadd <2 x double> %412, %435
  br label %._crit_edge.i.us.us

._crit_edge.i.us.us:                              ; preds = %416, %cffts1.exit.split.us.split.us, %426, %421
  %437 = phi <2 x double> [ %436, %426 ], [ %412, %cffts1.exit.split.us.split.us ], [ %412, %416 ], [ %412, %421 ]
  %438 = add nuw nsw i32 %.0.i102.us.us, 1
  %exitcond.i.us.us = icmp eq i32 %438, 1025
  br i1 %exitcond.i.us.us, label %checksum.exit, label %cffts1.exit.split.us.split.us

checksum.exit:                                    ; preds = %._crit_edge.i.us.us, %cffts1.exit
  %.lcssa = phi <2 x double> [ zeroinitializer, %cffts1.exit ], [ %437, %._crit_edge.i.us.us ]
  %439 = getelementptr inbounds [21 x %struct.dcomplex], [21 x %struct.dcomplex]* @sums, i64 0, i64 %indvars.iv105, i32 0
  %440 = bitcast double* %439 to <2 x double>*
  %441 = load <2 x double>, <2 x double>* %440, align 16, !tbaa !8
  %442 = fadd <2 x double> %.lcssa, %441
  %443 = fmul <2 x double> %442, <double 0x3E60000000000000, double 0x3E60000000000000>
  store <2 x double> %443, <2 x double>* %440, align 16, !tbaa !8
  %444 = extractelement <2 x double> %443, i32 0
  %445 = extractelement <2 x double> %443, i32 1
  %446 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), i32 %186, double %444, double %445) #10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv105, 1
  %exitcond1 = icmp eq i64 %indvars.iv.next, %167
  br i1 %exitcond1, label %.preheader.preheader, label %checksum.exit._crit_edge, !noelle.parallelizer.looporder !11

checksum.exit._crit_edge:                         ; preds = %checksum.exit
  %.pre.b = load i1, i1* @dims.0.2, align 8
  %.pre = select i1 %.pre.b, i32 256, i32 0
  %.pre150.b = load i1, i1* @dims.0.1, align 16
  %.pre150 = select i1 %.pre150.b, i32 256, i32 0
  %.pre151.b = load i1, i1* @dims.0.0, align 16
  %.pre151 = select i1 %.pre151.b, i32 512, i32 0
  br label %182

.preheader:                                       ; preds = %455
  %exitcond.i1 = icmp eq i64 %indvars.iv.next.i, 21
  br i1 %exitcond.i1, label %verify.exit, label %.preheader.preheader

.preheader.preheader:                             ; preds = %checksum.exit, %.preheader
  %indvars.iv.i55 = phi i64 [ %indvars.iv.next.i, %.preheader ], [ 1, %checksum.exit ]
  %447 = getelementptr inbounds [21 x %struct.dcomplex], [21 x %struct.dcomplex]* @sums, i64 0, i64 %indvars.iv.i55, i32 0
  %448 = load double, double* %447, align 16, !tbaa !42
  %449 = getelementptr inbounds [21 x double], [21 x double]* @__const.verify.vdata_real_b, i64 0, i64 %indvars.iv.i55
  %450 = load double, double* %449, align 8, !tbaa !8
  %451 = fsub double %448, %450
  %452 = fdiv double %451, %450
  %453 = tail call double @llvm.fabs.f64(double %452) #10
  %454 = fcmp ogt double %453, 0x3D719799812DEA11
  br i1 %454, label %verify.exit, label %455

455:                                              ; preds = %.preheader.preheader
  %456 = getelementptr inbounds [21 x %struct.dcomplex], [21 x %struct.dcomplex]* @sums, i64 0, i64 %indvars.iv.i55, i32 1
  %457 = load double, double* %456, align 8, !tbaa !44
  %458 = getelementptr inbounds [21 x double], [21 x double]* @__const.verify.vdata_imag_b, i64 0, i64 %indvars.iv.i55
  %459 = load double, double* %458, align 8, !tbaa !8
  %460 = fsub double %457, %459
  %461 = fdiv double %460, %459
  %462 = tail call double @llvm.fabs.f64(double %461) #10
  %463 = fcmp ogt double %462, 0x3D719799812DEA11
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i55, 1
  br i1 %463, label %verify.exit, label %.preheader

verify.exit:                                      ; preds = %.preheader, %.preheader.preheader, %455, %compute_indexmap.exit39
  %.sink = phi i8* [ getelementptr inbounds ([27 x i8], [27 x i8]* @str.1, i64 0, i64 0), %compute_indexmap.exit39 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @str.2, i64 0, i64 0), %455 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @str.2, i64 0, i64 0), %.preheader.preheader ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @str.2, i64 0, i64 0), %.preheader ]
  %.0144 = phi i32 [ 1, %compute_indexmap.exit39 ], [ 1, %.preheader ], [ 0, %.preheader.preheader ], [ 0, %455 ]
  %.0342 = phi i8 [ 85, %compute_indexmap.exit39 ], [ 66, %455 ], [ 66, %.preheader.preheader ], [ 66, %.preheader ]
  %puts.i = tail call i32 @puts(i8* nonnull %.sink) #10
  %464 = zext i8 %.0342 to i32
  %465 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i32 %464) #10
  %466 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %466) #10
  call void @wtime_(double* nonnull %4) #10
  %467 = load double, double* %4, align 8, !tbaa !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %466) #10
  %468 = load double, double* getelementptr inbounds ([64 x double], [64 x double]* @start, i64 0, i64 0), align 16, !tbaa !8
  %469 = fsub double %467, %468
  %470 = load double, double* getelementptr inbounds ([64 x double], [64 x double]* @elapsed, i64 0, i64 0), align 16, !tbaa !8
  %471 = fadd double %470, %469
  store double %471, double* getelementptr inbounds ([64 x double], [64 x double]* @elapsed, i64 0, i64 0), align 16, !tbaa !8
  %472 = fcmp une double %471, 0.000000e+00
  %.b3 = load i1, i1* @niter, align 4
  br i1 %472, label %473, label %._crit_edge

473:                                              ; preds = %verify.exit
  %474 = select i1 %.b3, double 0x40F6795974D4B09E, double 0x40B249838638FC9C
  %475 = fdiv double %474, %471
  br label %._crit_edge

._crit_edge:                                      ; preds = %verify.exit, %473
  %.0 = phi double [ %475, %473 ], [ 0.000000e+00, %verify.exit ]
  %476 = select i1 %.b3, i32 20, i32 0
  tail call void @c_print_results(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8 signext %.0342, i32 512, i32 256, i32 256, i32 %476, i32 1, double %471, double %.0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i32 %.0144, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0))
  ret i32 0

477:                                              ; preds = %.preheader18.preheader
  store [512 x [18 x %struct.dcomplex]]* %27, [512 x [18 x %struct.dcomplex]]** %45, align 8, !noelle.environment_variable.live_in.store_pointer !24
  store i64 %149, i64* %25, align 8, !noelle.environment_variable.live_in.store_pointer !25
  store i64 %150, i64* %46, align 8, !noelle.environment_variable.live_in.store_pointer !26
  store i64 %indvars.iv13.i1466, i64* %26, align 8, !noelle.environment_variable.live_in.store_pointer !27
  store i64 %indvars.iv7262, i64* %47, align 8, !noelle.environment_variable.live_in.store_pointer !11
  %478 = call { i32, i64 } @NOELLE_DOALLDispatcher(void (i8*, i64, i64, i64)* nonnull @noelle_task_1, i8* nonnull %24, i64 8, i64 8) #10
  %.pre43 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  br label %cfftz.exit.i56

479:                                              ; preds = %.preheader16.preheader
  store i64 %149, i64* %42, align 8, !noelle.environment_variable.live_in.store_pointer !24
  store [512 x [18 x %struct.dcomplex]]* %28, [512 x [18 x %struct.dcomplex]]** %22, align 8, !noelle.environment_variable.live_in.store_pointer !25
  store i64 %155, i64* %43, align 8, !noelle.environment_variable.live_in.store_pointer !26
  store i64 %indvars.iv13.i79, i64* %23, align 8, !noelle.environment_variable.live_in.store_pointer !27
  store i64 %indvars.iv7475, i64* %44, align 8, !noelle.environment_variable.live_in.store_pointer !11
  %480 = call { i32, i64 } @NOELLE_DOALLDispatcher(void (i8*, i64, i64, i64)* nonnull @noelle_task_2, i8* nonnull %20, i64 8, i64 8) #10
  %.pre44 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  br label %cfftz.exit.i42

481:                                              ; preds = %cfftz.exit.i56
  store [512 x [18 x %struct.dcomplex]]* %27, [512 x [18 x %struct.dcomplex]]** %39, align 8, !noelle.environment_variable.live_in.store_pointer !24
  store i64 %149, i64* %18, align 8, !noelle.environment_variable.live_in.store_pointer !25
  store i64 %150, i64* %40, align 8, !noelle.environment_variable.live_in.store_pointer !26
  store i64 %indvars.iv13.i1466, i64* %19, align 8, !noelle.environment_variable.live_in.store_pointer !27
  store i64 %indvars.iv7262, i64* %41, align 8, !noelle.environment_variable.live_in.store_pointer !11
  %482 = call { i32, i64 } @NOELLE_DOALLDispatcher(void (i8*, i64, i64, i64)* nonnull @noelle_task_3, i8* nonnull %17, i64 8, i64 8) #10
  br label %.preheader21

483:                                              ; preds = %cfftz.exit.i42
  store i64 %149, i64* %36, align 8, !noelle.environment_variable.live_in.store_pointer !24
  store [512 x [18 x %struct.dcomplex]]* %28, [512 x [18 x %struct.dcomplex]]** %15, align 8, !noelle.environment_variable.live_in.store_pointer !25
  store i64 %155, i64* %37, align 8, !noelle.environment_variable.live_in.store_pointer !26
  store i64 %indvars.iv13.i79, i64* %16, align 8, !noelle.environment_variable.live_in.store_pointer !27
  store i64 %indvars.iv7475, i64* %38, align 8, !noelle.environment_variable.live_in.store_pointer !11
  %484 = call { i32, i64 } @NOELLE_DOALLDispatcher(void (i8*, i64, i64, i64)* nonnull @noelle_task_4, i8* nonnull %13, i64 8, i64 8) #10
  br label %.preheader20

485:                                              ; preds = %cfftz.exit.i
  store i64 %149, i64* %30, align 8, !noelle.environment_variable.live_in.store_pointer !24
  store [512 x [18 x %struct.dcomplex]]* %29, [512 x [18 x %struct.dcomplex]]** %7, align 8, !noelle.environment_variable.live_in.store_pointer !25
  store i64 %162, i64* %31, align 8, !noelle.environment_variable.live_in.store_pointer !26
  store i64 %indvars.iv12.i100, i64* %8, align 8, !noelle.environment_variable.live_in.store_pointer !27
  store i64 %indvars.iv7696, i64* %32, align 8, !noelle.environment_variable.live_in.store_pointer !11
  %486 = call { i32, i64 } @NOELLE_DOALLDispatcher(void (i8*, i64, i64, i64)* nonnull @noelle_task_6, i8* nonnull %5, i64 8, i64 8) #10
  br label %.preheader19

.preheader.i2.i9.1:                               ; preds = %ilog2.exit.i13, %.preheader.i2.i9.1
  %.01.i.i8.1 = phi i32 [ %488, %.preheader.i2.i9.1 ], [ 2, %ilog2.exit.i13 ]
  %487 = icmp slt i32 %.01.i.i8.1, %228
  %488 = shl i32 %.01.i.i8.1, 1
  br i1 %487, label %.preheader.i2.i9.1, label %ilog2.exit.i13.1

ilog2.exit.i13.1:                                 ; preds = %.preheader.i2.i9.1
  %.b201 = load i1, i1* @dims.2.2, align 8
  %489 = select i1 %.b201, i32 256, i32 0
  br label %.preheader.i2.i9.2

.preheader.i2.i9.2:                               ; preds = %ilog2.exit.i13.1, %.preheader.i2.i9.2
  %.01.i.i8.2 = phi i32 [ %491, %.preheader.i2.i9.2 ], [ 2, %ilog2.exit.i13.1 ]
  %490 = icmp slt i32 %.01.i.i8.2, %489
  %491 = shl i32 %.01.i.i8.2, 1
  br i1 %490, label %.preheader.i2.i9.2, label %ilog2.exit.i13.2

ilog2.exit.i13.2:                                 ; preds = %.preheader.i2.i9.2
  call void @llvm.lifetime.start.p0i8(i64 147456, i8* nonnull %141) #10
  br i1 %.b200, label %.preheader21.preheader, label %cffts3.exit, !noelle.parallelizer.looporder !31

.preheader.i2.i.1:                                ; preds = %ilog2.exit.i, %.preheader.i2.i.1
  %.01.i.i.1 = phi i32 [ %493, %.preheader.i2.i.1 ], [ 2, %ilog2.exit.i ]
  %492 = icmp slt i32 %.01.i.i.1, %290
  %493 = shl i32 %.01.i.i.1, 1
  br i1 %492, label %.preheader.i2.i.1, label %ilog2.exit.i.1

ilog2.exit.i.1:                                   ; preds = %.preheader.i2.i.1
  %.b195 = load i1, i1* @dims.1.2, align 8
  %494 = select i1 %.b195, i32 256, i32 0
  br label %.preheader.i2.i.2

.preheader.i2.i.2:                                ; preds = %ilog2.exit.i.1, %.preheader.i2.i.2
  %.01.i.i.2 = phi i32 [ %496, %.preheader.i2.i.2 ], [ 2, %ilog2.exit.i.1 ]
  %495 = icmp slt i32 %.01.i.i.2, %494
  %496 = shl i32 %.01.i.i.2, 1
  br i1 %495, label %.preheader.i2.i.2, label %ilog2.exit.i.2

ilog2.exit.i.2:                                   ; preds = %.preheader.i2.i.2
  call void @llvm.lifetime.start.p0i8(i64 147456, i8* nonnull %142) #10
  br i1 %.b196, label %.preheader20.preheader, label %cffts2.exit, !noelle.parallelizer.looporder !35

.preheader.i2.1:                                  ; preds = %ilog2.exit, %.preheader.i2.1
  %.01.i.1 = phi i32 [ %498, %.preheader.i2.1 ], [ 2, %ilog2.exit ]
  %497 = icmp slt i32 %.01.i.1, %352
  %498 = shl i32 %.01.i.1, 1
  br i1 %497, label %.preheader.i2.1, label %ilog2.exit.1

ilog2.exit.1:                                     ; preds = %.preheader.i2.1
  %.b189 = load i1, i1* @dims.0.2, align 8
  %499 = select i1 %.b189, i32 256, i32 0
  br label %.preheader.i2.2

.preheader.i2.2:                                  ; preds = %ilog2.exit.1, %.preheader.i2.2
  %.01.i.2 = phi i32 [ %501, %.preheader.i2.2 ], [ 2, %ilog2.exit.1 ]
  %500 = icmp slt i32 %.01.i.2, %499
  %501 = shl i32 %.01.i.2, 1
  br i1 %500, label %.preheader.i2.2, label %ilog2.exit.2

ilog2.exit.2:                                     ; preds = %.preheader.i2.2
  call void @llvm.lifetime.start.p0i8(i64 147456, i8* nonnull %143) #10
  br i1 %.b190, label %.preheader19.preheader, label %cffts1.exit, !noelle.parallelizer.looporder !41

.preheader1.i18.us.epil.us.1:                     ; preds = %.preheader1.i18._crit_edge.us.us
  %502 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv.next8.i21.us.us, i64 %indvars.iv13.i1466, i64 %232
  %503 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv.next8.i21.us.us, i64 0
  %504 = bitcast %struct.dcomplex* %502 to <2 x i64>*
  %505 = load <2 x i64>, <2 x i64>* %504, align 16, !tbaa !8
  %506 = bitcast %struct.dcomplex* %503 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %506, align 16, !tbaa !8
  br label %.preheader1.i18._crit_edge.us.us.1

.preheader1.i18._crit_edge.us.us.1:               ; preds = %.preheader1.i18.us.epil.us.1, %.preheader1.i18._crit_edge.us.us
  %indvars.iv.next8.i21.us.us.1 = add nuw nsw i64 %indvars.iv7.i1758.us.us, 2
  %exitcond127.us.1 = icmp eq i64 %indvars.iv.next8.i21.us.us.1, %150
  br i1 %exitcond127.us.1, label %cfftz.exit.i56, label %.preheader1.i18.preheader.us.us, !noelle.parallelizer.looporder !29

.preheader.i58.us.epil.us.preheader.1:            ; preds = %.preheader.i58._crit_edge.us.us
  %scevgep27.1 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %27, i64 0, i64 %indvars.iv.next12.i61.us.us, i64 0
  %scevgep2728.1 = bitcast %struct.dcomplex* %scevgep27.1 to i8*
  %scevgep25.1 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv.next12.i61.us.us, i64 %indvars.iv13.i1466, i64 %229
  %scevgep2526.1 = bitcast %struct.dcomplex* %scevgep25.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep2526.1, i8* align 16 %scevgep2728.1, i64 %181, i1 false)
  br label %.preheader.i58._crit_edge.us.us.1

.preheader.i58._crit_edge.us.us.1:                ; preds = %.preheader.i58.us.epil.us.preheader.1, %.preheader.i58._crit_edge.us.us
  %indvars.iv.next12.i61.us.us.1 = add nuw nsw i64 %indvars.iv11.i5761.us.us, 2
  %exitcond130.us.1 = icmp eq i64 %indvars.iv.next12.i61.us.us.1, %150
  br i1 %exitcond130.us.1, label %.preheader21, label %.preheader.i58.preheader.us.us, !noelle.parallelizer.looporder !30

.preheader1.i.us.epil.us.1:                       ; preds = %.preheader1.i._crit_edge.us.us
  %507 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv.next8.i.us.us, i64 %294
  %508 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv.next8.i.us.us, i64 0
  %509 = bitcast %struct.dcomplex* %507 to <2 x i64>*
  %510 = load <2 x i64>, <2 x i64>* %509, align 16, !tbaa !8
  %511 = bitcast %struct.dcomplex* %508 to <2 x i64>*
  store <2 x i64> %510, <2 x i64>* %511, align 16, !tbaa !8
  br label %.preheader1.i._crit_edge.us.us.1

.preheader1.i._crit_edge.us.us.1:                 ; preds = %.preheader1.i.us.epil.us.1, %.preheader1.i._crit_edge.us.us
  %indvars.iv.next8.i.us.us.1 = add nuw nsw i64 %indvars.iv7.i71.us.us, 2
  %exitcond134.us.1 = icmp eq i64 %indvars.iv.next8.i.us.us.1, %155
  br i1 %exitcond134.us.1, label %cfftz.exit.i42, label %.preheader1.i.preheader.us.us, !noelle.parallelizer.looporder !33

.preheader.i43.us.epil.us.preheader.1:            ; preds = %.preheader.i43._crit_edge.us.us
  %scevgep39.1 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %28, i64 0, i64 %indvars.iv.next12.i.us.us, i64 0
  %scevgep3940.1 = bitcast %struct.dcomplex* %scevgep39.1 to i8*
  %scevgep37.1 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i79, i64 %indvars.iv.next12.i.us.us, i64 %291
  %scevgep3738.1 = bitcast %struct.dcomplex* %scevgep37.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep3738.1, i8* align 16 %scevgep3940.1, i64 %181, i1 false)
  br label %.preheader.i43._crit_edge.us.us.1

.preheader.i43._crit_edge.us.us.1:                ; preds = %.preheader.i43.us.epil.us.preheader.1, %.preheader.i43._crit_edge.us.us
  %indvars.iv.next12.i.us.us.1 = add nuw nsw i64 %indvars.iv11.i74.us.us, 2
  %exitcond137.us.1 = icmp eq i64 %indvars.iv.next12.i.us.us.1, %155
  br i1 %exitcond137.us.1, label %.preheader20, label %.preheader.i43.preheader.us.us, !noelle.parallelizer.looporder !34

._crit_edge.i38.._crit_edge.i38_crit_edge.1:      ; preds = %._crit_edge.i38.._crit_edge.i38_crit_edge
  %512 = fmul double %138, %.pre23.i37.pre.1
  %513 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i35.2
  store double %512, double* %513, align 8, !tbaa !8
  %indvars.iv.next.i35.177 = add nuw nsw i64 %indvars.iv.next.i35204, 4
  %.pre23.i37.pre.1.1 = load double, double* getelementptr inbounds ([1966081 x double], [1966081 x double]* @ex, i64 0, i64 1), align 8, !tbaa !8
  %514 = fmul double %512, %.pre23.i37.pre.1.1
  %515 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i35.177
  store double %514, double* %515, align 16, !tbaa !8
  %indvars.iv.next.i35.1.1 = add nuw nsw i64 %indvars.iv.next.i35204, 5
  %516 = fmul double %.pre23.i37.pre.1.1, %514
  %517 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i35.1.1
  store double %516, double* %517, align 8, !tbaa !8
  %indvars.iv.next.i35.2.1 = add nuw nsw i64 %indvars.iv.next.i35204, 6
  br label %._crit_edge.i38.._crit_edge.i38_crit_edge

._crit_edge.i13.._crit_edge.i13_crit_edge.1:      ; preds = %._crit_edge.i13.._crit_edge.i13_crit_edge
  %518 = fmul double %90, %.pre23.i.pre.1
  %519 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i11.2
  store double %518, double* %519, align 8, !tbaa !8
  %indvars.iv.next.i11.179 = add nuw nsw i64 %indvars.iv.next.i11205, 4
  %.pre23.i.pre.1.1 = load double, double* getelementptr inbounds ([1966081 x double], [1966081 x double]* @ex, i64 0, i64 1), align 8, !tbaa !8
  %520 = fmul double %518, %.pre23.i.pre.1.1
  %521 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i11.179
  store double %520, double* %521, align 16, !tbaa !8
  %indvars.iv.next.i11.1.1 = add nuw nsw i64 %indvars.iv.next.i11205, 5
  %522 = fmul double %.pre23.i.pre.1.1, %520
  %523 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %indvars.iv.next.i11.1.1
  store double %522, double* %523, align 8, !tbaa !8
  %indvars.iv.next.i11.2.1 = add nuw nsw i64 %indvars.iv.next.i11205, 6
  br label %._crit_edge.i13.._crit_edge.i13_crit_edge
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: cold nofree nounwind uwtable
define internal fastcc void @setup() unnamed_addr #2 {
.preheader.preheader:
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @str, i64 0, i64 0))
  store i1 true, i1* @niter, align 4
  %0 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0), i32 512, i32 256, i32 256) #10
  %.b = load i1, i1* @niter, align 4
  %1 = select i1 %.b, i32 20, i32 0
  %2 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i32 %1) #10
  store i1 true, i1* @dims.0.0, align 16
  store i1 true, i1* @dims.0.1, align 16
  store i1 true, i1* @dims.0.2, align 8
  store i1 true, i1* @dims.1.0, align 16
  store i1 true, i1* @dims.1.1, align 16
  store i1 true, i1* @dims.1.2, align 8
  store i1 true, i1* @dims.2.0, align 8
  store i1 true, i1* @dims.2.1, align 8
  store i1 true, i1* @dims.2.2, align 8
  store i1 true, i1* @xstart.0, align 4
  store i1 true, i1* @xend.0, align 4
  store i1 true, i1* @ystart.0, align 4
  store i1 true, i1* @yend.0, align 4
  store i1 true, i1* @zstart.0, align 4
  store i1 true, i1* @zend.0, align 4
  store i1 true, i1* @xstart.2, align 4
  store i1 true, i1* @ystart.2, align 4
  store i1 true, i1* @zstart.2, align 4
  store i32 16, i32* @fftblock, align 4, !tbaa !2
  store i32 18, i32* @fftblockpad, align 4, !tbaa !2
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_initial_conditions() unnamed_addr #3 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  store double 0x41B2B9B0A1000000, double* %5, align 8, !tbaa !8
  %.b25 = load i1, i1* @zstart.0, align 4
  %7 = zext i1 %.b25 to i32
  %8 = shl nuw nsw i32 %7, 18
  %.b = load i1, i1* @ystart.0, align 4
  %9 = zext i1 %.b to i32
  %10 = shl nuw nsw i32 %9, 10
  %11 = or i32 %8, -263168
  %12 = add nsw i32 %11, %10
  %13 = bitcast double* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %ipow46.exit, label %16

16:                                               ; preds = %0
  store double 0x41D2309CE5400000, double* %3, align 8, !tbaa !8
  store double 1.000000e+00, double* %4, align 8, !tbaa !8
  %17 = icmp sgt i32 %12, 1
  br i1 %17, label %.lr.ph14, label %._crit_edge15

.lr.ph14:                                         ; preds = %16, %26
  %.pre17 = phi double [ %.pre, %26 ], [ 0x41D2309CE5400000, %16 ]
  %.01.i12 = phi i32 [ %.1.i, %26 ], [ %12, %16 ]
  %18 = and i32 %.01.i12, -2
  %19 = icmp eq i32 %18, %.01.i12
  br i1 %19, label %20, label %23

20:                                               ; preds = %.lr.ph14
  %21 = lshr i32 %.01.i12, 1
  %22 = call double @randlc(double* nonnull %3, double %.pre17) #10
  %.pre.pre = load double, double* %3, align 8, !tbaa !8
  br label %26

23:                                               ; preds = %.lr.ph14
  %24 = call double @randlc(double* nonnull %4, double %.pre17) #10
  %25 = add nsw i32 %.01.i12, -1
  br label %26

26:                                               ; preds = %23, %20
  %.pre = phi double [ %.pre.pre, %20 ], [ %.pre17, %23 ]
  %.1.i = phi i32 [ %21, %20 ], [ %25, %23 ]
  %27 = icmp sgt i32 %.1.i, 1
  br i1 %27, label %.lr.ph14, label %._crit_edge15

._crit_edge15:                                    ; preds = %26, %16
  %28 = phi double [ 0x41D2309CE5400000, %16 ], [ %.pre, %26 ]
  %29 = call double @randlc(double* nonnull %4, double %28) #10
  %30 = load double, double* %4, align 8, !tbaa !8
  br label %ipow46.exit

ipow46.exit:                                      ; preds = %0, %._crit_edge15
  %31 = phi double [ %30, %._crit_edge15 ], [ 1.000000e+00, %0 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  %32 = call double @randlc(double* nonnull %5, double %31)
  %33 = bitcast double* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = bitcast double* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  store double 0x41D2309CE5400000, double* %1, align 8, !tbaa !8
  store double 1.000000e+00, double* %2, align 8, !tbaa !8
  br label %._crit_edge22

._crit_edge22:                                    ; preds = %43, %ipow46.exit
  %.pre2319 = phi double [ 0x41D2309CE5400000, %ipow46.exit ], [ %.pre23, %43 ]
  %.01.i111 = phi i32 [ 262144, %ipow46.exit ], [ %.1.i2, %43 ]
  %35 = and i32 %.01.i111, -2
  %36 = icmp eq i32 %35, %.01.i111
  br i1 %36, label %37, label %40

37:                                               ; preds = %._crit_edge22
  %38 = lshr i32 %.01.i111, 1
  %39 = call double @randlc(double* nonnull %1, double %.pre2319) #10
  %.pre23.pre = load double, double* %1, align 8, !tbaa !8
  br label %43

40:                                               ; preds = %._crit_edge22
  %41 = call double @randlc(double* nonnull %2, double %.pre2319) #10
  %42 = add nsw i32 %.01.i111, -1
  br label %43

43:                                               ; preds = %40, %37
  %.pre23 = phi double [ %.pre23.pre, %37 ], [ %.pre2319, %40 ]
  %.1.i2 = phi i32 [ %38, %37 ], [ %42, %40 ]
  %44 = icmp sgt i32 %.1.i2, 1
  br i1 %44, label %._crit_edge22, label %ipow46.exit3

ipow46.exit3:                                     ; preds = %43
  %45 = call double @randlc(double* nonnull %2, double %.pre23) #10
  %46 = load double, double* %2, align 8, !tbaa !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %.b27 = load i1, i1* @dims.0.2, align 8
  %47 = select i1 %.b27, i64 256, i64 0
  %.b26 = load i1, i1* @dims.0.1, align 16
  %48 = select i1 %.b26, i32 256, i32 0
  %49 = shl nuw nsw i32 %48, 10
  %50 = zext i32 %49 to i64
  %51 = zext i32 %48 to i64
  %52 = fmul double %46, 0x3E80000000000000
  %53 = fptosi double %52 to i32
  %54 = sitofp i32 %53 to double
  %55 = fmul double %54, 0x4160000000000000
  %56 = fsub double %46, %55
  %brmerge.demorgan = and i1 %.b27, %.b26
  br i1 %brmerge.demorgan, label %.preheader.preheader.preheader, label %._crit_edge10, !noelle.parallelizer.looporder !45

.preheader.preheader.preheader:                   ; preds = %ipow46.exit3
  %.promoted = load double, double* %5, align 8, !tbaa !8
  br label %.preheader.preheader.us2

.preheader.preheader.us2:                         ; preds = %._crit_edge.us14, %.preheader.preheader.preheader
  %indvars.iv89.us3 = phi i64 [ %indvars.iv.next9.us15, %._crit_edge.us14 ], [ 0, %.preheader.preheader.preheader ]
  %57 = phi double [ %126, %._crit_edge.us14 ], [ %.promoted, %.preheader.preheader.preheader ]
  br label %.preheader.us

.preheader.us:                                    ; preds = %.preheader.us, %.preheader.preheader.us2
  %.0.i2.us = phi double [ %57, %.preheader.preheader.us2 ], [ %78, %.preheader.us ]
  %indvars.iv.i1.us = phi i64 [ 1, %.preheader.preheader.us2 ], [ %indvars.iv.next.i.us, %.preheader.us ]
  %58 = fmul double %.0.i2.us, 0x3E80000000000000
  %59 = fptosi double %58 to i32
  %60 = sitofp i32 %59 to double
  %61 = fmul double %60, 0x4160000000000000
  %62 = fsub double %.0.i2.us, %61
  %63 = fmul double %62, 1.450000e+02
  %64 = fmul double %60, 0x41509CE540000000
  %65 = fadd double %64, %63
  %66 = fmul double %65, 0x3E80000000000000
  %67 = fptosi double %66 to i32
  %68 = sitofp i32 %67 to double
  %69 = fmul double %68, 0x4160000000000000
  %70 = fsub double %65, %69
  %71 = fmul double %70, 0x4160000000000000
  %72 = fmul double %62, 0x41509CE540000000
  %73 = fadd double %72, %71
  %74 = fmul double %73, 0x3D10000000000000
  %75 = fptosi double %74 to i32
  %76 = sitofp i32 %75 to double
  %77 = fmul double %76, 0x42D0000000000000
  %78 = fsub double %73, %77
  %79 = fmul double %78, 0x3D10000000000000
  %80 = getelementptr inbounds [524289 x double], [524289 x double]* @compute_initial_conditions.tmp, i64 0, i64 %indvars.iv.i1.us
  store double %79, double* %80, align 8, !tbaa !8
  %indvars.iv.next.i.us = add nuw nsw i64 %indvars.iv.i1.us, 1
  %81 = icmp ult i64 %indvars.iv.i1.us, %50
  br i1 %81, label %.preheader.us, label %.lr.ph8.us4

.lr.ph8.us4:                                      ; preds = %.preheader.us, %vranlc.exit.us12
  %.07.us5 = phi i64 [ %indvars.iv.next5.3.us, %vranlc.exit.us12 ], [ 1, %.preheader.us ]
  %indvars.iv66.us6 = phi i64 [ %indvars.iv.next7.us13, %vranlc.exit.us12 ], [ 0, %.preheader.us ]
  %sext.us7 = shl i64 %.07.us5, 32
  %82 = ashr exact i64 %sext.us7, 32
  br label %83

83:                                               ; preds = %83, %.lr.ph8.us4
  %indvars.iv5.us8 = phi i64 [ 0, %.lr.ph8.us4 ], [ %indvars.iv.next.3.us, %83 ]
  %indvars.iv43.us9 = phi i64 [ %82, %.lr.ph8.us4 ], [ %indvars.iv.next5.3.us, %83 ]
  %84 = getelementptr inbounds [524289 x double], [524289 x double]* @compute_initial_conditions.tmp, i64 0, i64 %indvars.iv43.us9
  %85 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv89.us3, i64 %indvars.iv66.us6, i64 %indvars.iv5.us8
  %indvars.iv.next5.us10 = add nsw i64 %indvars.iv43.us9, 2
  %86 = bitcast double* %84 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 8, !tbaa !8
  %88 = bitcast %struct.dcomplex* %85 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %88, align 16, !tbaa !8
  %indvars.iv.next.us11 = or i64 %indvars.iv5.us8, 1
  %89 = getelementptr inbounds [524289 x double], [524289 x double]* @compute_initial_conditions.tmp, i64 0, i64 %indvars.iv.next5.us10
  %90 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv89.us3, i64 %indvars.iv66.us6, i64 %indvars.iv.next.us11
  %indvars.iv.next5.1.us = add nsw i64 %indvars.iv43.us9, 4
  %91 = bitcast double* %89 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !tbaa !8
  %93 = bitcast %struct.dcomplex* %90 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %93, align 16, !tbaa !8
  %indvars.iv.next.1.us = or i64 %indvars.iv5.us8, 2
  %94 = getelementptr inbounds [524289 x double], [524289 x double]* @compute_initial_conditions.tmp, i64 0, i64 %indvars.iv.next5.1.us
  %95 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv89.us3, i64 %indvars.iv66.us6, i64 %indvars.iv.next.1.us
  %indvars.iv.next5.2.us = add nsw i64 %indvars.iv43.us9, 6
  %96 = bitcast double* %94 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !tbaa !8
  %98 = bitcast %struct.dcomplex* %95 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %98, align 16, !tbaa !8
  %indvars.iv.next.2.us = or i64 %indvars.iv5.us8, 3
  %99 = getelementptr inbounds [524289 x double], [524289 x double]* @compute_initial_conditions.tmp, i64 0, i64 %indvars.iv.next5.2.us
  %100 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv89.us3, i64 %indvars.iv66.us6, i64 %indvars.iv.next.2.us
  %indvars.iv.next5.3.us = add nsw i64 %indvars.iv43.us9, 8
  %101 = bitcast double* %99 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !tbaa !8
  %103 = bitcast %struct.dcomplex* %100 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %103, align 16, !tbaa !8
  %indvars.iv.next.3.us = add nuw nsw i64 %indvars.iv5.us8, 4
  %exitcond.3.us = icmp eq i64 %indvars.iv.next.3.us, 512
  br i1 %exitcond.3.us, label %vranlc.exit.us12, label %83

vranlc.exit.us12:                                 ; preds = %83
  %indvars.iv.next7.us13 = add nuw nsw i64 %indvars.iv66.us6, 1
  %exitcond19.us = icmp eq i64 %indvars.iv.next7.us13, %51
  br i1 %exitcond19.us, label %vranlc.exit._crit_edge.loopexit.us, label %.lr.ph8.us4

104:                                              ; preds = %vranlc.exit._crit_edge.loopexit.us
  %105 = fmul double %57, 0x3E80000000000000
  %106 = fptosi double %105 to i32
  %107 = sitofp i32 %106 to double
  %108 = fmul double %107, 0x4160000000000000
  %109 = fsub double %57, %108
  %110 = fmul double %109, %54
  %111 = fmul double %56, %107
  %112 = fadd double %111, %110
  %113 = fmul double %112, 0x3E80000000000000
  %114 = fptosi double %113 to i32
  %115 = sitofp i32 %114 to double
  %116 = fmul double %115, 0x4160000000000000
  %117 = fsub double %112, %116
  %118 = fmul double %117, 0x4160000000000000
  %119 = fmul double %56, %109
  %120 = fadd double %119, %118
  %121 = fmul double %120, 0x3D10000000000000
  %122 = fptosi double %121 to i32
  %123 = sitofp i32 %122 to double
  %124 = fmul double %123, 0x42D0000000000000
  %125 = fsub double %120, %124
  br label %._crit_edge.us14

._crit_edge.us14:                                 ; preds = %104, %vranlc.exit._crit_edge.loopexit.us
  %126 = phi double [ %125, %104 ], [ %57, %vranlc.exit._crit_edge.loopexit.us ]
  %indvars.iv.next9.us15 = add nuw nsw i64 %indvars.iv89.us3, 1
  %exitcond20.us = icmp eq i64 %indvars.iv.next9.us15, %47
  br i1 %exitcond20.us, label %._crit_edge10, label %.preheader.preheader.us2, !noelle.parallelizer.looporder !45

vranlc.exit._crit_edge.loopexit.us:               ; preds = %vranlc.exit.us12
  %127 = icmp eq i64 %indvars.iv89.us3, %47
  br i1 %127, label %._crit_edge.us14, label %104

._crit_edge10:                                    ; preds = %._crit_edge.us14, %ipow46.exit3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

; Function Attrs: cold nofree nounwind uwtable
define internal fastcc void @fft_init(i32) unnamed_addr #2 {
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %ilog2.exit, label %.preheader.i.preheader

.preheader.i.preheader:                           ; preds = %1
  %3 = icmp sgt i32 %0, 2
  br i1 %3, label %.preheader.i, label %.lr.ph8.preheader

.preheader.i:                                     ; preds = %.preheader.i.preheader, %.preheader.i
  %.01.i11 = phi i32 [ %4, %.preheader.i ], [ 2, %.preheader.i.preheader ]
  %.02.i10 = phi i32 [ %5, %.preheader.i ], [ 1, %.preheader.i.preheader ]
  %4 = shl i32 %.01.i11, 1
  %5 = add nuw nsw i32 %.02.i10, 1
  %6 = icmp slt i32 %4, %0
  br i1 %6, label %.preheader.i, label %.lr.ph8.preheader

ilog2.exit:                                       ; preds = %1
  store <2 x double> zeroinitializer, <2 x double>* bitcast ([512 x %struct.dcomplex]* @u to <2 x double>*), align 16, !tbaa !8
  br label %._crit_edge9

.lr.ph8.preheader:                                ; preds = %.preheader.i, %.preheader.i.preheader
  %.0.i.ph = phi i32 [ 1, %.preheader.i.preheader ], [ %5, %.preheader.i ]
  %7 = sitofp i32 %.0.i.ph to double
  store double %7, double* getelementptr inbounds ([512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 0, i32 0), align 16, !tbaa !42
  store double 0.000000e+00, double* getelementptr inbounds ([512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 0, i32 1), align 8, !tbaa !44
  br label %.lr.ph8

.lr.ph8:                                          ; preds = %.lr.ph8.preheader, %._crit_edge
  %.07 = phi i32 [ %37, %._crit_edge ], [ 1, %.lr.ph8.preheader ]
  %.016 = phi i32 [ %38, %._crit_edge ], [ 1, %.lr.ph8.preheader ]
  %.035 = phi i32 [ %36, %._crit_edge ], [ 1, %.lr.ph8.preheader ]
  %8 = sitofp i32 %.07 to double
  %9 = fdiv double 0x400921FB54442D18, %8
  %10 = sext i32 %.035 to i64
  %wide.trip.count = zext i32 %.07 to i64
  %exitcond2 = icmp eq i32 %.07, 0
  br i1 %exitcond2, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.lr.ph8
  %xtraiter = and i64 %wide.trip.count, 1
  %11 = icmp eq i32 %.07, 1
  br i1 %11, label %._crit_edge.loopexit.unr-lcssa, label %.lr.ph.preheader.new

.lr.ph.preheader.new:                             ; preds = %.lr.ph.preheader
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader.new
  %indvars.iv3 = phi i64 [ 0, %.lr.ph.preheader.new ], [ %indvars.iv.next.1, %.lr.ph ]
  %niter = phi i64 [ %unroll_iter, %.lr.ph.preheader.new ], [ %niter.nsub.1, %.lr.ph ]
  %12 = trunc i64 %indvars.iv3 to i32
  %13 = sitofp i32 %12 to double
  %14 = fmul double %9, %13
  %15 = tail call double @cos(double %14) #10
  %16 = add nsw i64 %indvars.iv3, %10
  %17 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %16, i32 0
  store double %15, double* %17, align 16, !tbaa !42
  %18 = tail call double @sin(double %14) #10
  %19 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %16, i32 1
  store double %18, double* %19, align 8, !tbaa !44
  %indvars.iv.next = or i64 %indvars.iv3, 1
  %20 = trunc i64 %indvars.iv.next to i32
  %21 = sitofp i32 %20 to double
  %22 = fmul double %9, %21
  %23 = tail call double @cos(double %22) #10
  %24 = add nsw i64 %indvars.iv.next, %10
  %25 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %24, i32 0
  store double %23, double* %25, align 16, !tbaa !42
  %26 = tail call double @sin(double %22) #10
  %27 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %24, i32 1
  store double %26, double* %27, align 8, !tbaa !44
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv3, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %._crit_edge.loopexit.unr-lcssa, label %.lr.ph

._crit_edge.loopexit.unr-lcssa:                   ; preds = %.lr.ph, %.lr.ph.preheader
  %indvars.iv3.unr = phi i64 [ 0, %.lr.ph.preheader ], [ %indvars.iv.next.1, %.lr.ph ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %._crit_edge, label %.lr.ph.epil

.lr.ph.epil:                                      ; preds = %._crit_edge.loopexit.unr-lcssa
  %28 = trunc i64 %indvars.iv3.unr to i32
  %29 = sitofp i32 %28 to double
  %30 = fmul double %9, %29
  %31 = tail call double @cos(double %30) #10
  %32 = add nsw i64 %indvars.iv3.unr, %10
  %33 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %32, i32 0
  store double %31, double* %33, align 16, !tbaa !42
  %34 = tail call double @sin(double %30) #10
  %35 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %32, i32 1
  store double %34, double* %35, align 8, !tbaa !44
  br label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph.epil, %._crit_edge.loopexit.unr-lcssa, %.lr.ph8
  %36 = add nuw nsw i32 %.035, %.07
  %37 = shl nsw i32 %.07, 1
  %38 = add nuw i32 %.016, 1
  %exitcond1 = icmp eq i32 %.016, %.0.i.ph
  br i1 %exitcond1, label %._crit_edge9, label %.lr.ph8

._crit_edge9:                                     ; preds = %._crit_edge, %ilog2.exit
  ret void
}

; Function Attrs: cold nounwind uwtable
define internal fastcc void @fft() unnamed_addr #4 {
.preheader.i1.preheader:
  %0 = alloca [512 x [18 x %struct.dcomplex]], align 16
  %1 = alloca [512 x [18 x %struct.dcomplex]], align 16
  %noelle.loop_environment = alloca [80 x i64], align 8
  %2 = bitcast [80 x i64]* %noelle.loop_environment to i8*
  %3 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.loop_environment, i64 0, i64 8
  %4 = bitcast i64* %3 to [512 x [18 x %struct.dcomplex]]**
  %5 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.loop_environment, i64 0, i64 24
  %6 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.loop_environment, i64 0, i64 40
  %7 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.loop_environment, i64 0, i64 56
  %8 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.loop_environment, i64 0, i64 64
  %9 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.loop_environment, i64 0, i64 72
  %10 = alloca [512 x [18 x %struct.dcomplex]], align 16
  %11 = alloca [512 x [18 x %struct.dcomplex]], align 16
  %12 = alloca [512 x [18 x %struct.dcomplex]], align 16
  %13 = alloca [512 x [18 x %struct.dcomplex]], align 16
  %.b = load i1, i1* @dims.0.0, align 16
  %14 = select i1 %.b, i32 512, i32 0
  br i1 %.b, label %.preheader.i1, label %ilog2.exit

.preheader.i1:                                    ; preds = %.preheader.i1.preheader, %.preheader.i1
  %.01.i139 = phi i32 [ %15, %.preheader.i1 ], [ 2, %.preheader.i1.preheader ]
  %.02.i138 = phi i32 [ %16, %.preheader.i1 ], [ 1, %.preheader.i1.preheader ]
  %15 = shl i32 %.01.i139, 1
  %16 = add nuw nsw i32 %.02.i138, 1
  %17 = icmp slt i32 %15, %14
  br i1 %17, label %.preheader.i1, label %ilog2.exit

ilog2.exit:                                       ; preds = %.preheader.i1, %.preheader.i1.preheader
  %18 = phi i32 [ 1, %.preheader.i1.preheader ], [ %16, %.preheader.i1 ]
  %.b229 = load i1, i1* @dims.0.1, align 16
  %19 = select i1 %.b229, i32 256, i32 0
  br i1 %.b229, label %.preheader.i1.1, label %ilog2.exit.1

.preheader6.preheader.lr.ph:                      ; preds = %ilog2.exit.2
  %20 = srem i32 %18, 2
  %21 = icmp ne i32 %20, 1
  %22 = icmp slt i32 %944, 0
  %23 = icmp sgt i32 %.pre.i, 0
  %24 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 0, i64 0, i32 0
  %not..b = xor i1 %.b, true
  %brmerge = or i1 %21, %not..b
  %25 = add nsw i64 %946, -1
  %brmerge200.demorgan = and i1 %.b, %23
  %.not202 = xor i1 %23, true
  %xtraiter305 = and i64 %946, 3
  %26 = icmp ult i64 %25, 3
  %unroll_iter308 = sub nsw i64 %946, %xtraiter305
  %lcmp.mod307 = icmp eq i64 %xtraiter305, 0
  %27 = shl nuw nsw i64 %xtraiter305, 4
  br label %.preheader6.preheader

.preheader6.preheader:                            ; preds = %.preheader6._crit_edge, %.preheader6.preheader.lr.ph
  %indvars.iv12.i136 = phi i64 [ 0, %.preheader6.preheader.lr.ph ], [ %indvars.iv.next13.i, %.preheader6._crit_edge ]
  br i1 %22, label %.preheader6._crit_edge, label %.preheader.i.preheader, !noelle.parallelizer.looporder !25

.preheader.i.preheader:                           ; preds = %.preheader6.preheader, %.preheader6
  %indvars.iv19133 = phi i64 [ %indvars.iv.next20, %.preheader6 ], [ 0, %.preheader6.preheader ]
  br i1 %brmerge200.demorgan, label %.lr.ph98.split.us, label %.preheader.i._crit_edge

.lr.ph98.split.us:                                ; preds = %.preheader.i.preheader, %._crit_edge95.us
  %indvars.iv6.i96.us = phi i64 [ %indvars.iv.next7.i.us, %._crit_edge95.us ], [ 0, %.preheader.i.preheader ]
  %28 = add i64 %indvars.iv6.i96.us, %indvars.iv19133
  %sext21.us = shl i64 %28, 32
  %29 = ashr exact i64 %sext21.us, 32
  br label %30

30:                                               ; preds = %30, %.lr.ph98.split.us
  %indvars.iv.i92.us = phi i64 [ 0, %.lr.ph98.split.us ], [ %indvars.iv.next.i.us.3, %30 ]
  %31 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i136, i64 %29, i64 %indvars.iv.i92.us
  %32 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv.i92.us, i64 %indvars.iv6.i96.us
  %33 = bitcast %struct.dcomplex* %31 to <2 x i64>*
  %34 = load <2 x i64>, <2 x i64>* %33, align 16, !tbaa !8
  %35 = bitcast %struct.dcomplex* %32 to <2 x i64>*
  store <2 x i64> %34, <2 x i64>* %35, align 16, !tbaa !8
  %indvars.iv.next.i.us = or i64 %indvars.iv.i92.us, 1
  %36 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i136, i64 %29, i64 %indvars.iv.next.i.us
  %37 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv.next.i.us, i64 %indvars.iv6.i96.us
  %38 = bitcast %struct.dcomplex* %36 to <2 x i64>*
  %39 = load <2 x i64>, <2 x i64>* %38, align 16, !tbaa !8
  %40 = bitcast %struct.dcomplex* %37 to <2 x i64>*
  store <2 x i64> %39, <2 x i64>* %40, align 16, !tbaa !8
  %indvars.iv.next.i.us.1 = or i64 %indvars.iv.i92.us, 2
  %41 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i136, i64 %29, i64 %indvars.iv.next.i.us.1
  %42 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv.next.i.us.1, i64 %indvars.iv6.i96.us
  %43 = bitcast %struct.dcomplex* %41 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 16, !tbaa !8
  %45 = bitcast %struct.dcomplex* %42 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %45, align 16, !tbaa !8
  %indvars.iv.next.i.us.2 = or i64 %indvars.iv.i92.us, 3
  %46 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i136, i64 %29, i64 %indvars.iv.next.i.us.2
  %47 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv.next.i.us.2, i64 %indvars.iv6.i96.us
  %48 = bitcast %struct.dcomplex* %46 to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 16, !tbaa !8
  %50 = bitcast %struct.dcomplex* %47 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %50, align 16, !tbaa !8
  %indvars.iv.next.i.us.3 = add nuw nsw i64 %indvars.iv.i92.us, 4
  %exitcond180.3 = icmp eq i64 %indvars.iv.next.i.us.3, %945
  br i1 %exitcond180.3, label %._crit_edge95.us, label %30

._crit_edge95.us:                                 ; preds = %30
  %indvars.iv.next7.i.us = add nuw nsw i64 %indvars.iv6.i96.us, 1
  %exitcond181 = icmp eq i64 %indvars.iv.next7.i.us, %946
  br i1 %exitcond181, label %.preheader.i._crit_edge, label %.lr.ph98.split.us

.preheader.i._crit_edge:                          ; preds = %._crit_edge95.us, %.preheader.i.preheader
  br i1 %949, label %LeafBlock7._crit_edge.._crit_edge_crit_edge.i.i, label %.lr.ph121

LeafBlock7._crit_edge.._crit_edge_crit_edge.i.i:  ; preds = %.preheader.i._crit_edge
  %51 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.13, i64 0, i64 0), i32 1, i32 %18, i32 %948) #10
  tail call void @exit(i32 1) #30
  unreachable

.lr.ph121:                                        ; preds = %.preheader.i._crit_edge, %fftz2.exit
  %.0.i.i120 = phi i32 [ %158, %fftz2.exit ], [ 1, %.preheader.i._crit_edge ]
  %52 = icmp eq i32 %.0.i.i120, 1
  %53 = add nsw i32 %.0.i.i120, -2
  %54 = shl i32 2, %53
  %.02.i.i.i = select i1 %52, i32 1, i32 %54
  %55 = sub nsw i32 %18, %.0.i.i120
  %56 = icmp eq i32 %55, 0
  %57 = add nsw i32 %55, -1
  %58 = shl i32 2, %57
  %.03.i.i.i = select i1 %56, i32 1, i32 %58
  %59 = shl nsw i32 %.02.i.i.i, 1
  %60 = sext i32 %.02.i.i.i to i64
  %61 = sext i32 %.03.i.i.i to i64
  %62 = sext i32 %59 to i64
  %63 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %64 = icmp sgt i32 %63, 1
  br i1 %64, label %606, label %.split.us.i.i.i.preheader

.split.us.i.i.i.preheader:                        ; preds = %.lr.ph121
  %65 = icmp slt i32 %.03.i.i.i, 1
  %66 = icmp slt i32 %.02.i.i.i, 1
  %brmerge203 = or i1 %66, %.not202
  %or.cond = or i1 %65, %brmerge203
  br i1 %or.cond, label %.us-lcssa.us.loopexit.i.i.i, label %.lr.ph108.split, !noelle.parallelizer.looporder !26

.lr.ph108.split:                                  ; preds = %.split.us.i.i.i.preheader, %.split.us.i.i.i
  %indvars.iv10.i.i.i107 = phi i64 [ %indvars.iv.next11.i.i.i, %.split.us.i.i.i ], [ 0, %.split.us.i.i.i.preheader ]
  %67 = mul nsw i64 %indvars.iv10.i.i.i107, %60
  %68 = mul nsw i64 %indvars.iv10.i.i.i107, %62
  %69 = add nsw i64 %indvars.iv10.i.i.i107, %61
  %70 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %69, i32 0
  %71 = bitcast double* %70 to <2 x double>*
  %72 = load <2 x double>, <2 x double>* %71, align 16, !tbaa !8
  %73 = shufflevector <2 x double> %72, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  br label %.lr.ph105.split.us

.lr.ph105.split.us:                               ; preds = %.lr.ph108.split, %._crit_edge102.us
  %indvars.iv8.i.i.i103.us = phi i64 [ %indvars.iv.next9.i.i.i.us, %._crit_edge102.us ], [ 0, %.lr.ph108.split ]
  %74 = add nsw i64 %indvars.iv8.i.i.i103.us, %67
  %75 = add nsw i64 %74, %951
  %76 = add nsw i64 %indvars.iv8.i.i.i103.us, %68
  %77 = add nsw i64 %76, %60
  br label %78

78:                                               ; preds = %78, %.lr.ph105.split.us
  %indvars.iv.i.i.i99.us = phi i64 [ 0, %.lr.ph105.split.us ], [ %indvars.iv.next.i.i.i.us, %78 ]
  %79 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %74, i64 %indvars.iv.i.i.i99.us, i32 0
  %80 = bitcast double* %79 to <2 x double>*
  %81 = load <2 x double>, <2 x double>* %80, align 16, !tbaa !8
  %82 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %75, i64 %indvars.iv.i.i.i99.us, i32 0
  %83 = bitcast double* %82 to <2 x double>*
  %84 = load <2 x double>, <2 x double>* %83, align 16, !tbaa !8
  %85 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 %76, i64 %indvars.iv.i.i.i99.us, i32 0
  %86 = fadd <2 x double> %81, %84
  %87 = bitcast double* %85 to <2 x double>*
  store <2 x double> %86, <2 x double>* %87, align 16, !tbaa !8
  %88 = extractelement <2 x double> %81, i32 0
  %89 = extractelement <2 x double> %84, i32 0
  %90 = fsub double %88, %89
  %91 = extractelement <2 x double> %81, i32 1
  %92 = extractelement <2 x double> %84, i32 1
  %93 = fsub double %91, %92
  %94 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 %77, i64 %indvars.iv.i.i.i99.us, i32 0
  %95 = insertelement <2 x double> undef, double %93, i32 0
  %96 = shufflevector <2 x double> %95, <2 x double> undef, <2 x i32> zeroinitializer
  %97 = fmul <2 x double> %73, %96
  %98 = insertelement <2 x double> undef, double %90, i32 0
  %99 = shufflevector <2 x double> %98, <2 x double> undef, <2 x i32> zeroinitializer
  %100 = fmul <2 x double> %72, %99
  %101 = fsub <2 x double> %100, %97
  %102 = fadd <2 x double> %100, %97
  %103 = shufflevector <2 x double> %101, <2 x double> %102, <2 x i32> <i32 0, i32 3>
  %104 = bitcast double* %94 to <2 x double>*
  store <2 x double> %103, <2 x double>* %104, align 16, !tbaa !8
  %indvars.iv.next.i.i.i.us = add nuw nsw i64 %indvars.iv.i.i.i99.us, 1
  %exitcond183 = icmp eq i64 %indvars.iv.next.i.i.i.us, %946
  br i1 %exitcond183, label %._crit_edge102.us, label %78

._crit_edge102.us:                                ; preds = %78
  %indvars.iv.next9.i.i.i.us = add nuw nsw i64 %indvars.iv8.i.i.i103.us, 1
  %exitcond184 = icmp eq i64 %indvars.iv.next9.i.i.i.us, %60
  br i1 %exitcond184, label %.split.us.i.i.i, label %.lr.ph105.split.us

.split.us.i.i.i:                                  ; preds = %._crit_edge102.us
  %indvars.iv.next11.i.i.i = add nuw nsw i64 %indvars.iv10.i.i.i107, 1
  %exitcond185 = icmp eq i64 %indvars.iv.next11.i.i.i, %61
  br i1 %exitcond185, label %.us-lcssa.us.loopexit.i.i.i, label %.lr.ph108.split, !noelle.parallelizer.looporder !26

.us-lcssa.us.loopexit.i.i.i:                      ; preds = %.split.us.i.i.i, %.split.us.i.i.i.preheader, %noelle_task_0_update_original_heap.exit26
  %105 = icmp eq i32 %18, %.0.i.i120
  br i1 %105, label %.loopexit.i.i, label %106

106:                                              ; preds = %.us-lcssa.us.loopexit.i.i.i
  %107 = add nsw i32 %.0.i.i120, -1
  %108 = shl i32 2, %107
  %109 = xor i32 %.0.i.i120, -1
  %110 = add i32 %18, %109
  %111 = icmp eq i32 %110, 0
  %112 = add nsw i32 %110, -1
  %113 = shl i32 2, %112
  %.03.i = select i1 %111, i32 1, i32 %113
  %114 = shl nsw i32 %108, 1
  %115 = sext i32 %108 to i64
  %116 = sext i32 %.03.i to i64
  %117 = sext i32 %114 to i64
  %118 = icmp slt i32 %.03.i, 1
  %119 = icmp slt i32 %108, 1
  %brmerge206 = or i1 %119, %.not202
  %or.cond173 = or i1 %118, %brmerge206
  br i1 %or.cond173, label %fftz2.exit, label %.lr.ph119.split

.lr.ph119.split:                                  ; preds = %106, %.split.us.i
  %indvars.iv10.i1117 = phi i64 [ %indvars.iv.next11.i3, %.split.us.i ], [ 0, %106 ]
  %120 = mul nsw i64 %indvars.iv10.i1117, %115
  %121 = mul nsw i64 %indvars.iv10.i1117, %117
  %122 = add nsw i64 %indvars.iv10.i1117, %116
  %123 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %122, i32 0
  %124 = bitcast double* %123 to <2 x double>*
  %125 = load <2 x double>, <2 x double>* %124, align 16, !tbaa !8
  %126 = shufflevector <2 x double> %125, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  br label %.lr.ph115.split.us

.lr.ph115.split.us:                               ; preds = %.lr.ph119.split, %._crit_edge112.us
  %indvars.iv8.i2113.us = phi i64 [ %indvars.iv.next9.i5.us, %._crit_edge112.us ], [ 0, %.lr.ph119.split ]
  %127 = add nsw i64 %indvars.iv8.i2113.us, %120
  %128 = add nsw i64 %127, %951
  %129 = add nsw i64 %indvars.iv8.i2113.us, %121
  %130 = add nsw i64 %129, %115
  br label %131

131:                                              ; preds = %131, %.lr.ph115.split.us
  %indvars.iv.i4109.us = phi i64 [ 0, %.lr.ph115.split.us ], [ %indvars.iv.next.i6.us, %131 ]
  %132 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 %127, i64 %indvars.iv.i4109.us, i32 0
  %133 = bitcast double* %132 to <2 x double>*
  %134 = load <2 x double>, <2 x double>* %133, align 16, !tbaa !8
  %135 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 %128, i64 %indvars.iv.i4109.us, i32 0
  %136 = bitcast double* %135 to <2 x double>*
  %137 = load <2 x double>, <2 x double>* %136, align 16, !tbaa !8
  %138 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %129, i64 %indvars.iv.i4109.us, i32 0
  %139 = fadd <2 x double> %134, %137
  %140 = bitcast double* %138 to <2 x double>*
  store <2 x double> %139, <2 x double>* %140, align 16, !tbaa !8
  %141 = extractelement <2 x double> %134, i32 0
  %142 = extractelement <2 x double> %137, i32 0
  %143 = fsub double %141, %142
  %144 = extractelement <2 x double> %134, i32 1
  %145 = extractelement <2 x double> %137, i32 1
  %146 = fsub double %144, %145
  %147 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %130, i64 %indvars.iv.i4109.us, i32 0
  %148 = insertelement <2 x double> undef, double %146, i32 0
  %149 = shufflevector <2 x double> %148, <2 x double> undef, <2 x i32> zeroinitializer
  %150 = fmul <2 x double> %126, %149
  %151 = insertelement <2 x double> undef, double %143, i32 0
  %152 = shufflevector <2 x double> %151, <2 x double> undef, <2 x i32> zeroinitializer
  %153 = fmul <2 x double> %125, %152
  %154 = fsub <2 x double> %153, %150
  %155 = fadd <2 x double> %153, %150
  %156 = shufflevector <2 x double> %154, <2 x double> %155, <2 x i32> <i32 0, i32 3>
  %157 = bitcast double* %147 to <2 x double>*
  store <2 x double> %156, <2 x double>* %157, align 16, !tbaa !8
  %indvars.iv.next.i6.us = add nuw nsw i64 %indvars.iv.i4109.us, 1
  %exitcond187 = icmp eq i64 %indvars.iv.next.i6.us, %946
  br i1 %exitcond187, label %._crit_edge112.us, label %131

._crit_edge112.us:                                ; preds = %131
  %indvars.iv.next9.i5.us = add nuw nsw i64 %indvars.iv8.i2113.us, 1
  %exitcond188 = icmp eq i64 %indvars.iv.next9.i5.us, %115
  br i1 %exitcond188, label %.split.us.i, label %.lr.ph115.split.us

.split.us.i:                                      ; preds = %._crit_edge112.us
  %indvars.iv.next11.i3 = add nuw nsw i64 %indvars.iv10.i1117, 1
  %exitcond189 = icmp eq i64 %indvars.iv.next11.i3, %116
  br i1 %exitcond189, label %fftz2.exit, label %.lr.ph119.split

fftz2.exit:                                       ; preds = %.split.us.i, %106
  %158 = add nuw nsw i32 %.0.i.i120, 2
  %159 = icmp slt i32 %18, %158
  br i1 %159, label %.loopexit.i.i, label %.lr.ph121

.loopexit.i.i:                                    ; preds = %fftz2.exit, %.us-lcssa.us.loopexit.i.i.i
  br i1 %brmerge, label %cfftz.exit.i, label %.preheader1.i.i.preheader.lr.ph

.preheader1.i.i.preheader.lr.ph:                  ; preds = %.loopexit.i.i
  br i1 %23, label %.preheader1.i.i.preheader.us.preheader, label %.preheader6

.preheader1.i.i.preheader.us.preheader:           ; preds = %.preheader1.i.i.preheader.lr.ph
  br i1 %26, label %.preheader1.i.i.preheader.us.us, label %.preheader1.i.i.preheader.us

.preheader1.i.i.preheader.us.us:                  ; preds = %.preheader1.i.i.preheader.us.preheader, %.preheader1.i.i._crit_edge.us.us.1
  %indvars.iv5.i.i124.us.us = phi i64 [ %indvars.iv.next6.i.i.us.us.1, %.preheader1.i.i._crit_edge.us.us.1 ], [ 0, %.preheader1.i.i.preheader.us.preheader ]
  br i1 %lcmp.mod307, label %.preheader1.i.i._crit_edge.us.us, label %.preheader1.i.i.us.epil.us.preheader

.preheader1.i.i.us.epil.us.preheader:             ; preds = %.preheader1.i.i.preheader.us.us
  %scevgep154 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 %indvars.iv5.i.i124.us.us, i64 0
  %scevgep154155 = bitcast %struct.dcomplex* %scevgep154 to i8*
  %scevgep152 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv5.i.i124.us.us, i64 0
  %scevgep152153 = bitcast %struct.dcomplex* %scevgep152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep152153, i8* align 16 %scevgep154155, i64 %27, i1 false)
  br label %.preheader1.i.i._crit_edge.us.us

.preheader1.i.i._crit_edge.us.us:                 ; preds = %.preheader1.i.i.us.epil.us.preheader, %.preheader1.i.i.preheader.us.us
  %indvars.iv.next6.i.i.us.us = or i64 %indvars.iv5.i.i124.us.us, 1
  br i1 %lcmp.mod307, label %.preheader1.i.i._crit_edge.us.us.1, label %.preheader1.i.i.us.epil.us.preheader.1

.preheader1.i.i.preheader.us:                     ; preds = %.preheader1.i.i.preheader.us.preheader, %.preheader1.i.i._crit_edge.us
  %indvars.iv5.i.i124.us = phi i64 [ %indvars.iv.next6.i.i.us, %.preheader1.i.i._crit_edge.us ], [ 0, %.preheader1.i.i.preheader.us.preheader ]
  br label %.preheader1.i.i.us

.preheader1.i.i.us:                               ; preds = %.preheader1.i.i.preheader.us, %.preheader1.i.i.us
  %indvars.iv.i.i122.us = phi i64 [ %indvars.iv.next.i.i.us.3, %.preheader1.i.i.us ], [ 0, %.preheader1.i.i.preheader.us ]
  %niter309 = phi i64 [ %niter309.nsub.3, %.preheader1.i.i.us ], [ %unroll_iter308, %.preheader1.i.i.preheader.us ]
  %160 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 %indvars.iv5.i.i124.us, i64 %indvars.iv.i.i122.us
  %161 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv5.i.i124.us, i64 %indvars.iv.i.i122.us
  %162 = bitcast %struct.dcomplex* %160 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 16, !tbaa !8
  %164 = bitcast %struct.dcomplex* %161 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %164, align 16, !tbaa !8
  %indvars.iv.next.i.i.us = or i64 %indvars.iv.i.i122.us, 1
  %165 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 %indvars.iv5.i.i124.us, i64 %indvars.iv.next.i.i.us
  %166 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv5.i.i124.us, i64 %indvars.iv.next.i.i.us
  %167 = bitcast %struct.dcomplex* %165 to <2 x i64>*
  %168 = load <2 x i64>, <2 x i64>* %167, align 16, !tbaa !8
  %169 = bitcast %struct.dcomplex* %166 to <2 x i64>*
  store <2 x i64> %168, <2 x i64>* %169, align 16, !tbaa !8
  %indvars.iv.next.i.i.us.1 = or i64 %indvars.iv.i.i122.us, 2
  %170 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 %indvars.iv5.i.i124.us, i64 %indvars.iv.next.i.i.us.1
  %171 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv5.i.i124.us, i64 %indvars.iv.next.i.i.us.1
  %172 = bitcast %struct.dcomplex* %170 to <2 x i64>*
  %173 = load <2 x i64>, <2 x i64>* %172, align 16, !tbaa !8
  %174 = bitcast %struct.dcomplex* %171 to <2 x i64>*
  store <2 x i64> %173, <2 x i64>* %174, align 16, !tbaa !8
  %indvars.iv.next.i.i.us.2 = or i64 %indvars.iv.i.i122.us, 3
  %175 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 %indvars.iv5.i.i124.us, i64 %indvars.iv.next.i.i.us.2
  %176 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv5.i.i124.us, i64 %indvars.iv.next.i.i.us.2
  %177 = bitcast %struct.dcomplex* %175 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 16, !tbaa !8
  %179 = bitcast %struct.dcomplex* %176 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %179, align 16, !tbaa !8
  %indvars.iv.next.i.i.us.3 = add nuw nsw i64 %indvars.iv.i.i122.us, 4
  %niter309.nsub.3 = add i64 %niter309, -4
  %niter309.ncmp.3 = icmp eq i64 %niter309.nsub.3, 0
  br i1 %niter309.ncmp.3, label %.preheader1.i.i._crit_edge.us.unr-lcssa, label %.preheader1.i.i.us

.preheader1.i.i._crit_edge.us.unr-lcssa:          ; preds = %.preheader1.i.i.us
  br i1 %lcmp.mod307, label %.preheader1.i.i._crit_edge.us, label %.preheader1.i.i.us.epil.preheader

.preheader1.i.i.us.epil.preheader:                ; preds = %.preheader1.i.i._crit_edge.us.unr-lcssa
  %scevgep147 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv5.i.i124.us, i64 %indvars.iv.next.i.i.us.3
  %scevgep147148 = bitcast %struct.dcomplex* %scevgep147 to i8*
  %scevgep150 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 %indvars.iv5.i.i124.us, i64 %indvars.iv.next.i.i.us.3
  %scevgep150151 = bitcast %struct.dcomplex* %scevgep150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep147148, i8* align 16 %scevgep150151, i64 %27, i1 false)
  br label %.preheader1.i.i._crit_edge.us

.preheader1.i.i._crit_edge.us:                    ; preds = %.preheader1.i.i.us.epil.preheader, %.preheader1.i.i._crit_edge.us.unr-lcssa
  %indvars.iv.next6.i.i.us = add nuw nsw i64 %indvars.iv5.i.i124.us, 1
  %exitcond192 = icmp eq i64 %indvars.iv.next6.i.i.us, %945
  br i1 %exitcond192, label %cfftz.exit.i, label %.preheader1.i.i.preheader.us

cfftz.exit.i:                                     ; preds = %.preheader1.i.i._crit_edge.us, %.preheader1.i.i._crit_edge.us.us.1, %.loopexit.i.i
  br i1 %brmerge200.demorgan, label %.lr.ph131.split.us, label %.preheader6

.lr.ph131.split.us:                               ; preds = %cfftz.exit.i, %._crit_edge128.us
  %indvars.iv10.i129.us = phi i64 [ %indvars.iv.next11.i.us, %._crit_edge128.us ], [ 0, %cfftz.exit.i ]
  %180 = add nsw i64 %indvars.iv10.i129.us, %indvars.iv19133
  br label %181

181:                                              ; preds = %181, %.lr.ph131.split.us
  %indvars.iv8.i125.us = phi i64 [ 0, %.lr.ph131.split.us ], [ %indvars.iv.next9.i.us.3, %181 ]
  %182 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv8.i125.us, i64 %indvars.iv10.i129.us
  %183 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i136, i64 %180, i64 %indvars.iv8.i125.us
  %184 = bitcast %struct.dcomplex* %182 to <2 x i64>*
  %185 = load <2 x i64>, <2 x i64>* %184, align 16, !tbaa !8
  %186 = bitcast %struct.dcomplex* %183 to <2 x i64>*
  store <2 x i64> %185, <2 x i64>* %186, align 16, !tbaa !8
  %indvars.iv.next9.i.us = or i64 %indvars.iv8.i125.us, 1
  %187 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv.next9.i.us, i64 %indvars.iv10.i129.us
  %188 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i136, i64 %180, i64 %indvars.iv.next9.i.us
  %189 = bitcast %struct.dcomplex* %187 to <2 x i64>*
  %190 = load <2 x i64>, <2 x i64>* %189, align 16, !tbaa !8
  %191 = bitcast %struct.dcomplex* %188 to <2 x i64>*
  store <2 x i64> %190, <2 x i64>* %191, align 16, !tbaa !8
  %indvars.iv.next9.i.us.1 = or i64 %indvars.iv8.i125.us, 2
  %192 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv.next9.i.us.1, i64 %indvars.iv10.i129.us
  %193 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i136, i64 %180, i64 %indvars.iv.next9.i.us.1
  %194 = bitcast %struct.dcomplex* %192 to <2 x i64>*
  %195 = load <2 x i64>, <2 x i64>* %194, align 16, !tbaa !8
  %196 = bitcast %struct.dcomplex* %193 to <2 x i64>*
  store <2 x i64> %195, <2 x i64>* %196, align 16, !tbaa !8
  %indvars.iv.next9.i.us.2 = or i64 %indvars.iv8.i125.us, 3
  %197 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv.next9.i.us.2, i64 %indvars.iv10.i129.us
  %198 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv12.i136, i64 %180, i64 %indvars.iv.next9.i.us.2
  %199 = bitcast %struct.dcomplex* %197 to <2 x i64>*
  %200 = load <2 x i64>, <2 x i64>* %199, align 16, !tbaa !8
  %201 = bitcast %struct.dcomplex* %198 to <2 x i64>*
  store <2 x i64> %200, <2 x i64>* %201, align 16, !tbaa !8
  %indvars.iv.next9.i.us.3 = add nuw nsw i64 %indvars.iv8.i125.us, 4
  %exitcond194.3 = icmp eq i64 %indvars.iv.next9.i.us.3, %945
  br i1 %exitcond194.3, label %._crit_edge128.us, label %181

._crit_edge128.us:                                ; preds = %181
  %indvars.iv.next11.i.us = add nuw nsw i64 %indvars.iv10.i129.us, 1
  %exitcond195 = icmp eq i64 %indvars.iv.next11.i.us, %946
  br i1 %exitcond195, label %.preheader6, label %.lr.ph131.split.us

.preheader6:                                      ; preds = %._crit_edge128.us, %cfftz.exit.i, %.preheader1.i.i.preheader.lr.ph
  %indvars.iv.next20 = add i64 %indvars.iv19133, %946
  %202 = icmp sgt i64 %indvars.iv.next20, %952
  br i1 %202, label %.preheader6._crit_edge, label %.preheader.i.preheader, !noelle.parallelizer.looporder !25

.preheader6._crit_edge:                           ; preds = %.preheader6, %.preheader6.preheader
  %indvars.iv.next13.i = add nuw nsw i64 %indvars.iv12.i136, 1
  %exitcond196 = icmp eq i64 %indvars.iv.next13.i, %943
  br i1 %exitcond196, label %cffts1.exit, label %.preheader6.preheader, !noelle.parallelizer.looporder !24

cffts1.exit:                                      ; preds = %.preheader6._crit_edge, %ilog2.exit.2
  call void @llvm.lifetime.end.p0i8(i64 147456, i8* nonnull %942) #10
  call void @llvm.lifetime.end.p0i8(i64 147456, i8* nonnull %941) #10
  %.b231 = load i1, i1* @dims.1.0, align 16
  %203 = select i1 %.b231, i32 512, i32 0
  br i1 %.b231, label %.preheader.i2.i6, label %ilog2.exit.i9

.preheader.i2.i6:                                 ; preds = %cffts1.exit, %.preheader.i2.i6
  %.01.i.i589 = phi i32 [ %204, %.preheader.i2.i6 ], [ 2, %cffts1.exit ]
  %204 = shl i32 %.01.i.i589, 1
  %205 = icmp slt i32 %204, %203
  br i1 %205, label %.preheader.i2.i6, label %ilog2.exit.i9

ilog2.exit.i9:                                    ; preds = %.preheader.i2.i6, %cffts1.exit
  %.b232 = load i1, i1* @dims.1.1, align 16
  %206 = select i1 %.b232, i32 256, i32 0
  br i1 %.b232, label %.preheader.i2.i6.1, label %ilog2.exit.i9.1

.preheader4.preheader.lr.ph:                      ; preds = %ilog2.exit.i9.2
  %207 = srem i32 %916, 2
  %208 = icmp ne i32 %207, 1
  %209 = icmp slt i32 %923, 0
  %210 = icmp sgt i32 %.pre.i, 0
  %not..b232 = xor i1 %.b232, true
  %brmerge146 = or i1 %208, %not..b232
  %211 = add nsw i64 %946, -1
  %brmerge212.demorgan = and i1 %210, %.b232
  %xtraiter252 = and i64 %946, 1
  %212 = icmp eq i64 %211, 0
  %unroll_iter254 = sub nsw i64 %946, %xtraiter252
  %lcmp.mod253 = icmp eq i64 %xtraiter252, 0
  %.not214 = xor i1 %210, true
  %brmerge220 = or i1 %brmerge146, %.not214
  %xtraiter256 = and i64 %946, 3
  %213 = icmp ult i64 %211, 3
  %unroll_iter259 = sub nsw i64 %946, %xtraiter256
  %lcmp.mod258 = icmp eq i64 %xtraiter256, 0
  %214 = shl nuw nsw i64 %xtraiter256, 4
  br label %.preheader4.preheader

.preheader4.preheader:                            ; preds = %.preheader4._crit_edge, %.preheader4.preheader.lr.ph
  %indvars.iv13.i86 = phi i64 [ 0, %.preheader4.preheader.lr.ph ], [ %indvars.iv.next14.i, %.preheader4._crit_edge ]
  br i1 %209, label %.preheader4._crit_edge, label %.preheader3.preheader, !noelle.parallelizer.looporder !46

.preheader3.preheader:                            ; preds = %.preheader4.preheader, %.preheader4
  %indvar135 = phi i64 [ %indvar.next136, %.preheader4 ], [ 0, %.preheader4.preheader ]
  %indvars.iv83 = phi i64 [ %indvars.iv.next, %.preheader4 ], [ 0, %.preheader4.preheader ]
  %215 = mul i64 %indvar135, %946
  br i1 %brmerge212.demorgan, label %.preheader1.i.preheader.us.preheader, label %.preheader3._crit_edge

.preheader1.i.preheader.us.preheader:             ; preds = %.preheader3.preheader
  br i1 %212, label %.preheader1.i.preheader.us.us.preheader, label %.preheader1.i.preheader.us

.preheader1.i.preheader.us.us.preheader:          ; preds = %.preheader1.i.preheader.us.preheader
  %sext.us.epil.us = shl i64 %indvars.iv83, 32
  %216 = ashr exact i64 %sext.us.epil.us, 32
  br label %.preheader1.i.preheader.us.us

.preheader1.i.preheader.us.us:                    ; preds = %.preheader1.i._crit_edge.us.us.1, %.preheader1.i.preheader.us.us.preheader
  %indvars.iv7.i53.us.us = phi i64 [ 0, %.preheader1.i.preheader.us.us.preheader ], [ %indvars.iv.next8.i.us.us.1, %.preheader1.i._crit_edge.us.us.1 ]
  br i1 %lcmp.mod253, label %.preheader1.i._crit_edge.us.us, label %.preheader1.i.us.epil.us

.preheader1.i.us.epil.us:                         ; preds = %.preheader1.i.preheader.us.us
  %217 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv7.i53.us.us, i64 %216
  %218 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv7.i53.us.us, i64 0
  %219 = bitcast %struct.dcomplex* %217 to <2 x i64>*
  %220 = load <2 x i64>, <2 x i64>* %219, align 16, !tbaa !8
  %221 = bitcast %struct.dcomplex* %218 to <2 x i64>*
  store <2 x i64> %220, <2 x i64>* %221, align 16, !tbaa !8
  br label %.preheader1.i._crit_edge.us.us

.preheader1.i._crit_edge.us.us:                   ; preds = %.preheader1.i.us.epil.us, %.preheader1.i.preheader.us.us
  %indvars.iv.next8.i.us.us = or i64 %indvars.iv7.i53.us.us, 1
  br i1 %lcmp.mod253, label %.preheader1.i._crit_edge.us.us.1, label %.preheader1.i.us.epil.us.1

.preheader1.i.preheader.us:                       ; preds = %.preheader1.i.preheader.us.preheader, %.preheader1.i._crit_edge.us
  %indvars.iv7.i53.us = phi i64 [ %indvars.iv.next8.i.us, %.preheader1.i._crit_edge.us ], [ 0, %.preheader1.i.preheader.us.preheader ]
  br label %.preheader1.i.us

.preheader1.i.us:                                 ; preds = %.preheader1.i.preheader.us, %.preheader1.i.us
  %indvars.iv.i1252.us = phi i64 [ %indvars.iv.next.i13.us.1, %.preheader1.i.us ], [ 0, %.preheader1.i.preheader.us ]
  %niter255 = phi i64 [ %niter255.nsub.1, %.preheader1.i.us ], [ %unroll_iter254, %.preheader1.i.preheader.us ]
  %222 = add i64 %indvars.iv.i1252.us, %indvars.iv83
  %sext.us = shl i64 %222, 32
  %223 = ashr exact i64 %sext.us, 32
  %224 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv7.i53.us, i64 %223
  %225 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv7.i53.us, i64 %indvars.iv.i1252.us
  %226 = bitcast %struct.dcomplex* %224 to <2 x i64>*
  %227 = load <2 x i64>, <2 x i64>* %226, align 16, !tbaa !8
  %228 = bitcast %struct.dcomplex* %225 to <2 x i64>*
  store <2 x i64> %227, <2 x i64>* %228, align 16, !tbaa !8
  %indvars.iv.next.i13.us = or i64 %indvars.iv.i1252.us, 1
  %229 = add i64 %indvars.iv.next.i13.us, %indvars.iv83
  %sext.us.1 = shl i64 %229, 32
  %230 = ashr exact i64 %sext.us.1, 32
  %231 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv7.i53.us, i64 %230
  %232 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv7.i53.us, i64 %indvars.iv.next.i13.us
  %233 = bitcast %struct.dcomplex* %231 to <2 x i64>*
  %234 = load <2 x i64>, <2 x i64>* %233, align 16, !tbaa !8
  %235 = bitcast %struct.dcomplex* %232 to <2 x i64>*
  store <2 x i64> %234, <2 x i64>* %235, align 16, !tbaa !8
  %indvars.iv.next.i13.us.1 = add nuw nsw i64 %indvars.iv.i1252.us, 2
  %niter255.nsub.1 = add i64 %niter255, -2
  %niter255.ncmp.1 = icmp eq i64 %niter255.nsub.1, 0
  br i1 %niter255.ncmp.1, label %.preheader1.i._crit_edge.us.unr-lcssa, label %.preheader1.i.us

.preheader1.i._crit_edge.us.unr-lcssa:            ; preds = %.preheader1.i.us
  br i1 %lcmp.mod253, label %.preheader1.i._crit_edge.us, label %.preheader1.i.us.epil

.preheader1.i.us.epil:                            ; preds = %.preheader1.i._crit_edge.us.unr-lcssa
  %236 = add i64 %indvars.iv.next.i13.us.1, %indvars.iv83
  %sext.us.epil = shl i64 %236, 32
  %237 = ashr exact i64 %sext.us.epil, 32
  %238 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv7.i53.us, i64 %237
  %239 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv7.i53.us, i64 %indvars.iv.next.i13.us.1
  %240 = bitcast %struct.dcomplex* %238 to <2 x i64>*
  %241 = load <2 x i64>, <2 x i64>* %240, align 16, !tbaa !8
  %242 = bitcast %struct.dcomplex* %239 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %242, align 16, !tbaa !8
  br label %.preheader1.i._crit_edge.us

.preheader1.i._crit_edge.us:                      ; preds = %.preheader1.i._crit_edge.us.unr-lcssa, %.preheader1.i.us.epil
  %indvars.iv.next8.i.us = add nuw nsw i64 %indvars.iv7.i53.us, 1
  %exitcond163 = icmp eq i64 %indvars.iv.next8.i.us, %924
  br i1 %exitcond163, label %.preheader3._crit_edge, label %.preheader1.i.preheader.us

.preheader3._crit_edge:                           ; preds = %.preheader1.i._crit_edge.us, %.preheader1.i._crit_edge.us.us.1, %.preheader3.preheader
  br i1 %925, label %LeafBlock7._crit_edge.._crit_edge_crit_edge.i.i15, label %.lr.ph75

LeafBlock7._crit_edge.._crit_edge_crit_edge.i.i15: ; preds = %.preheader3._crit_edge
  %243 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.13, i64 0, i64 0), i32 1, i32 %916, i32 %948) #10
  tail call void @exit(i32 1) #30
  unreachable

.lr.ph75:                                         ; preds = %.preheader3._crit_edge, %.us-lcssa.us.loopexit.i.i
  %.0.i.i1774 = phi i32 [ %348, %.us-lcssa.us.loopexit.i.i ], [ 1, %.preheader3._crit_edge ]
  %244 = icmp eq i32 %.0.i.i1774, 1
  %245 = add nsw i32 %.0.i.i1774, -2
  %246 = shl i32 2, %245
  %.02.i.i.i20 = select i1 %244, i32 1, i32 %246
  %247 = sub nsw i32 %916, %.0.i.i1774
  %248 = icmp eq i32 %247, 0
  %249 = add nsw i32 %247, -1
  %250 = shl i32 2, %249
  %.03.i.i.i21 = select i1 %248, i32 1, i32 %250
  %251 = shl nsw i32 %.02.i.i.i20, 1
  %252 = sext i32 %.02.i.i.i20 to i64
  %253 = sext i32 %.03.i.i.i21 to i64
  %254 = sext i32 %251 to i64
  %255 = icmp slt i32 %.03.i.i.i21, 1
  %256 = icmp slt i32 %.02.i.i.i20, 1
  %brmerge215 = or i1 %256, %.not214
  %or.cond174 = or i1 %255, %brmerge215
  br i1 %or.cond174, label %.us-lcssa.us.loopexit.i.i.i29, label %.lr.ph62.split

.lr.ph62.split:                                   ; preds = %.lr.ph75, %.split.us.i.i.i23
  %indvars.iv10.i.i.i2260 = phi i64 [ %indvars.iv.next11.i.i.i25, %.split.us.i.i.i23 ], [ 0, %.lr.ph75 ]
  %257 = mul nsw i64 %indvars.iv10.i.i.i2260, %252
  %258 = mul nsw i64 %indvars.iv10.i.i.i2260, %254
  %259 = add nsw i64 %indvars.iv10.i.i.i2260, %253
  %260 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %259, i32 0
  %261 = bitcast double* %260 to <2 x double>*
  %262 = load <2 x double>, <2 x double>* %261, align 16, !tbaa !8
  %263 = shufflevector <2 x double> %262, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  br label %.lr.ph58.split.us

.lr.ph58.split.us:                                ; preds = %.lr.ph62.split, %._crit_edge.us
  %indvars.iv8.i.i.i2456.us = phi i64 [ %indvars.iv.next9.i.i.i27.us, %._crit_edge.us ], [ 0, %.lr.ph62.split ]
  %264 = add nsw i64 %indvars.iv8.i.i.i2456.us, %257
  %265 = add nsw i64 %264, %927
  %266 = add nsw i64 %indvars.iv8.i.i.i2456.us, %258
  %267 = add nsw i64 %266, %252
  br label %268

268:                                              ; preds = %268, %.lr.ph58.split.us
  %indvars.iv.i.i.i2654.us = phi i64 [ 0, %.lr.ph58.split.us ], [ %indvars.iv.next.i.i.i28.us, %268 ]
  %269 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %264, i64 %indvars.iv.i.i.i2654.us, i32 0
  %270 = bitcast double* %269 to <2 x double>*
  %271 = load <2 x double>, <2 x double>* %270, align 16, !tbaa !8
  %272 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %265, i64 %indvars.iv.i.i.i2654.us, i32 0
  %273 = bitcast double* %272 to <2 x double>*
  %274 = load <2 x double>, <2 x double>* %273, align 16, !tbaa !8
  %275 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %11, i64 0, i64 %266, i64 %indvars.iv.i.i.i2654.us, i32 0
  %276 = fadd <2 x double> %271, %274
  %277 = bitcast double* %275 to <2 x double>*
  store <2 x double> %276, <2 x double>* %277, align 16, !tbaa !8
  %278 = extractelement <2 x double> %271, i32 0
  %279 = extractelement <2 x double> %274, i32 0
  %280 = fsub double %278, %279
  %281 = extractelement <2 x double> %271, i32 1
  %282 = extractelement <2 x double> %274, i32 1
  %283 = fsub double %281, %282
  %284 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %11, i64 0, i64 %267, i64 %indvars.iv.i.i.i2654.us, i32 0
  %285 = insertelement <2 x double> undef, double %283, i32 0
  %286 = shufflevector <2 x double> %285, <2 x double> undef, <2 x i32> zeroinitializer
  %287 = fmul <2 x double> %263, %286
  %288 = insertelement <2 x double> undef, double %280, i32 0
  %289 = shufflevector <2 x double> %288, <2 x double> undef, <2 x i32> zeroinitializer
  %290 = fmul <2 x double> %262, %289
  %291 = fsub <2 x double> %290, %287
  %292 = fadd <2 x double> %290, %287
  %293 = shufflevector <2 x double> %291, <2 x double> %292, <2 x i32> <i32 0, i32 3>
  %294 = bitcast double* %284 to <2 x double>*
  store <2 x double> %293, <2 x double>* %294, align 16, !tbaa !8
  %indvars.iv.next.i.i.i28.us = add nuw nsw i64 %indvars.iv.i.i.i2654.us, 1
  %exitcond165 = icmp eq i64 %indvars.iv.next.i.i.i28.us, %946
  br i1 %exitcond165, label %._crit_edge.us, label %268

._crit_edge.us:                                   ; preds = %268
  %indvars.iv.next9.i.i.i27.us = add nuw nsw i64 %indvars.iv8.i.i.i2456.us, 1
  %exitcond166 = icmp eq i64 %indvars.iv.next9.i.i.i27.us, %252
  br i1 %exitcond166, label %.split.us.i.i.i23, label %.lr.ph58.split.us

.split.us.i.i.i23:                                ; preds = %._crit_edge.us
  %indvars.iv.next11.i.i.i25 = add nuw nsw i64 %indvars.iv10.i.i.i2260, 1
  %exitcond167 = icmp eq i64 %indvars.iv.next11.i.i.i25, %253
  br i1 %exitcond167, label %.us-lcssa.us.loopexit.i.i.i29, label %.lr.ph62.split

.us-lcssa.us.loopexit.i.i.i29:                    ; preds = %.split.us.i.i.i23, %.lr.ph75
  %295 = icmp eq i32 %916, %.0.i.i1774
  br i1 %295, label %.loopexit.i.i32, label %296

296:                                              ; preds = %.us-lcssa.us.loopexit.i.i.i29
  %297 = add nsw i32 %.0.i.i1774, -1
  %298 = shl i32 2, %297
  %299 = xor i32 %.0.i.i1774, -1
  %300 = add i32 %916, %299
  %301 = icmp eq i32 %300, 0
  %302 = add nsw i32 %300, -1
  %303 = shl i32 2, %302
  %.03.i.i31 = select i1 %301, i32 1, i32 %303
  %304 = shl nsw i32 %298, 1
  %305 = sext i32 %298 to i64
  %306 = sext i32 %.03.i.i31 to i64
  %307 = sext i32 %304 to i64
  %308 = icmp slt i32 %.03.i.i31, 1
  %309 = icmp slt i32 %298, 1
  %brmerge218 = or i1 %309, %.not214
  %or.cond175 = or i1 %308, %brmerge218
  br i1 %or.cond175, label %.us-lcssa.us.loopexit.i.i, label %.lr.ph73.split

.lr.ph73.split:                                   ; preds = %296, %.split.us.i.i
  %indvars.iv10.i.i71 = phi i64 [ %indvars.iv.next11.i.i, %.split.us.i.i ], [ 0, %296 ]
  %310 = mul nsw i64 %indvars.iv10.i.i71, %305
  %311 = mul nsw i64 %indvars.iv10.i.i71, %307
  %312 = add nsw i64 %indvars.iv10.i.i71, %306
  %313 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %312, i32 0
  %314 = bitcast double* %313 to <2 x double>*
  %315 = load <2 x double>, <2 x double>* %314, align 16, !tbaa !8
  %316 = shufflevector <2 x double> %315, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  br label %.lr.ph69.split.us

.lr.ph69.split.us:                                ; preds = %.lr.ph73.split, %._crit_edge66.us
  %indvars.iv8.i.i67.us = phi i64 [ %indvars.iv.next9.i.i.us, %._crit_edge66.us ], [ 0, %.lr.ph73.split ]
  %317 = add nsw i64 %indvars.iv8.i.i67.us, %310
  %318 = add nsw i64 %317, %927
  %319 = add nsw i64 %indvars.iv8.i.i67.us, %311
  %320 = add nsw i64 %319, %305
  br label %321

321:                                              ; preds = %321, %.lr.ph69.split.us
  %indvars.iv.i1.i63.us = phi i64 [ 0, %.lr.ph69.split.us ], [ %indvars.iv.next.i2.i.us, %321 ]
  %322 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %11, i64 0, i64 %317, i64 %indvars.iv.i1.i63.us, i32 0
  %323 = bitcast double* %322 to <2 x double>*
  %324 = load <2 x double>, <2 x double>* %323, align 16, !tbaa !8
  %325 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %11, i64 0, i64 %318, i64 %indvars.iv.i1.i63.us, i32 0
  %326 = bitcast double* %325 to <2 x double>*
  %327 = load <2 x double>, <2 x double>* %326, align 16, !tbaa !8
  %328 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %319, i64 %indvars.iv.i1.i63.us, i32 0
  %329 = fadd <2 x double> %324, %327
  %330 = bitcast double* %328 to <2 x double>*
  store <2 x double> %329, <2 x double>* %330, align 16, !tbaa !8
  %331 = extractelement <2 x double> %324, i32 0
  %332 = extractelement <2 x double> %327, i32 0
  %333 = fsub double %331, %332
  %334 = extractelement <2 x double> %324, i32 1
  %335 = extractelement <2 x double> %327, i32 1
  %336 = fsub double %334, %335
  %337 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %320, i64 %indvars.iv.i1.i63.us, i32 0
  %338 = insertelement <2 x double> undef, double %336, i32 0
  %339 = shufflevector <2 x double> %338, <2 x double> undef, <2 x i32> zeroinitializer
  %340 = fmul <2 x double> %316, %339
  %341 = insertelement <2 x double> undef, double %333, i32 0
  %342 = shufflevector <2 x double> %341, <2 x double> undef, <2 x i32> zeroinitializer
  %343 = fmul <2 x double> %315, %342
  %344 = fsub <2 x double> %343, %340
  %345 = fadd <2 x double> %343, %340
  %346 = shufflevector <2 x double> %344, <2 x double> %345, <2 x i32> <i32 0, i32 3>
  %347 = bitcast double* %337 to <2 x double>*
  store <2 x double> %346, <2 x double>* %347, align 16, !tbaa !8
  %indvars.iv.next.i2.i.us = add nuw nsw i64 %indvars.iv.i1.i63.us, 1
  %exitcond169 = icmp eq i64 %indvars.iv.next.i2.i.us, %946
  br i1 %exitcond169, label %._crit_edge66.us, label %321

._crit_edge66.us:                                 ; preds = %321
  %indvars.iv.next9.i.i.us = add nuw nsw i64 %indvars.iv8.i.i67.us, 1
  %exitcond170 = icmp eq i64 %indvars.iv.next9.i.i.us, %305
  br i1 %exitcond170, label %.split.us.i.i, label %.lr.ph69.split.us

.split.us.i.i:                                    ; preds = %._crit_edge66.us
  %indvars.iv.next11.i.i = add nuw nsw i64 %indvars.iv10.i.i71, 1
  %exitcond171 = icmp eq i64 %indvars.iv.next11.i.i, %306
  br i1 %exitcond171, label %.us-lcssa.us.loopexit.i.i, label %.lr.ph73.split

.us-lcssa.us.loopexit.i.i:                        ; preds = %.split.us.i.i, %296
  %348 = add nuw nsw i32 %.0.i.i1774, 2
  %349 = icmp slt i32 %916, %348
  br i1 %349, label %.loopexit.i.i32, label %.lr.ph75

.loopexit.i.i32:                                  ; preds = %.us-lcssa.us.loopexit.i.i, %.us-lcssa.us.loopexit.i.i.i29
  br i1 %brmerge220, label %cfftz.exit.i40, label %.preheader1.i.i35.preheader.us.preheader

.preheader1.i.i35.preheader.us.preheader:         ; preds = %.loopexit.i.i32
  br i1 %213, label %.preheader1.i.i35.preheader.us.us, label %.preheader1.i.i35.preheader.us

.preheader1.i.i35.preheader.us.us:                ; preds = %.preheader1.i.i35.preheader.us.preheader, %.preheader1.i.i35._crit_edge.us.us.1
  %indvars.iv5.i.i3478.us.us = phi i64 [ %indvars.iv.next6.i.i38.us.us.1, %.preheader1.i.i35._crit_edge.us.us.1 ], [ 0, %.preheader1.i.i35.preheader.us.preheader ]
  br i1 %lcmp.mod258, label %.preheader1.i.i35._crit_edge.us.us, label %.preheader1.i.i35.us.epil.us.preheader

.preheader1.i.i35.us.epil.us.preheader:           ; preds = %.preheader1.i.i35.preheader.us.us
  %scevgep132 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %11, i64 0, i64 %indvars.iv5.i.i3478.us.us, i64 0
  %scevgep132133 = bitcast %struct.dcomplex* %scevgep132 to i8*
  %scevgep130 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv5.i.i3478.us.us, i64 0
  %scevgep130131 = bitcast %struct.dcomplex* %scevgep130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep130131, i8* align 16 %scevgep132133, i64 %214, i1 false)
  br label %.preheader1.i.i35._crit_edge.us.us

.preheader1.i.i35._crit_edge.us.us:               ; preds = %.preheader1.i.i35.us.epil.us.preheader, %.preheader1.i.i35.preheader.us.us
  %indvars.iv.next6.i.i38.us.us = or i64 %indvars.iv5.i.i3478.us.us, 1
  br i1 %lcmp.mod258, label %.preheader1.i.i35._crit_edge.us.us.1, label %.preheader1.i.i35.us.epil.us.preheader.1

.preheader1.i.i35.preheader.us:                   ; preds = %.preheader1.i.i35.preheader.us.preheader, %.preheader1.i.i35._crit_edge.us
  %indvars.iv5.i.i3478.us = phi i64 [ %indvars.iv.next6.i.i38.us, %.preheader1.i.i35._crit_edge.us ], [ 0, %.preheader1.i.i35.preheader.us.preheader ]
  br label %.preheader1.i.i35.us

.preheader1.i.i35.us:                             ; preds = %.preheader1.i.i35.preheader.us, %.preheader1.i.i35.us
  %indvars.iv.i.i3676.us = phi i64 [ %indvars.iv.next.i.i37.us.3, %.preheader1.i.i35.us ], [ 0, %.preheader1.i.i35.preheader.us ]
  %niter260 = phi i64 [ %niter260.nsub.3, %.preheader1.i.i35.us ], [ %unroll_iter259, %.preheader1.i.i35.preheader.us ]
  %350 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %11, i64 0, i64 %indvars.iv5.i.i3478.us, i64 %indvars.iv.i.i3676.us
  %351 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv5.i.i3478.us, i64 %indvars.iv.i.i3676.us
  %352 = bitcast %struct.dcomplex* %350 to <2 x i64>*
  %353 = load <2 x i64>, <2 x i64>* %352, align 16, !tbaa !8
  %354 = bitcast %struct.dcomplex* %351 to <2 x i64>*
  store <2 x i64> %353, <2 x i64>* %354, align 16, !tbaa !8
  %indvars.iv.next.i.i37.us = or i64 %indvars.iv.i.i3676.us, 1
  %355 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %11, i64 0, i64 %indvars.iv5.i.i3478.us, i64 %indvars.iv.next.i.i37.us
  %356 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv5.i.i3478.us, i64 %indvars.iv.next.i.i37.us
  %357 = bitcast %struct.dcomplex* %355 to <2 x i64>*
  %358 = load <2 x i64>, <2 x i64>* %357, align 16, !tbaa !8
  %359 = bitcast %struct.dcomplex* %356 to <2 x i64>*
  store <2 x i64> %358, <2 x i64>* %359, align 16, !tbaa !8
  %indvars.iv.next.i.i37.us.1 = or i64 %indvars.iv.i.i3676.us, 2
  %360 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %11, i64 0, i64 %indvars.iv5.i.i3478.us, i64 %indvars.iv.next.i.i37.us.1
  %361 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv5.i.i3478.us, i64 %indvars.iv.next.i.i37.us.1
  %362 = bitcast %struct.dcomplex* %360 to <2 x i64>*
  %363 = load <2 x i64>, <2 x i64>* %362, align 16, !tbaa !8
  %364 = bitcast %struct.dcomplex* %361 to <2 x i64>*
  store <2 x i64> %363, <2 x i64>* %364, align 16, !tbaa !8
  %indvars.iv.next.i.i37.us.2 = or i64 %indvars.iv.i.i3676.us, 3
  %365 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %11, i64 0, i64 %indvars.iv5.i.i3478.us, i64 %indvars.iv.next.i.i37.us.2
  %366 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv5.i.i3478.us, i64 %indvars.iv.next.i.i37.us.2
  %367 = bitcast %struct.dcomplex* %365 to <2 x i64>*
  %368 = load <2 x i64>, <2 x i64>* %367, align 16, !tbaa !8
  %369 = bitcast %struct.dcomplex* %366 to <2 x i64>*
  store <2 x i64> %368, <2 x i64>* %369, align 16, !tbaa !8
  %indvars.iv.next.i.i37.us.3 = add nuw nsw i64 %indvars.iv.i.i3676.us, 4
  %niter260.nsub.3 = add i64 %niter260, -4
  %niter260.ncmp.3 = icmp eq i64 %niter260.nsub.3, 0
  br i1 %niter260.ncmp.3, label %.preheader1.i.i35._crit_edge.us.unr-lcssa, label %.preheader1.i.i35.us

.preheader1.i.i35._crit_edge.us.unr-lcssa:        ; preds = %.preheader1.i.i35.us
  br i1 %lcmp.mod258, label %.preheader1.i.i35._crit_edge.us, label %.preheader1.i.i35.us.epil.preheader

.preheader1.i.i35.us.epil.preheader:              ; preds = %.preheader1.i.i35._crit_edge.us.unr-lcssa
  %scevgep125 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv5.i.i3478.us, i64 %indvars.iv.next.i.i37.us.3
  %scevgep125126 = bitcast %struct.dcomplex* %scevgep125 to i8*
  %scevgep128 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %11, i64 0, i64 %indvars.iv5.i.i3478.us, i64 %indvars.iv.next.i.i37.us.3
  %scevgep128129 = bitcast %struct.dcomplex* %scevgep128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep125126, i8* align 16 %scevgep128129, i64 %214, i1 false)
  br label %.preheader1.i.i35._crit_edge.us

.preheader1.i.i35._crit_edge.us:                  ; preds = %.preheader1.i.i35.us.epil.preheader, %.preheader1.i.i35._crit_edge.us.unr-lcssa
  %indvars.iv.next6.i.i38.us = add nuw nsw i64 %indvars.iv5.i.i3478.us, 1
  %exitcond174 = icmp eq i64 %indvars.iv.next6.i.i38.us, %924
  br i1 %exitcond174, label %cfftz.exit.i40, label %.preheader1.i.i35.preheader.us

cfftz.exit.i40:                                   ; preds = %.preheader1.i.i35._crit_edge.us, %.preheader1.i.i35._crit_edge.us.us.1, %.loopexit.i.i32
  br i1 %brmerge212.demorgan, label %.preheader.i41.preheader.us.preheader, label %.preheader4

.preheader.i41.preheader.us.preheader:            ; preds = %cfftz.exit.i40
  br i1 %213, label %.preheader.i41.preheader.us.us, label %.preheader.i41.preheader.us

.preheader.i41.preheader.us.us:                   ; preds = %.preheader.i41.preheader.us.preheader, %.preheader.i41._crit_edge.us.us.1
  %indvars.iv11.i81.us.us = phi i64 [ %indvars.iv.next12.i.us.us.1, %.preheader.i41._crit_edge.us.us.1 ], [ 0, %.preheader.i41.preheader.us.preheader ]
  br i1 %lcmp.mod258, label %.preheader.i41._crit_edge.us.us, label %.preheader.i41.us.epil.us.preheader

.preheader.i41.us.epil.us.preheader:              ; preds = %.preheader.i41.preheader.us.us
  %scevgep144 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv11.i81.us.us, i64 0
  %scevgep144145 = bitcast %struct.dcomplex* %scevgep144 to i8*
  %scevgep142 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv11.i81.us.us, i64 %215
  %scevgep142143 = bitcast %struct.dcomplex* %scevgep142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep142143, i8* align 16 %scevgep144145, i64 %214, i1 false)
  br label %.preheader.i41._crit_edge.us.us

.preheader.i41._crit_edge.us.us:                  ; preds = %.preheader.i41.us.epil.us.preheader, %.preheader.i41.preheader.us.us
  %indvars.iv.next12.i.us.us = or i64 %indvars.iv11.i81.us.us, 1
  br i1 %lcmp.mod258, label %.preheader.i41._crit_edge.us.us.1, label %.preheader.i41.us.epil.us.preheader.1

.preheader.i41.preheader.us:                      ; preds = %.preheader.i41.preheader.us.preheader, %.preheader.i41._crit_edge.us
  %indvars.iv11.i81.us = phi i64 [ %indvars.iv.next12.i.us, %.preheader.i41._crit_edge.us ], [ 0, %.preheader.i41.preheader.us.preheader ]
  br label %.preheader.i41.us

.preheader.i41.us:                                ; preds = %.preheader.i41.preheader.us, %.preheader.i41.us
  %indvars.iv9.i79.us = phi i64 [ %indvars.iv.next10.i.us.3, %.preheader.i41.us ], [ 0, %.preheader.i41.preheader.us ]
  %niter265 = phi i64 [ %niter265.nsub.3, %.preheader.i41.us ], [ %unroll_iter259, %.preheader.i41.preheader.us ]
  %370 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv11.i81.us, i64 %indvars.iv9.i79.us
  %371 = add nsw i64 %indvars.iv9.i79.us, %indvars.iv83
  %372 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv11.i81.us, i64 %371
  %373 = bitcast %struct.dcomplex* %370 to <2 x i64>*
  %374 = load <2 x i64>, <2 x i64>* %373, align 16, !tbaa !8
  %375 = bitcast %struct.dcomplex* %372 to <2 x i64>*
  store <2 x i64> %374, <2 x i64>* %375, align 16, !tbaa !8
  %indvars.iv.next10.i.us = or i64 %indvars.iv9.i79.us, 1
  %376 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv11.i81.us, i64 %indvars.iv.next10.i.us
  %377 = add nsw i64 %indvars.iv.next10.i.us, %indvars.iv83
  %378 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv11.i81.us, i64 %377
  %379 = bitcast %struct.dcomplex* %376 to <2 x i64>*
  %380 = load <2 x i64>, <2 x i64>* %379, align 16, !tbaa !8
  %381 = bitcast %struct.dcomplex* %378 to <2 x i64>*
  store <2 x i64> %380, <2 x i64>* %381, align 16, !tbaa !8
  %indvars.iv.next10.i.us.1 = or i64 %indvars.iv9.i79.us, 2
  %382 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv11.i81.us, i64 %indvars.iv.next10.i.us.1
  %383 = add nsw i64 %indvars.iv.next10.i.us.1, %indvars.iv83
  %384 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv11.i81.us, i64 %383
  %385 = bitcast %struct.dcomplex* %382 to <2 x i64>*
  %386 = load <2 x i64>, <2 x i64>* %385, align 16, !tbaa !8
  %387 = bitcast %struct.dcomplex* %384 to <2 x i64>*
  store <2 x i64> %386, <2 x i64>* %387, align 16, !tbaa !8
  %indvars.iv.next10.i.us.2 = or i64 %indvars.iv9.i79.us, 3
  %388 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv11.i81.us, i64 %indvars.iv.next10.i.us.2
  %389 = add nsw i64 %indvars.iv.next10.i.us.2, %indvars.iv83
  %390 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv11.i81.us, i64 %389
  %391 = bitcast %struct.dcomplex* %388 to <2 x i64>*
  %392 = load <2 x i64>, <2 x i64>* %391, align 16, !tbaa !8
  %393 = bitcast %struct.dcomplex* %390 to <2 x i64>*
  store <2 x i64> %392, <2 x i64>* %393, align 16, !tbaa !8
  %indvars.iv.next10.i.us.3 = add nuw nsw i64 %indvars.iv9.i79.us, 4
  %niter265.nsub.3 = add i64 %niter265, -4
  %niter265.ncmp.3 = icmp eq i64 %niter265.nsub.3, 0
  br i1 %niter265.ncmp.3, label %.preheader.i41._crit_edge.us.unr-lcssa, label %.preheader.i41.us

.preheader.i41._crit_edge.us.unr-lcssa:           ; preds = %.preheader.i41.us
  br i1 %lcmp.mod258, label %.preheader.i41._crit_edge.us, label %.preheader.i41.us.epil.preheader

.preheader.i41.us.epil.preheader:                 ; preds = %.preheader.i41._crit_edge.us.unr-lcssa
  %394 = add nsw i64 %215, %indvars.iv.next10.i.us.3
  %scevgep137 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv11.i81.us, i64 %394
  %scevgep137138 = bitcast %struct.dcomplex* %scevgep137 to i8*
  %scevgep140 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv11.i81.us, i64 %indvars.iv.next10.i.us.3
  %scevgep140141 = bitcast %struct.dcomplex* %scevgep140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep137138, i8* align 16 %scevgep140141, i64 %214, i1 false)
  br label %.preheader.i41._crit_edge.us

.preheader.i41._crit_edge.us:                     ; preds = %.preheader.i41.us.epil.preheader, %.preheader.i41._crit_edge.us.unr-lcssa
  %indvars.iv.next12.i.us = add nuw nsw i64 %indvars.iv11.i81.us, 1
  %exitcond177 = icmp eq i64 %indvars.iv.next12.i.us, %924
  br i1 %exitcond177, label %.preheader4, label %.preheader.i41.preheader.us

.preheader4:                                      ; preds = %.preheader.i41._crit_edge.us, %.preheader.i41._crit_edge.us.us.1, %cfftz.exit.i40
  %indvars.iv.next = add i64 %indvars.iv83, %946
  %395 = icmp sgt i64 %indvars.iv.next, %928
  %indvar.next136 = add i64 %indvar135, 1
  br i1 %395, label %.preheader4._crit_edge, label %.preheader3.preheader, !noelle.parallelizer.looporder !46

.preheader4._crit_edge:                           ; preds = %.preheader4, %.preheader4.preheader
  %indvars.iv.next14.i = add nuw nsw i64 %indvars.iv13.i86, 1
  %exitcond178 = icmp eq i64 %indvars.iv.next14.i, %922
  br i1 %exitcond178, label %cffts2.exit, label %.preheader4.preheader, !noelle.parallelizer.looporder !47

cffts2.exit:                                      ; preds = %.preheader4._crit_edge, %ilog2.exit.i9.2
  call void @llvm.lifetime.end.p0i8(i64 147456, i8* nonnull %921) #10
  call void @llvm.lifetime.end.p0i8(i64 147456, i8* nonnull %920) #10
  %.b234 = load i1, i1* @dims.2.0, align 8
  %396 = select i1 %.b234, i32 512, i32 0
  br i1 %.b234, label %.preheader.i2.i, label %ilog2.exit.i

.preheader.i2.i:                                  ; preds = %cffts2.exit, %.preheader.i2.i
  %.01.i36.i = phi i32 [ %397, %.preheader.i2.i ], [ 2, %cffts2.exit ]
  %397 = shl i32 %.01.i36.i, 1
  %398 = icmp slt i32 %397, %396
  br i1 %398, label %.preheader.i2.i, label %ilog2.exit.i

ilog2.exit.i:                                     ; preds = %.preheader.i2.i, %cffts2.exit
  %.b235 = load i1, i1* @dims.2.1, align 8
  %399 = select i1 %.b235, i32 256, i32 0
  br i1 %.b235, label %.preheader.i2.1.i, label %ilog2.exit.1.i

.preheader4.preheader.lr.ph.i:                    ; preds = %ilog2.exit.2.i
  %400 = srem i32 %.0.i3.2.i, 2
  %401 = icmp ne i32 %400, 1
  %402 = icmp slt i32 %601, 0
  %403 = icmp sgt i32 %.pre.i13, 0
  %not..b236 = xor i1 %.b236, true
  %brmerge.i = or i1 %401, %not..b236
  %brmerge65.demorgan.i = and i1 %.b236, %403
  %.not67.i = xor i1 %403, true
  %brmerge73.i = or i1 %brmerge.i, %.not67.i
  %404 = add nsw i64 %600, -1
  %xtraiter = and i64 %600, 1
  %405 = icmp eq i64 %404, 0
  %unroll_iter = sub nsw i64 %600, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %xtraiter243 = and i64 %600, 3
  %406 = icmp ult i64 %404, 3
  %unroll_iter245 = sub nsw i64 %600, %xtraiter243
  %lcmp.mod244 = icmp eq i64 %xtraiter243, 0
  %407 = shl nuw nsw i64 %xtraiter243, 4
  br label %.preheader4.preheader.i

.preheader4.preheader.i:                          ; preds = %.preheader4._crit_edge.i, %.preheader4.preheader.lr.ph.i
  %indvars.iv1332.i = phi i64 [ 0, %.preheader4.preheader.lr.ph.i ], [ %indvars.iv.next14.i12, %.preheader4._crit_edge.i ]
  br i1 %402, label %.preheader4._crit_edge.i, label %.preheader3.preheader.i, !noelle.parallelizer.looporder !48

.preheader3.preheader.i:                          ; preds = %.preheader4.preheader.i, %.preheader4.i
  %indvar = phi i64 [ %indvar.next, %.preheader4.i ], [ 0, %.preheader4.preheader.i ]
  %indvars.iv1229.i = phi i64 [ %indvars.iv.next13.i11, %.preheader4.i ], [ 0, %.preheader4.preheader.i ]
  %408 = mul i64 %indvar, %600
  br i1 %brmerge65.demorgan.i, label %.preheader1.preheader.us.i.preheader, label %LeafBlock7._crit_edge.i.i

.preheader1.preheader.us.i.preheader:             ; preds = %.preheader3.preheader.i
  br i1 %405, label %.preheader1.preheader.us.i.us.preheader, label %.preheader1.preheader.us.i

.preheader1.preheader.us.i.us.preheader:          ; preds = %.preheader1.preheader.us.i.preheader
  %sext.us.i.epil.us = shl i64 %indvars.iv1229.i, 32
  %409 = ashr exact i64 %sext.us.i.epil.us, 32
  br label %.preheader1.preheader.us.i.us

.preheader1.preheader.us.i.us:                    ; preds = %.preheader1._crit_edge.us.i.us.1, %.preheader1.preheader.us.i.us.preheader
  %indvars.iv72.us.i.us = phi i64 [ 0, %.preheader1.preheader.us.i.us.preheader ], [ %indvars.iv.next8.us.i.us.1, %.preheader1._crit_edge.us.i.us.1 ]
  br i1 %lcmp.mod, label %.preheader1._crit_edge.us.i.us, label %.preheader1.us.i.epil.us

.preheader1.us.i.epil.us:                         ; preds = %.preheader1.preheader.us.i.us
  %410 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv72.us.i.us, i64 %indvars.iv1332.i, i64 %409
  %411 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv72.us.i.us, i64 0
  %412 = bitcast %struct.dcomplex* %410 to <2 x i64>*
  %413 = load <2 x i64>, <2 x i64>* %412, align 16, !tbaa !8
  %414 = bitcast %struct.dcomplex* %411 to <2 x i64>*
  store <2 x i64> %413, <2 x i64>* %414, align 16, !tbaa !8
  br label %.preheader1._crit_edge.us.i.us

.preheader1._crit_edge.us.i.us:                   ; preds = %.preheader1.us.i.epil.us, %.preheader1.preheader.us.i.us
  %indvars.iv.next8.us.i.us = or i64 %indvars.iv72.us.i.us, 1
  br i1 %lcmp.mod, label %.preheader1._crit_edge.us.i.us.1, label %.preheader1.us.i.epil.us.1

.preheader1.preheader.us.i:                       ; preds = %.preheader1.preheader.us.i.preheader, %.preheader1._crit_edge.us.i
  %indvars.iv72.us.i = phi i64 [ %indvars.iv.next8.us.i, %.preheader1._crit_edge.us.i ], [ 0, %.preheader1.preheader.us.i.preheader ]
  br label %.preheader1.us.i

.preheader1.us.i:                                 ; preds = %.preheader1.preheader.us.i, %.preheader1.us.i
  %indvars.iv1.us.i = phi i64 [ %indvars.iv.next.us.i.1, %.preheader1.us.i ], [ 0, %.preheader1.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.1, %.preheader1.us.i ], [ %unroll_iter, %.preheader1.preheader.us.i ]
  %415 = add i64 %indvars.iv1.us.i, %indvars.iv1229.i
  %sext.us.i = shl i64 %415, 32
  %416 = ashr exact i64 %sext.us.i, 32
  %417 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv72.us.i, i64 %indvars.iv1332.i, i64 %416
  %418 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv72.us.i, i64 %indvars.iv1.us.i
  %419 = bitcast %struct.dcomplex* %417 to <2 x i64>*
  %420 = load <2 x i64>, <2 x i64>* %419, align 16, !tbaa !8
  %421 = bitcast %struct.dcomplex* %418 to <2 x i64>*
  store <2 x i64> %420, <2 x i64>* %421, align 16, !tbaa !8
  %indvars.iv.next.us.i = or i64 %indvars.iv1.us.i, 1
  %422 = add i64 %indvars.iv.next.us.i, %indvars.iv1229.i
  %sext.us.i.1 = shl i64 %422, 32
  %423 = ashr exact i64 %sext.us.i.1, 32
  %424 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv72.us.i, i64 %indvars.iv1332.i, i64 %423
  %425 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv72.us.i, i64 %indvars.iv.next.us.i
  %426 = bitcast %struct.dcomplex* %424 to <2 x i64>*
  %427 = load <2 x i64>, <2 x i64>* %426, align 16, !tbaa !8
  %428 = bitcast %struct.dcomplex* %425 to <2 x i64>*
  store <2 x i64> %427, <2 x i64>* %428, align 16, !tbaa !8
  %indvars.iv.next.us.i.1 = add nuw nsw i64 %indvars.iv1.us.i, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %.preheader1._crit_edge.us.i.unr-lcssa, label %.preheader1.us.i

.preheader1._crit_edge.us.i.unr-lcssa:            ; preds = %.preheader1.us.i
  br i1 %lcmp.mod, label %.preheader1._crit_edge.us.i, label %.preheader1.us.i.epil

.preheader1.us.i.epil:                            ; preds = %.preheader1._crit_edge.us.i.unr-lcssa
  %429 = add i64 %indvars.iv.next.us.i.1, %indvars.iv1229.i
  %sext.us.i.epil = shl i64 %429, 32
  %430 = ashr exact i64 %sext.us.i.epil, 32
  %431 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv72.us.i, i64 %indvars.iv1332.i, i64 %430
  %432 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv72.us.i, i64 %indvars.iv.next.us.i.1
  %433 = bitcast %struct.dcomplex* %431 to <2 x i64>*
  %434 = load <2 x i64>, <2 x i64>* %433, align 16, !tbaa !8
  %435 = bitcast %struct.dcomplex* %432 to <2 x i64>*
  store <2 x i64> %434, <2 x i64>* %435, align 16, !tbaa !8
  br label %.preheader1._crit_edge.us.i

.preheader1._crit_edge.us.i:                      ; preds = %.preheader1._crit_edge.us.i.unr-lcssa, %.preheader1.us.i.epil
  %indvars.iv.next8.us.i = add nuw nsw i64 %indvars.iv72.us.i, 1
  %exitcond48.i = icmp eq i64 %indvars.iv.next8.us.i, %597
  br i1 %exitcond48.i, label %LeafBlock7._crit_edge.i.i, label %.preheader1.preheader.us.i

LeafBlock7._crit_edge.i.i:                        ; preds = %.preheader1._crit_edge.us.i, %.preheader1._crit_edge.us.i.us.1, %.preheader3.preheader.i
  br i1 %605, label %._crit_edge.i.i, label %.split.us.i.i.preheader.i

._crit_edge.i.i:                                  ; preds = %LeafBlock7._crit_edge.i.i
  %436 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.13, i64 0, i64 0), i32 1, i32 %.0.i3.2.i, i32 %604) #10
  call void @exit(i32 1) #30
  unreachable

.split.us.i.i.preheader.i:                        ; preds = %LeafBlock7._crit_edge.i.i, %fftz2.exit.loopexit.i
  %.0.i21.i = phi i32 [ %540, %fftz2.exit.loopexit.i ], [ 1, %LeafBlock7._crit_edge.i.i ]
  %437 = icmp eq i32 %.0.i21.i, 1
  %438 = add nsw i32 %.0.i21.i, -2
  %439 = shl i32 2, %438
  %.02.i.i.i3 = select i1 %437, i32 1, i32 %439
  %440 = sub nsw i32 %.0.i3.2.i, %.0.i21.i
  %441 = icmp eq i32 %440, 0
  %442 = add nsw i32 %440, -1
  %443 = shl i32 2, %442
  %.03.i.i.i4 = select i1 %441, i32 1, i32 %443
  %444 = shl nsw i32 %.02.i.i.i3, 1
  %445 = sext i32 %.02.i.i.i3 to i64
  %446 = sext i32 %.03.i.i.i4 to i64
  %447 = sext i32 %444 to i64
  %448 = icmp slt i32 %.03.i.i.i4, 1
  %449 = icmp slt i32 %.02.i.i.i3, 1
  %brmerge68.i = or i1 %449, %.not67.i
  %or.cond224 = or i1 %448, %brmerge68.i
  br i1 %or.cond224, label %fftz2.exit.i.loopexit.i, label %.lr.ph10.i.split

.lr.ph10.i.split:                                 ; preds = %.split.us.i.i.preheader.i, %.split.us.i.i.i6
  %indvars.iv10.i.i9.i = phi i64 [ %indvars.iv.next11.i.i.i5, %.split.us.i.i.i6 ], [ 0, %.split.us.i.i.preheader.i ]
  %450 = mul nsw i64 %indvars.iv10.i.i9.i, %445
  %451 = mul nsw i64 %indvars.iv10.i.i9.i, %447
  %452 = add nsw i64 %indvars.iv10.i.i9.i, %446
  %453 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %452, i32 0
  %454 = bitcast double* %453 to <2 x double>*
  %455 = load <2 x double>, <2 x double>* %454, align 16, !tbaa !8
  %456 = shufflevector <2 x double> %455, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  br label %.lr.ph7.split.us.i

.lr.ph7.split.us.i:                               ; preds = %.lr.ph10.i.split, %._crit_edge.us.i
  %indvars.iv8.i.i5.us.i = phi i64 [ %indvars.iv.next9.i.i.us.i, %._crit_edge.us.i ], [ 0, %.lr.ph10.i.split ]
  %457 = add nsw i64 %indvars.iv8.i.i5.us.i, %450
  %458 = add nsw i64 %457, %599
  %459 = add nsw i64 %indvars.iv8.i.i5.us.i, %451
  %460 = add nsw i64 %459, %445
  br label %461

461:                                              ; preds = %461, %.lr.ph7.split.us.i
  %indvars.iv.i.i3.us.i = phi i64 [ 0, %.lr.ph7.split.us.i ], [ %indvars.iv.next.i.i.us.i, %461 ]
  %462 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %457, i64 %indvars.iv.i.i3.us.i, i32 0
  %463 = bitcast double* %462 to <2 x double>*
  %464 = load <2 x double>, <2 x double>* %463, align 16, !tbaa !8
  %465 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %458, i64 %indvars.iv.i.i3.us.i, i32 0
  %466 = bitcast double* %465 to <2 x double>*
  %467 = load <2 x double>, <2 x double>* %466, align 16, !tbaa !8
  %468 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %1, i64 0, i64 %459, i64 %indvars.iv.i.i3.us.i, i32 0
  %469 = fadd <2 x double> %464, %467
  %470 = bitcast double* %468 to <2 x double>*
  store <2 x double> %469, <2 x double>* %470, align 16, !tbaa !8
  %471 = extractelement <2 x double> %464, i32 0
  %472 = extractelement <2 x double> %467, i32 0
  %473 = fsub double %471, %472
  %474 = extractelement <2 x double> %464, i32 1
  %475 = extractelement <2 x double> %467, i32 1
  %476 = fsub double %474, %475
  %477 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %1, i64 0, i64 %460, i64 %indvars.iv.i.i3.us.i, i32 0
  %478 = insertelement <2 x double> undef, double %476, i32 0
  %479 = shufflevector <2 x double> %478, <2 x double> undef, <2 x i32> zeroinitializer
  %480 = fmul <2 x double> %456, %479
  %481 = insertelement <2 x double> undef, double %473, i32 0
  %482 = shufflevector <2 x double> %481, <2 x double> undef, <2 x i32> zeroinitializer
  %483 = fmul <2 x double> %455, %482
  %484 = fsub <2 x double> %483, %480
  %485 = fadd <2 x double> %483, %480
  %486 = shufflevector <2 x double> %484, <2 x double> %485, <2 x i32> <i32 0, i32 3>
  %487 = bitcast double* %477 to <2 x double>*
  store <2 x double> %486, <2 x double>* %487, align 16, !tbaa !8
  %indvars.iv.next.i.i.us.i = add nuw nsw i64 %indvars.iv.i.i3.us.i, 1
  %exitcond50.i = icmp eq i64 %indvars.iv.next.i.i.us.i, %600
  br i1 %exitcond50.i, label %._crit_edge.us.i, label %461

._crit_edge.us.i:                                 ; preds = %461
  %indvars.iv.next9.i.i.us.i = add nuw nsw i64 %indvars.iv8.i.i5.us.i, 1
  %exitcond51.i = icmp eq i64 %indvars.iv.next9.i.i.us.i, %445
  br i1 %exitcond51.i, label %.split.us.i.i.i6, label %.lr.ph7.split.us.i

.split.us.i.i.i6:                                 ; preds = %._crit_edge.us.i
  %indvars.iv.next11.i.i.i5 = add nuw nsw i64 %indvars.iv10.i.i9.i, 1
  %exitcond52.i = icmp eq i64 %indvars.iv.next11.i.i.i5, %446
  br i1 %exitcond52.i, label %fftz2.exit.i.loopexit.i, label %.lr.ph10.i.split

fftz2.exit.i.loopexit.i:                          ; preds = %.split.us.i.i.i6, %.split.us.i.i.preheader.i
  %488 = icmp eq i32 %.0.i3.2.i, %.0.i21.i
  br i1 %488, label %.loopexit.i.i9, label %.split.us.i.preheader.i

.split.us.i.preheader.i:                          ; preds = %fftz2.exit.i.loopexit.i
  %489 = add nsw i32 %.0.i21.i, -1
  %490 = shl i32 2, %489
  %491 = xor i32 %.0.i21.i, -1
  %492 = add i32 %.0.i3.2.i, %491
  %493 = icmp eq i32 %492, 0
  %494 = add nsw i32 %492, -1
  %495 = shl i32 2, %494
  %.03.i.i = select i1 %493, i32 1, i32 %495
  %496 = shl nsw i32 %490, 1
  %497 = sext i32 %490 to i64
  %498 = sext i32 %.03.i.i to i64
  %499 = sext i32 %496 to i64
  %500 = icmp slt i32 %.03.i.i, 1
  %501 = icmp slt i32 %490, 1
  %brmerge71.i = or i1 %501, %.not67.i
  %or.cond225 = or i1 %brmerge71.i, %500
  br i1 %or.cond225, label %fftz2.exit.loopexit.i, label %.lr.ph20.i.split

.lr.ph20.i.split:                                 ; preds = %.split.us.i.preheader.i, %.split.us.i.i8
  %indvars.iv10.i19.i = phi i64 [ %indvars.iv.next11.i.i7, %.split.us.i.i8 ], [ 0, %.split.us.i.preheader.i ]
  %502 = mul nsw i64 %indvars.iv10.i19.i, %497
  %503 = mul nsw i64 %indvars.iv10.i19.i, %499
  %504 = add nsw i64 %indvars.iv10.i19.i, %498
  %505 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %504, i32 0
  %506 = bitcast double* %505 to <2 x double>*
  %507 = load <2 x double>, <2 x double>* %506, align 16, !tbaa !8
  %508 = shufflevector <2 x double> %507, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  br label %.lr.ph17.split.us.i

.lr.ph17.split.us.i:                              ; preds = %.lr.ph20.i.split, %._crit_edge14.us.i
  %indvars.iv8.i15.us.i = phi i64 [ %indvars.iv.next9.i.us.i, %._crit_edge14.us.i ], [ 0, %.lr.ph20.i.split ]
  %509 = add nsw i64 %indvars.iv8.i15.us.i, %502
  %510 = add nsw i64 %509, %599
  %511 = add nsw i64 %indvars.iv8.i15.us.i, %503
  %512 = add nsw i64 %511, %497
  br label %513

513:                                              ; preds = %513, %.lr.ph17.split.us.i
  %indvars.iv.i111.us.i = phi i64 [ 0, %.lr.ph17.split.us.i ], [ %indvars.iv.next.i2.us.i, %513 ]
  %514 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %1, i64 0, i64 %509, i64 %indvars.iv.i111.us.i, i32 0
  %515 = bitcast double* %514 to <2 x double>*
  %516 = load <2 x double>, <2 x double>* %515, align 16, !tbaa !8
  %517 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %1, i64 0, i64 %510, i64 %indvars.iv.i111.us.i, i32 0
  %518 = bitcast double* %517 to <2 x double>*
  %519 = load <2 x double>, <2 x double>* %518, align 16, !tbaa !8
  %520 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %511, i64 %indvars.iv.i111.us.i, i32 0
  %521 = fadd <2 x double> %516, %519
  %522 = bitcast double* %520 to <2 x double>*
  store <2 x double> %521, <2 x double>* %522, align 16, !tbaa !8
  %523 = extractelement <2 x double> %516, i32 0
  %524 = extractelement <2 x double> %519, i32 0
  %525 = fsub double %523, %524
  %526 = extractelement <2 x double> %516, i32 1
  %527 = extractelement <2 x double> %519, i32 1
  %528 = fsub double %526, %527
  %529 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %512, i64 %indvars.iv.i111.us.i, i32 0
  %530 = insertelement <2 x double> undef, double %528, i32 0
  %531 = shufflevector <2 x double> %530, <2 x double> undef, <2 x i32> zeroinitializer
  %532 = fmul <2 x double> %508, %531
  %533 = insertelement <2 x double> undef, double %525, i32 0
  %534 = shufflevector <2 x double> %533, <2 x double> undef, <2 x i32> zeroinitializer
  %535 = fmul <2 x double> %507, %534
  %536 = fsub <2 x double> %535, %532
  %537 = fadd <2 x double> %535, %532
  %538 = shufflevector <2 x double> %536, <2 x double> %537, <2 x i32> <i32 0, i32 3>
  %539 = bitcast double* %529 to <2 x double>*
  store <2 x double> %538, <2 x double>* %539, align 16, !tbaa !8
  %indvars.iv.next.i2.us.i = add nuw nsw i64 %indvars.iv.i111.us.i, 1
  %exitcond54.i = icmp eq i64 %indvars.iv.next.i2.us.i, %600
  br i1 %exitcond54.i, label %._crit_edge14.us.i, label %513

._crit_edge14.us.i:                               ; preds = %513
  %indvars.iv.next9.i.us.i = add nuw nsw i64 %indvars.iv8.i15.us.i, 1
  %exitcond55.i = icmp eq i64 %indvars.iv.next9.i.us.i, %497
  br i1 %exitcond55.i, label %.split.us.i.i8, label %.lr.ph17.split.us.i

.split.us.i.i8:                                   ; preds = %._crit_edge14.us.i
  %indvars.iv.next11.i.i7 = add nuw nsw i64 %indvars.iv10.i19.i, 1
  %exitcond56.i = icmp eq i64 %indvars.iv.next11.i.i7, %498
  br i1 %exitcond56.i, label %fftz2.exit.loopexit.i, label %.lr.ph20.i.split

fftz2.exit.loopexit.i:                            ; preds = %.split.us.i.i8, %.split.us.i.preheader.i
  %540 = add nuw nsw i32 %.0.i21.i, 2
  %541 = icmp slt i32 %.0.i3.2.i, %540
  br i1 %541, label %.loopexit.i.i9, label %.split.us.i.i.preheader.i

.loopexit.i.i9:                                   ; preds = %fftz2.exit.loopexit.i, %fftz2.exit.i.loopexit.i
  br i1 %brmerge73.i, label %cfftz.exit.i10, label %.preheader1.i.preheader.us.i.preheader

.preheader1.i.preheader.us.i.preheader:           ; preds = %.loopexit.i.i9
  br i1 %406, label %.preheader1.i.preheader.us.i.us, label %.preheader1.i.preheader.us.i

.preheader1.i.preheader.us.i.us:                  ; preds = %.preheader1.i.preheader.us.i.preheader, %.preheader1.i._crit_edge.us.i.us.1
  %indvars.iv5.i24.us.i.us = phi i64 [ %indvars.iv.next6.i.us.i.us.1, %.preheader1.i._crit_edge.us.i.us.1 ], [ 0, %.preheader1.i.preheader.us.i.preheader ]
  br i1 %lcmp.mod244, label %.preheader1.i._crit_edge.us.i.us, label %.preheader1.i.us.i.epil.us.preheader

.preheader1.i.us.i.epil.us.preheader:             ; preds = %.preheader1.i.preheader.us.i.us
  %scevgep112 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %1, i64 0, i64 %indvars.iv5.i24.us.i.us, i64 0
  %scevgep112113 = bitcast %struct.dcomplex* %scevgep112 to i8*
  %scevgep110 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv5.i24.us.i.us, i64 0
  %scevgep110111 = bitcast %struct.dcomplex* %scevgep110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep110111, i8* align 16 %scevgep112113, i64 %407, i1 false)
  br label %.preheader1.i._crit_edge.us.i.us

.preheader1.i._crit_edge.us.i.us:                 ; preds = %.preheader1.i.us.i.epil.us.preheader, %.preheader1.i.preheader.us.i.us
  %indvars.iv.next6.i.us.i.us = or i64 %indvars.iv5.i24.us.i.us, 1
  br i1 %lcmp.mod244, label %.preheader1.i._crit_edge.us.i.us.1, label %.preheader1.i.us.i.epil.us.preheader.1

.preheader1.i.preheader.us.i:                     ; preds = %.preheader1.i.preheader.us.i.preheader, %.preheader1.i._crit_edge.us.i
  %indvars.iv5.i24.us.i = phi i64 [ %indvars.iv.next6.i.us.i, %.preheader1.i._crit_edge.us.i ], [ 0, %.preheader1.i.preheader.us.i.preheader ]
  br label %.preheader1.i.us.i

.preheader1.i.us.i:                               ; preds = %.preheader1.i.preheader.us.i, %.preheader1.i.us.i
  %indvars.iv.i22.us.i = phi i64 [ %indvars.iv.next.i.us.i.3, %.preheader1.i.us.i ], [ 0, %.preheader1.i.preheader.us.i ]
  %niter246 = phi i64 [ %niter246.nsub.3, %.preheader1.i.us.i ], [ %unroll_iter245, %.preheader1.i.preheader.us.i ]
  %542 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %1, i64 0, i64 %indvars.iv5.i24.us.i, i64 %indvars.iv.i22.us.i
  %543 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv5.i24.us.i, i64 %indvars.iv.i22.us.i
  %544 = bitcast %struct.dcomplex* %542 to <2 x i64>*
  %545 = load <2 x i64>, <2 x i64>* %544, align 16, !tbaa !8
  %546 = bitcast %struct.dcomplex* %543 to <2 x i64>*
  store <2 x i64> %545, <2 x i64>* %546, align 16, !tbaa !8
  %indvars.iv.next.i.us.i = or i64 %indvars.iv.i22.us.i, 1
  %547 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %1, i64 0, i64 %indvars.iv5.i24.us.i, i64 %indvars.iv.next.i.us.i
  %548 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv5.i24.us.i, i64 %indvars.iv.next.i.us.i
  %549 = bitcast %struct.dcomplex* %547 to <2 x i64>*
  %550 = load <2 x i64>, <2 x i64>* %549, align 16, !tbaa !8
  %551 = bitcast %struct.dcomplex* %548 to <2 x i64>*
  store <2 x i64> %550, <2 x i64>* %551, align 16, !tbaa !8
  %indvars.iv.next.i.us.i.1 = or i64 %indvars.iv.i22.us.i, 2
  %552 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %1, i64 0, i64 %indvars.iv5.i24.us.i, i64 %indvars.iv.next.i.us.i.1
  %553 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv5.i24.us.i, i64 %indvars.iv.next.i.us.i.1
  %554 = bitcast %struct.dcomplex* %552 to <2 x i64>*
  %555 = load <2 x i64>, <2 x i64>* %554, align 16, !tbaa !8
  %556 = bitcast %struct.dcomplex* %553 to <2 x i64>*
  store <2 x i64> %555, <2 x i64>* %556, align 16, !tbaa !8
  %indvars.iv.next.i.us.i.2 = or i64 %indvars.iv.i22.us.i, 3
  %557 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %1, i64 0, i64 %indvars.iv5.i24.us.i, i64 %indvars.iv.next.i.us.i.2
  %558 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv5.i24.us.i, i64 %indvars.iv.next.i.us.i.2
  %559 = bitcast %struct.dcomplex* %557 to <2 x i64>*
  %560 = load <2 x i64>, <2 x i64>* %559, align 16, !tbaa !8
  %561 = bitcast %struct.dcomplex* %558 to <2 x i64>*
  store <2 x i64> %560, <2 x i64>* %561, align 16, !tbaa !8
  %indvars.iv.next.i.us.i.3 = add nuw nsw i64 %indvars.iv.i22.us.i, 4
  %niter246.nsub.3 = add i64 %niter246, -4
  %niter246.ncmp.3 = icmp eq i64 %niter246.nsub.3, 0
  br i1 %niter246.ncmp.3, label %.preheader1.i._crit_edge.us.i.unr-lcssa, label %.preheader1.i.us.i

.preheader1.i._crit_edge.us.i.unr-lcssa:          ; preds = %.preheader1.i.us.i
  br i1 %lcmp.mod244, label %.preheader1.i._crit_edge.us.i, label %.preheader1.i.us.i.epil.preheader

.preheader1.i.us.i.epil.preheader:                ; preds = %.preheader1.i._crit_edge.us.i.unr-lcssa
  %scevgep105 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv5.i24.us.i, i64 %indvars.iv.next.i.us.i.3
  %scevgep105106 = bitcast %struct.dcomplex* %scevgep105 to i8*
  %scevgep108 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %1, i64 0, i64 %indvars.iv5.i24.us.i, i64 %indvars.iv.next.i.us.i.3
  %scevgep108109 = bitcast %struct.dcomplex* %scevgep108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep105106, i8* align 16 %scevgep108109, i64 %407, i1 false)
  br label %.preheader1.i._crit_edge.us.i

.preheader1.i._crit_edge.us.i:                    ; preds = %.preheader1.i.us.i.epil.preheader, %.preheader1.i._crit_edge.us.i.unr-lcssa
  %indvars.iv.next6.i.us.i = add nuw nsw i64 %indvars.iv5.i24.us.i, 1
  %exitcond59.i = icmp eq i64 %indvars.iv.next6.i.us.i, %597
  br i1 %exitcond59.i, label %cfftz.exit.i10, label %.preheader1.i.preheader.us.i

cfftz.exit.i10:                                   ; preds = %.preheader1.i._crit_edge.us.i, %.preheader1.i._crit_edge.us.i.us.1, %.loopexit.i.i9
  br i1 %brmerge65.demorgan.i, label %.preheader.preheader.us.i.preheader, label %.preheader4.i

.preheader.preheader.us.i.preheader:              ; preds = %cfftz.exit.i10
  br i1 %406, label %.preheader.preheader.us.i.us, label %.preheader.preheader.us.i

.preheader.preheader.us.i.us:                     ; preds = %.preheader.preheader.us.i.preheader, %.preheader._crit_edge.us.i.us.1
  %indvars.iv1127.us.i.us = phi i64 [ %indvars.iv.next12.us.i.us.1, %.preheader._crit_edge.us.i.us.1 ], [ 0, %.preheader.preheader.us.i.preheader ]
  br i1 %lcmp.mod244, label %.preheader._crit_edge.us.i.us, label %.preheader.us.i.epil.us.preheader

.preheader.us.i.epil.us.preheader:                ; preds = %.preheader.preheader.us.i.us
  %scevgep122 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv1127.us.i.us, i64 0
  %scevgep122123 = bitcast %struct.dcomplex* %scevgep122 to i8*
  %scevgep120 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %indvars.iv1127.us.i.us, i64 %indvars.iv1332.i, i64 %408
  %scevgep120121 = bitcast %struct.dcomplex* %scevgep120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep120121, i8* align 16 %scevgep122123, i64 %407, i1 false)
  br label %.preheader._crit_edge.us.i.us

.preheader._crit_edge.us.i.us:                    ; preds = %.preheader.us.i.epil.us.preheader, %.preheader.preheader.us.i.us
  %indvars.iv.next12.us.i.us = or i64 %indvars.iv1127.us.i.us, 1
  br i1 %lcmp.mod244, label %.preheader._crit_edge.us.i.us.1, label %.preheader.us.i.epil.us.preheader.1

.preheader.preheader.us.i:                        ; preds = %.preheader.preheader.us.i.preheader, %.preheader._crit_edge.us.i
  %indvars.iv1127.us.i = phi i64 [ %indvars.iv.next12.us.i, %.preheader._crit_edge.us.i ], [ 0, %.preheader.preheader.us.i.preheader ]
  br label %.preheader.us.i

.preheader.us.i:                                  ; preds = %.preheader.preheader.us.i, %.preheader.us.i
  %indvars.iv925.us.i = phi i64 [ %indvars.iv.next10.us.i.3, %.preheader.us.i ], [ 0, %.preheader.preheader.us.i ]
  %niter251 = phi i64 [ %niter251.nsub.3, %.preheader.us.i ], [ %unroll_iter245, %.preheader.preheader.us.i ]
  %562 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv1127.us.i, i64 %indvars.iv925.us.i
  %563 = add nsw i64 %indvars.iv925.us.i, %indvars.iv1229.i
  %564 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %indvars.iv1127.us.i, i64 %indvars.iv1332.i, i64 %563
  %565 = bitcast %struct.dcomplex* %562 to <2 x i64>*
  %566 = load <2 x i64>, <2 x i64>* %565, align 16, !tbaa !8
  %567 = bitcast %struct.dcomplex* %564 to <2 x i64>*
  store <2 x i64> %566, <2 x i64>* %567, align 16, !tbaa !8
  %indvars.iv.next10.us.i = or i64 %indvars.iv925.us.i, 1
  %568 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv1127.us.i, i64 %indvars.iv.next10.us.i
  %569 = add nsw i64 %indvars.iv.next10.us.i, %indvars.iv1229.i
  %570 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %indvars.iv1127.us.i, i64 %indvars.iv1332.i, i64 %569
  %571 = bitcast %struct.dcomplex* %568 to <2 x i64>*
  %572 = load <2 x i64>, <2 x i64>* %571, align 16, !tbaa !8
  %573 = bitcast %struct.dcomplex* %570 to <2 x i64>*
  store <2 x i64> %572, <2 x i64>* %573, align 16, !tbaa !8
  %indvars.iv.next10.us.i.1 = or i64 %indvars.iv925.us.i, 2
  %574 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv1127.us.i, i64 %indvars.iv.next10.us.i.1
  %575 = add nsw i64 %indvars.iv.next10.us.i.1, %indvars.iv1229.i
  %576 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %indvars.iv1127.us.i, i64 %indvars.iv1332.i, i64 %575
  %577 = bitcast %struct.dcomplex* %574 to <2 x i64>*
  %578 = load <2 x i64>, <2 x i64>* %577, align 16, !tbaa !8
  %579 = bitcast %struct.dcomplex* %576 to <2 x i64>*
  store <2 x i64> %578, <2 x i64>* %579, align 16, !tbaa !8
  %indvars.iv.next10.us.i.2 = or i64 %indvars.iv925.us.i, 3
  %580 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv1127.us.i, i64 %indvars.iv.next10.us.i.2
  %581 = add nsw i64 %indvars.iv.next10.us.i.2, %indvars.iv1229.i
  %582 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %indvars.iv1127.us.i, i64 %indvars.iv1332.i, i64 %581
  %583 = bitcast %struct.dcomplex* %580 to <2 x i64>*
  %584 = load <2 x i64>, <2 x i64>* %583, align 16, !tbaa !8
  %585 = bitcast %struct.dcomplex* %582 to <2 x i64>*
  store <2 x i64> %584, <2 x i64>* %585, align 16, !tbaa !8
  %indvars.iv.next10.us.i.3 = add nuw nsw i64 %indvars.iv925.us.i, 4
  %niter251.nsub.3 = add i64 %niter251, -4
  %niter251.ncmp.3 = icmp eq i64 %niter251.nsub.3, 0
  br i1 %niter251.ncmp.3, label %.preheader._crit_edge.us.i.unr-lcssa, label %.preheader.us.i

.preheader._crit_edge.us.i.unr-lcssa:             ; preds = %.preheader.us.i
  br i1 %lcmp.mod244, label %.preheader._crit_edge.us.i, label %.preheader.us.i.epil.preheader

.preheader.us.i.epil.preheader:                   ; preds = %.preheader._crit_edge.us.i.unr-lcssa
  %586 = add nsw i64 %408, %indvars.iv.next10.us.i.3
  %scevgep115 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %indvars.iv1127.us.i, i64 %indvars.iv1332.i, i64 %586
  %scevgep115116 = bitcast %struct.dcomplex* %scevgep115 to i8*
  %scevgep118 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv1127.us.i, i64 %indvars.iv.next10.us.i.3
  %scevgep118119 = bitcast %struct.dcomplex* %scevgep118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep115116, i8* align 16 %scevgep118119, i64 %407, i1 false)
  br label %.preheader._crit_edge.us.i

.preheader._crit_edge.us.i:                       ; preds = %.preheader.us.i.epil.preheader, %.preheader._crit_edge.us.i.unr-lcssa
  %indvars.iv.next12.us.i = add nuw nsw i64 %indvars.iv1127.us.i, 1
  %exitcond62.i = icmp eq i64 %indvars.iv.next12.us.i, %597
  br i1 %exitcond62.i, label %.preheader4.i, label %.preheader.preheader.us.i

.preheader4.i:                                    ; preds = %.preheader._crit_edge.us.i, %.preheader._crit_edge.us.i.us.1, %cfftz.exit.i10
  %indvars.iv.next13.i11 = add i64 %indvars.iv1229.i, %600
  %587 = icmp sgt i64 %indvars.iv.next13.i11, %602
  %indvar.next = add i64 %indvar, 1
  br i1 %587, label %.preheader4._crit_edge.i, label %.preheader3.preheader.i, !noelle.parallelizer.looporder !48

.preheader4._crit_edge.i:                         ; preds = %.preheader4.i, %.preheader4.preheader.i
  %indvars.iv.next14.i12 = add nuw nsw i64 %indvars.iv1332.i, 1
  %exitcond63.i = icmp eq i64 %indvars.iv.next14.i12, %596
  br i1 %exitcond63.i, label %cffts3.exit, label %.preheader4.preheader.i, !noelle.parallelizer.looporder !49

.preheader.i2.1.i:                                ; preds = %ilog2.exit.i, %.preheader.i2.1.i
  %.01.i36.1.i = phi i32 [ %588, %.preheader.i2.1.i ], [ 2, %ilog2.exit.i ]
  %588 = shl i32 %.01.i36.1.i, 1
  %589 = icmp slt i32 %588, %399
  br i1 %589, label %.preheader.i2.1.i, label %ilog2.exit.1.i

ilog2.exit.1.i:                                   ; preds = %.preheader.i2.1.i, %ilog2.exit.i
  %.b236 = load i1, i1* @dims.2.2, align 8
  %590 = select i1 %.b236, i32 256, i32 0
  br i1 %.b236, label %.preheader.i2.2.i, label %ilog2.exit.2.i

.preheader.i2.2.i:                                ; preds = %ilog2.exit.1.i, %.preheader.i2.2.i
  %.01.i36.2.i = phi i32 [ %591, %.preheader.i2.2.i ], [ 2, %ilog2.exit.1.i ]
  %.02.i35.2.i = phi i32 [ %592, %.preheader.i2.2.i ], [ 1, %ilog2.exit.1.i ]
  %591 = shl i32 %.01.i36.2.i, 1
  %592 = add nuw nsw i32 %.02.i35.2.i, 1
  %593 = icmp slt i32 %591, %590
  br i1 %593, label %.preheader.i2.2.i, label %ilog2.exit.2.i

ilog2.exit.2.i:                                   ; preds = %.preheader.i2.2.i, %ilog2.exit.1.i
  %.0.i3.2.i = phi i32 [ 1, %ilog2.exit.1.i ], [ %592, %.preheader.i2.2.i ]
  %594 = bitcast [512 x [18 x %struct.dcomplex]]* %0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 147456, i8* nonnull %594) #10
  %595 = bitcast [512 x [18 x %struct.dcomplex]]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 147456, i8* nonnull %595) #10
  %596 = zext i32 %399 to i64
  %597 = zext i32 %590 to i64
  %598 = lshr exact i32 %590, 1
  %599 = zext i32 %598 to i64
  %.pre.i13 = load i32, i32* @fftblock, align 4
  %600 = sext i32 %.pre.i13 to i64
  %601 = sub nsw i32 %396, %.pre.i13
  %602 = sext i32 %601 to i64
  %603 = load double, double* getelementptr inbounds ([512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 0, i32 0), align 16
  %604 = fptosi double %603 to i32
  %605 = icmp sgt i32 %.0.i3.2.i, %604
  br i1 %.b235, label %.preheader4.preheader.lr.ph.i, label %cffts3.exit, !noelle.parallelizer.looporder !49

cffts3.exit:                                      ; preds = %.preheader4._crit_edge.i, %ilog2.exit.2.i
  call void @llvm.lifetime.end.p0i8(i64 147456, i8* nonnull %595) #10
  call void @llvm.lifetime.end.p0i8(i64 147456, i8* nonnull %594) #10
  ret void

606:                                              ; preds = %.lr.ph121
  %607 = alloca [8 x i8*], align 8
  %608 = alloca [8 x i64*], align 8
  %609 = alloca [8 x i64], align 8
  %.sub2 = getelementptr inbounds [8 x i64], [8 x i64]* %609, i64 0, i64 0
  %.sub1 = getelementptr inbounds [8 x i64*], [8 x i64*]* %608, i64 0, i64 0
  %.sub = getelementptr inbounds [8 x i8*], [8 x i8*]* %607, i64 0, i64 0
  store [512 x [18 x %struct.dcomplex]]* %12, [512 x [18 x %struct.dcomplex]]** %934, align 8, !noelle.environment_variable.live_in.store_pointer !24
  store [512 x [18 x %struct.dcomplex]]* %13, [512 x [18 x %struct.dcomplex]]** %4, align 8, !noelle.environment_variable.live_in.store_pointer !25
  store i64 %946, i64* %935, align 8, !noelle.environment_variable.live_in.store_pointer !26
  store i64 %951, i64* %5, align 8, !noelle.environment_variable.live_in.store_pointer !27
  store i64 %60, i64* %936, align 8, !noelle.environment_variable.live_in.store_pointer !11
  store i64 %61, i64* %6, align 8, !noelle.environment_variable.live_in.store_pointer !31
  store i64 %62, i64* %937, align 8, !noelle.environment_variable.live_in.store_pointer !28
  store i8** %.sub, i8*** %938, align 8, !noelle.environment_variable.live_in.store_pointer !35
  store i64** %.sub1, i64*** %939, align 8, !noelle.environment_variable.live_in.store_pointer !32
  store i64* %.sub2, i64** %940, align 8, !noelle.environment_variable.live_in.store_pointer !41
  %610 = call { i32, i64 } @NOELLE_DOALLDispatcher(void (i8*, i64, i64, i64)* nonnull @noelle_task_0, i8* nonnull %2, i64 8, i64 8) #10
  %611 = load i64, i64* %.sub2, align 8
  %612 = getelementptr inbounds [8 x i64], [8 x i64]* %609, i64 0, i64 1
  %613 = load i64, i64* %612, align 8
  %614 = getelementptr inbounds [8 x i64], [8 x i64]* %609, i64 0, i64 2
  %615 = load i64, i64* %614, align 8
  %616 = getelementptr inbounds [8 x i64], [8 x i64]* %609, i64 0, i64 3
  %617 = load i64, i64* %616, align 8
  %618 = getelementptr inbounds [8 x i64], [8 x i64]* %609, i64 0, i64 4
  %619 = load i64, i64* %618, align 8
  %620 = getelementptr inbounds [8 x i64], [8 x i64]* %609, i64 0, i64 5
  %621 = load i64, i64* %620, align 8
  %622 = getelementptr inbounds [8 x i64], [8 x i64]* %609, i64 0, i64 6
  %623 = load i64, i64* %622, align 8
  %624 = getelementptr inbounds [8 x i64], [8 x i64]* %609, i64 0, i64 7
  %625 = load i64, i64* %624, align 8
  %626 = icmp ult i64 %611, %613
  %627 = select i1 %626, i64 %613, i64 %611
  %628 = icmp ult i64 %627, %615
  %629 = select i1 %628, i64 %615, i64 %627
  %630 = icmp ult i64 %629, %617
  %631 = select i1 %630, i64 %617, i64 %629
  %632 = icmp ult i64 %631, %619
  %633 = select i1 %632, i64 %619, i64 %631
  %634 = icmp ult i64 %633, %621
  %635 = select i1 %634, i64 %621, i64 %633
  %636 = icmp ult i64 %635, %623
  %637 = select i1 %636, i64 %623, i64 %635
  %638 = icmp ult i64 %637, %625
  %639 = select i1 %638, i64 %625, i64 %637
  %640 = alloca i64, i64 %639, align 8
  %641 = shl i64 %639, 3
  %642 = bitcast i64* %640 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %642, i8 -1, i64 %641, i1 false)
  %643 = load i64*, i64** %.sub1, align 8
  %644 = load i8*, i8** %.sub, align 8
  %645 = bitcast i8* %644 to double*
  %646 = icmp eq i64 %611, 0
  br i1 %646, label %noelle_task_0_update_original_heap.exit, label %body0.i.preheader

body0.i.preheader:                                ; preds = %606
  %xtraiter266 = and i64 %611, 1
  %647 = icmp eq i64 %611, 1
  br i1 %647, label %body0.i.epil, label %body0.i.preheader.new

body0.i.preheader.new:                            ; preds = %body0.i.preheader
  %unroll_iter268 = sub nuw i64 %611, %xtraiter266
  br label %body0.i

body0.i:                                          ; preds = %body3.i.1, %body0.i.preheader.new
  %648 = phi i64 [ 0, %body0.i.preheader.new ], [ %958, %body3.i.1 ]
  %niter269 = phi i64 [ %unroll_iter268, %body0.i.preheader.new ], [ %niter269.nsub.1, %body3.i.1 ]
  %649 = getelementptr i64, i64* %643, i64 %648
  %650 = getelementptr i64, i64* %640, i64 %648
  %651 = load i64, i64* %649, align 8
  %652 = load i64, i64* %650, align 8
  %653 = icmp sgt i64 %651, %652
  br i1 %653, label %body2.i, label %body3.i

body2.i:                                          ; preds = %body0.i
  %654 = getelementptr double, double* %24, i64 %648
  %655 = getelementptr double, double* %645, i64 %648
  %656 = bitcast double* %655 to i64*
  %657 = load i64, i64* %656, align 8
  %658 = bitcast double* %654 to i64*
  store i64 %657, i64* %658, align 16
  store i64 %651, i64* %650, align 8
  br label %body3.i

body3.i:                                          ; preds = %body2.i, %body0.i
  %659 = or i64 %648, 1
  %660 = getelementptr i64, i64* %643, i64 %659
  %661 = getelementptr i64, i64* %640, i64 %659
  %662 = load i64, i64* %660, align 8
  %663 = load i64, i64* %661, align 8
  %664 = icmp sgt i64 %662, %663
  br i1 %664, label %body2.i.1, label %body3.i.1

noelle_task_0_update_original_heap.exit.loopexit.unr-lcssa: ; preds = %body3.i.1
  %lcmp.mod267 = icmp eq i64 %xtraiter266, 0
  br i1 %lcmp.mod267, label %noelle_task_0_update_original_heap.exit, label %body0.i.epil

body0.i.epil:                                     ; preds = %body0.i.preheader, %noelle_task_0_update_original_heap.exit.loopexit.unr-lcssa
  %.unr43 = phi i64 [ %958, %noelle_task_0_update_original_heap.exit.loopexit.unr-lcssa ], [ 0, %body0.i.preheader ]
  %665 = getelementptr i64, i64* %643, i64 %.unr43
  %666 = getelementptr i64, i64* %640, i64 %.unr43
  %667 = load i64, i64* %665, align 8
  %668 = load i64, i64* %666, align 8
  %669 = icmp sgt i64 %667, %668
  br i1 %669, label %body2.i.epil, label %noelle_task_0_update_original_heap.exit

body2.i.epil:                                     ; preds = %body0.i.epil
  %670 = getelementptr double, double* %24, i64 %.unr43
  %671 = getelementptr double, double* %645, i64 %.unr43
  %672 = bitcast double* %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = bitcast double* %670 to i64*
  store i64 %673, i64* %674, align 8
  store i64 %667, i64* %666, align 8
  br label %noelle_task_0_update_original_heap.exit

noelle_task_0_update_original_heap.exit:          ; preds = %noelle_task_0_update_original_heap.exit.loopexit.unr-lcssa, %body0.i.epil, %body2.i.epil, %606
  call void @free(i8* %644)
  %675 = getelementptr inbounds [8 x i64*], [8 x i64*]* %608, i64 0, i64 1
  %676 = load i64*, i64** %675, align 8
  %677 = getelementptr inbounds [8 x i8*], [8 x i8*]* %607, i64 0, i64 1
  %678 = load i8*, i8** %677, align 8
  %679 = bitcast i8* %678 to double*
  %680 = icmp eq i64 %613, 0
  br i1 %680, label %noelle_task_0_update_original_heap.exit21, label %body0.i17.preheader

body0.i17.preheader:                              ; preds = %noelle_task_0_update_original_heap.exit
  %xtraiter270 = and i64 %613, 1
  %681 = icmp eq i64 %613, 1
  br i1 %681, label %body0.i17.epil, label %body0.i17.preheader.new

body0.i17.preheader.new:                          ; preds = %body0.i17.preheader
  %unroll_iter273 = sub nuw i64 %613, %xtraiter270
  br label %body0.i17

body0.i17:                                        ; preds = %body3.i20.1, %body0.i17.preheader.new
  %682 = phi i64 [ 0, %body0.i17.preheader.new ], [ %964, %body3.i20.1 ]
  %niter274 = phi i64 [ %unroll_iter273, %body0.i17.preheader.new ], [ %niter274.nsub.1, %body3.i20.1 ]
  %683 = getelementptr i64, i64* %676, i64 %682
  %684 = getelementptr i64, i64* %640, i64 %682
  %685 = load i64, i64* %683, align 8
  %686 = load i64, i64* %684, align 8
  %687 = icmp sgt i64 %685, %686
  br i1 %687, label %body2.i18, label %body3.i20

body2.i18:                                        ; preds = %body0.i17
  %688 = getelementptr double, double* %24, i64 %682
  %689 = getelementptr double, double* %679, i64 %682
  %690 = bitcast double* %689 to i64*
  %691 = load i64, i64* %690, align 8
  %692 = bitcast double* %688 to i64*
  store i64 %691, i64* %692, align 16
  store i64 %685, i64* %684, align 8
  br label %body3.i20

body3.i20:                                        ; preds = %body2.i18, %body0.i17
  %693 = or i64 %682, 1
  %694 = getelementptr i64, i64* %676, i64 %693
  %695 = getelementptr i64, i64* %640, i64 %693
  %696 = load i64, i64* %694, align 8
  %697 = load i64, i64* %695, align 8
  %698 = icmp sgt i64 %696, %697
  br i1 %698, label %body2.i18.1, label %body3.i20.1

noelle_task_0_update_original_heap.exit21.loopexit.unr-lcssa: ; preds = %body3.i20.1
  %lcmp.mod272 = icmp eq i64 %xtraiter270, 0
  br i1 %lcmp.mod272, label %noelle_task_0_update_original_heap.exit21, label %body0.i17.epil

body0.i17.epil:                                   ; preds = %body0.i17.preheader, %noelle_task_0_update_original_heap.exit21.loopexit.unr-lcssa
  %.unr27146 = phi i64 [ %964, %noelle_task_0_update_original_heap.exit21.loopexit.unr-lcssa ], [ 0, %body0.i17.preheader ]
  %699 = getelementptr i64, i64* %676, i64 %.unr27146
  %700 = getelementptr i64, i64* %640, i64 %.unr27146
  %701 = load i64, i64* %699, align 8
  %702 = load i64, i64* %700, align 8
  %703 = icmp sgt i64 %701, %702
  br i1 %703, label %body2.i18.epil, label %noelle_task_0_update_original_heap.exit21

body2.i18.epil:                                   ; preds = %body0.i17.epil
  %704 = getelementptr double, double* %24, i64 %.unr27146
  %705 = getelementptr double, double* %679, i64 %.unr27146
  %706 = bitcast double* %705 to i64*
  %707 = load i64, i64* %706, align 8
  %708 = bitcast double* %704 to i64*
  store i64 %707, i64* %708, align 8
  store i64 %701, i64* %700, align 8
  br label %noelle_task_0_update_original_heap.exit21

noelle_task_0_update_original_heap.exit21:        ; preds = %noelle_task_0_update_original_heap.exit21.loopexit.unr-lcssa, %body0.i17.epil, %body2.i18.epil, %noelle_task_0_update_original_heap.exit
  call void @free(i8* %678)
  %709 = getelementptr inbounds [8 x i64*], [8 x i64*]* %608, i64 0, i64 2
  %710 = load i64*, i64** %709, align 8
  %711 = getelementptr inbounds [8 x i8*], [8 x i8*]* %607, i64 0, i64 2
  %712 = load i8*, i8** %711, align 8
  %713 = bitcast i8* %712 to double*
  %714 = icmp eq i64 %615, 0
  br i1 %714, label %noelle_task_0_update_original_heap.exit51, label %body0.i47.preheader

body0.i47.preheader:                              ; preds = %noelle_task_0_update_original_heap.exit21
  %xtraiter275 = and i64 %615, 1
  %715 = icmp eq i64 %615, 1
  br i1 %715, label %body0.i47.epil, label %body0.i47.preheader.new

body0.i47.preheader.new:                          ; preds = %body0.i47.preheader
  %unroll_iter278 = sub nuw i64 %615, %xtraiter275
  br label %body0.i47

body0.i47:                                        ; preds = %body3.i50.1, %body0.i47.preheader.new
  %716 = phi i64 [ 0, %body0.i47.preheader.new ], [ %970, %body3.i50.1 ]
  %niter279 = phi i64 [ %unroll_iter278, %body0.i47.preheader.new ], [ %niter279.nsub.1, %body3.i50.1 ]
  %717 = getelementptr i64, i64* %710, i64 %716
  %718 = getelementptr i64, i64* %640, i64 %716
  %719 = load i64, i64* %717, align 8
  %720 = load i64, i64* %718, align 8
  %721 = icmp sgt i64 %719, %720
  br i1 %721, label %body2.i48, label %body3.i50

body2.i48:                                        ; preds = %body0.i47
  %722 = getelementptr double, double* %24, i64 %716
  %723 = getelementptr double, double* %713, i64 %716
  %724 = bitcast double* %723 to i64*
  %725 = load i64, i64* %724, align 8
  %726 = bitcast double* %722 to i64*
  store i64 %725, i64* %726, align 16
  store i64 %719, i64* %718, align 8
  br label %body3.i50

body3.i50:                                        ; preds = %body2.i48, %body0.i47
  %727 = or i64 %716, 1
  %728 = getelementptr i64, i64* %710, i64 %727
  %729 = getelementptr i64, i64* %640, i64 %727
  %730 = load i64, i64* %728, align 8
  %731 = load i64, i64* %729, align 8
  %732 = icmp sgt i64 %730, %731
  br i1 %732, label %body2.i48.1, label %body3.i50.1

noelle_task_0_update_original_heap.exit51.loopexit.unr-lcssa: ; preds = %body3.i50.1
  %lcmp.mod277 = icmp eq i64 %xtraiter275, 0
  br i1 %lcmp.mod277, label %noelle_task_0_update_original_heap.exit51, label %body0.i47.epil

body0.i47.epil:                                   ; preds = %body0.i47.preheader, %noelle_task_0_update_original_heap.exit51.loopexit.unr-lcssa
  %.unr27649 = phi i64 [ %970, %noelle_task_0_update_original_heap.exit51.loopexit.unr-lcssa ], [ 0, %body0.i47.preheader ]
  %733 = getelementptr i64, i64* %710, i64 %.unr27649
  %734 = getelementptr i64, i64* %640, i64 %.unr27649
  %735 = load i64, i64* %733, align 8
  %736 = load i64, i64* %734, align 8
  %737 = icmp sgt i64 %735, %736
  br i1 %737, label %body2.i48.epil, label %noelle_task_0_update_original_heap.exit51

body2.i48.epil:                                   ; preds = %body0.i47.epil
  %738 = getelementptr double, double* %24, i64 %.unr27649
  %739 = getelementptr double, double* %713, i64 %.unr27649
  %740 = bitcast double* %739 to i64*
  %741 = load i64, i64* %740, align 8
  %742 = bitcast double* %738 to i64*
  store i64 %741, i64* %742, align 8
  store i64 %735, i64* %734, align 8
  br label %noelle_task_0_update_original_heap.exit51

noelle_task_0_update_original_heap.exit51:        ; preds = %noelle_task_0_update_original_heap.exit51.loopexit.unr-lcssa, %body0.i47.epil, %body2.i48.epil, %noelle_task_0_update_original_heap.exit21
  call void @free(i8* %712)
  %743 = getelementptr inbounds [8 x i64*], [8 x i64*]* %608, i64 0, i64 3
  %744 = load i64*, i64** %743, align 8
  %745 = getelementptr inbounds [8 x i8*], [8 x i8*]* %607, i64 0, i64 3
  %746 = load i8*, i8** %745, align 8
  %747 = bitcast i8* %746 to double*
  %748 = icmp eq i64 %617, 0
  br i1 %748, label %noelle_task_0_update_original_heap.exit46, label %body0.i42.preheader

body0.i42.preheader:                              ; preds = %noelle_task_0_update_original_heap.exit51
  %xtraiter280 = and i64 %617, 1
  %749 = icmp eq i64 %617, 1
  br i1 %749, label %body0.i42.epil, label %body0.i42.preheader.new

body0.i42.preheader.new:                          ; preds = %body0.i42.preheader
  %unroll_iter283 = sub nuw i64 %617, %xtraiter280
  br label %body0.i42

body0.i42:                                        ; preds = %body3.i45.1, %body0.i42.preheader.new
  %750 = phi i64 [ 0, %body0.i42.preheader.new ], [ %976, %body3.i45.1 ]
  %niter284 = phi i64 [ %unroll_iter283, %body0.i42.preheader.new ], [ %niter284.nsub.1, %body3.i45.1 ]
  %751 = getelementptr i64, i64* %744, i64 %750
  %752 = getelementptr i64, i64* %640, i64 %750
  %753 = load i64, i64* %751, align 8
  %754 = load i64, i64* %752, align 8
  %755 = icmp sgt i64 %753, %754
  br i1 %755, label %body2.i43, label %body3.i45

body2.i43:                                        ; preds = %body0.i42
  %756 = getelementptr double, double* %24, i64 %750
  %757 = getelementptr double, double* %747, i64 %750
  %758 = bitcast double* %757 to i64*
  %759 = load i64, i64* %758, align 8
  %760 = bitcast double* %756 to i64*
  store i64 %759, i64* %760, align 16
  store i64 %753, i64* %752, align 8
  br label %body3.i45

body3.i45:                                        ; preds = %body2.i43, %body0.i42
  %761 = or i64 %750, 1
  %762 = getelementptr i64, i64* %744, i64 %761
  %763 = getelementptr i64, i64* %640, i64 %761
  %764 = load i64, i64* %762, align 8
  %765 = load i64, i64* %763, align 8
  %766 = icmp sgt i64 %764, %765
  br i1 %766, label %body2.i43.1, label %body3.i45.1

noelle_task_0_update_original_heap.exit46.loopexit.unr-lcssa: ; preds = %body3.i45.1
  %lcmp.mod282 = icmp eq i64 %xtraiter280, 0
  br i1 %lcmp.mod282, label %noelle_task_0_update_original_heap.exit46, label %body0.i42.epil

body0.i42.epil:                                   ; preds = %body0.i42.preheader, %noelle_task_0_update_original_heap.exit46.loopexit.unr-lcssa
  %.unr28152 = phi i64 [ %976, %noelle_task_0_update_original_heap.exit46.loopexit.unr-lcssa ], [ 0, %body0.i42.preheader ]
  %767 = getelementptr i64, i64* %744, i64 %.unr28152
  %768 = getelementptr i64, i64* %640, i64 %.unr28152
  %769 = load i64, i64* %767, align 8
  %770 = load i64, i64* %768, align 8
  %771 = icmp sgt i64 %769, %770
  br i1 %771, label %body2.i43.epil, label %noelle_task_0_update_original_heap.exit46

body2.i43.epil:                                   ; preds = %body0.i42.epil
  %772 = getelementptr double, double* %24, i64 %.unr28152
  %773 = getelementptr double, double* %747, i64 %.unr28152
  %774 = bitcast double* %773 to i64*
  %775 = load i64, i64* %774, align 8
  %776 = bitcast double* %772 to i64*
  store i64 %775, i64* %776, align 8
  store i64 %769, i64* %768, align 8
  br label %noelle_task_0_update_original_heap.exit46

noelle_task_0_update_original_heap.exit46:        ; preds = %noelle_task_0_update_original_heap.exit46.loopexit.unr-lcssa, %body0.i42.epil, %body2.i43.epil, %noelle_task_0_update_original_heap.exit51
  call void @free(i8* %746)
  %777 = getelementptr inbounds [8 x i64*], [8 x i64*]* %608, i64 0, i64 4
  %778 = load i64*, i64** %777, align 8
  %779 = getelementptr inbounds [8 x i8*], [8 x i8*]* %607, i64 0, i64 4
  %780 = load i8*, i8** %779, align 8
  %781 = bitcast i8* %780 to double*
  %782 = icmp eq i64 %619, 0
  br i1 %782, label %noelle_task_0_update_original_heap.exit41, label %body0.i37.preheader

body0.i37.preheader:                              ; preds = %noelle_task_0_update_original_heap.exit46
  %xtraiter285 = and i64 %619, 1
  %783 = icmp eq i64 %619, 1
  br i1 %783, label %body0.i37.epil, label %body0.i37.preheader.new

body0.i37.preheader.new:                          ; preds = %body0.i37.preheader
  %unroll_iter288 = sub nuw i64 %619, %xtraiter285
  br label %body0.i37

body0.i37:                                        ; preds = %body3.i40.1, %body0.i37.preheader.new
  %784 = phi i64 [ 0, %body0.i37.preheader.new ], [ %982, %body3.i40.1 ]
  %niter289 = phi i64 [ %unroll_iter288, %body0.i37.preheader.new ], [ %niter289.nsub.1, %body3.i40.1 ]
  %785 = getelementptr i64, i64* %778, i64 %784
  %786 = getelementptr i64, i64* %640, i64 %784
  %787 = load i64, i64* %785, align 8
  %788 = load i64, i64* %786, align 8
  %789 = icmp sgt i64 %787, %788
  br i1 %789, label %body2.i38, label %body3.i40

body2.i38:                                        ; preds = %body0.i37
  %790 = getelementptr double, double* %24, i64 %784
  %791 = getelementptr double, double* %781, i64 %784
  %792 = bitcast double* %791 to i64*
  %793 = load i64, i64* %792, align 8
  %794 = bitcast double* %790 to i64*
  store i64 %793, i64* %794, align 16
  store i64 %787, i64* %786, align 8
  br label %body3.i40

body3.i40:                                        ; preds = %body2.i38, %body0.i37
  %795 = or i64 %784, 1
  %796 = getelementptr i64, i64* %778, i64 %795
  %797 = getelementptr i64, i64* %640, i64 %795
  %798 = load i64, i64* %796, align 8
  %799 = load i64, i64* %797, align 8
  %800 = icmp sgt i64 %798, %799
  br i1 %800, label %body2.i38.1, label %body3.i40.1

noelle_task_0_update_original_heap.exit41.loopexit.unr-lcssa: ; preds = %body3.i40.1
  %lcmp.mod287 = icmp eq i64 %xtraiter285, 0
  br i1 %lcmp.mod287, label %noelle_task_0_update_original_heap.exit41, label %body0.i37.epil

body0.i37.epil:                                   ; preds = %body0.i37.preheader, %noelle_task_0_update_original_heap.exit41.loopexit.unr-lcssa
  %.unr28655 = phi i64 [ %982, %noelle_task_0_update_original_heap.exit41.loopexit.unr-lcssa ], [ 0, %body0.i37.preheader ]
  %801 = getelementptr i64, i64* %778, i64 %.unr28655
  %802 = getelementptr i64, i64* %640, i64 %.unr28655
  %803 = load i64, i64* %801, align 8
  %804 = load i64, i64* %802, align 8
  %805 = icmp sgt i64 %803, %804
  br i1 %805, label %body2.i38.epil, label %noelle_task_0_update_original_heap.exit41

body2.i38.epil:                                   ; preds = %body0.i37.epil
  %806 = getelementptr double, double* %24, i64 %.unr28655
  %807 = getelementptr double, double* %781, i64 %.unr28655
  %808 = bitcast double* %807 to i64*
  %809 = load i64, i64* %808, align 8
  %810 = bitcast double* %806 to i64*
  store i64 %809, i64* %810, align 8
  store i64 %803, i64* %802, align 8
  br label %noelle_task_0_update_original_heap.exit41

noelle_task_0_update_original_heap.exit41:        ; preds = %noelle_task_0_update_original_heap.exit41.loopexit.unr-lcssa, %body0.i37.epil, %body2.i38.epil, %noelle_task_0_update_original_heap.exit46
  call void @free(i8* %780)
  %811 = getelementptr inbounds [8 x i64*], [8 x i64*]* %608, i64 0, i64 5
  %812 = load i64*, i64** %811, align 8
  %813 = getelementptr inbounds [8 x i8*], [8 x i8*]* %607, i64 0, i64 5
  %814 = load i8*, i8** %813, align 8
  %815 = bitcast i8* %814 to double*
  %816 = icmp eq i64 %621, 0
  br i1 %816, label %noelle_task_0_update_original_heap.exit36, label %body0.i32.preheader

body0.i32.preheader:                              ; preds = %noelle_task_0_update_original_heap.exit41
  %xtraiter290 = and i64 %621, 1
  %817 = icmp eq i64 %621, 1
  br i1 %817, label %body0.i32.epil, label %body0.i32.preheader.new

body0.i32.preheader.new:                          ; preds = %body0.i32.preheader
  %unroll_iter293 = sub nuw i64 %621, %xtraiter290
  br label %body0.i32

body0.i32:                                        ; preds = %body3.i35.1, %body0.i32.preheader.new
  %818 = phi i64 [ 0, %body0.i32.preheader.new ], [ %988, %body3.i35.1 ]
  %niter294 = phi i64 [ %unroll_iter293, %body0.i32.preheader.new ], [ %niter294.nsub.1, %body3.i35.1 ]
  %819 = getelementptr i64, i64* %812, i64 %818
  %820 = getelementptr i64, i64* %640, i64 %818
  %821 = load i64, i64* %819, align 8
  %822 = load i64, i64* %820, align 8
  %823 = icmp sgt i64 %821, %822
  br i1 %823, label %body2.i33, label %body3.i35

body2.i33:                                        ; preds = %body0.i32
  %824 = getelementptr double, double* %24, i64 %818
  %825 = getelementptr double, double* %815, i64 %818
  %826 = bitcast double* %825 to i64*
  %827 = load i64, i64* %826, align 8
  %828 = bitcast double* %824 to i64*
  store i64 %827, i64* %828, align 16
  store i64 %821, i64* %820, align 8
  br label %body3.i35

body3.i35:                                        ; preds = %body2.i33, %body0.i32
  %829 = or i64 %818, 1
  %830 = getelementptr i64, i64* %812, i64 %829
  %831 = getelementptr i64, i64* %640, i64 %829
  %832 = load i64, i64* %830, align 8
  %833 = load i64, i64* %831, align 8
  %834 = icmp sgt i64 %832, %833
  br i1 %834, label %body2.i33.1, label %body3.i35.1

noelle_task_0_update_original_heap.exit36.loopexit.unr-lcssa: ; preds = %body3.i35.1
  %lcmp.mod292 = icmp eq i64 %xtraiter290, 0
  br i1 %lcmp.mod292, label %noelle_task_0_update_original_heap.exit36, label %body0.i32.epil

body0.i32.epil:                                   ; preds = %body0.i32.preheader, %noelle_task_0_update_original_heap.exit36.loopexit.unr-lcssa
  %.unr29158 = phi i64 [ %988, %noelle_task_0_update_original_heap.exit36.loopexit.unr-lcssa ], [ 0, %body0.i32.preheader ]
  %835 = getelementptr i64, i64* %812, i64 %.unr29158
  %836 = getelementptr i64, i64* %640, i64 %.unr29158
  %837 = load i64, i64* %835, align 8
  %838 = load i64, i64* %836, align 8
  %839 = icmp sgt i64 %837, %838
  br i1 %839, label %body2.i33.epil, label %noelle_task_0_update_original_heap.exit36

body2.i33.epil:                                   ; preds = %body0.i32.epil
  %840 = getelementptr double, double* %24, i64 %.unr29158
  %841 = getelementptr double, double* %815, i64 %.unr29158
  %842 = bitcast double* %841 to i64*
  %843 = load i64, i64* %842, align 8
  %844 = bitcast double* %840 to i64*
  store i64 %843, i64* %844, align 8
  store i64 %837, i64* %836, align 8
  br label %noelle_task_0_update_original_heap.exit36

noelle_task_0_update_original_heap.exit36:        ; preds = %noelle_task_0_update_original_heap.exit36.loopexit.unr-lcssa, %body0.i32.epil, %body2.i33.epil, %noelle_task_0_update_original_heap.exit41
  call void @free(i8* %814)
  %845 = getelementptr inbounds [8 x i64*], [8 x i64*]* %608, i64 0, i64 6
  %846 = load i64*, i64** %845, align 8
  %847 = getelementptr inbounds [8 x i8*], [8 x i8*]* %607, i64 0, i64 6
  %848 = load i8*, i8** %847, align 8
  %849 = bitcast i8* %848 to double*
  %850 = icmp eq i64 %623, 0
  br i1 %850, label %noelle_task_0_update_original_heap.exit31, label %body0.i27.preheader

body0.i27.preheader:                              ; preds = %noelle_task_0_update_original_heap.exit36
  %xtraiter295 = and i64 %623, 1
  %851 = icmp eq i64 %623, 1
  br i1 %851, label %body0.i27.epil, label %body0.i27.preheader.new

body0.i27.preheader.new:                          ; preds = %body0.i27.preheader
  %unroll_iter298 = sub nuw i64 %623, %xtraiter295
  br label %body0.i27

body0.i27:                                        ; preds = %body3.i30.1, %body0.i27.preheader.new
  %852 = phi i64 [ 0, %body0.i27.preheader.new ], [ %994, %body3.i30.1 ]
  %niter299 = phi i64 [ %unroll_iter298, %body0.i27.preheader.new ], [ %niter299.nsub.1, %body3.i30.1 ]
  %853 = getelementptr i64, i64* %846, i64 %852
  %854 = getelementptr i64, i64* %640, i64 %852
  %855 = load i64, i64* %853, align 8
  %856 = load i64, i64* %854, align 8
  %857 = icmp sgt i64 %855, %856
  br i1 %857, label %body2.i28, label %body3.i30

body2.i28:                                        ; preds = %body0.i27
  %858 = getelementptr double, double* %24, i64 %852
  %859 = getelementptr double, double* %849, i64 %852
  %860 = bitcast double* %859 to i64*
  %861 = load i64, i64* %860, align 8
  %862 = bitcast double* %858 to i64*
  store i64 %861, i64* %862, align 16
  store i64 %855, i64* %854, align 8
  br label %body3.i30

body3.i30:                                        ; preds = %body2.i28, %body0.i27
  %863 = or i64 %852, 1
  %864 = getelementptr i64, i64* %846, i64 %863
  %865 = getelementptr i64, i64* %640, i64 %863
  %866 = load i64, i64* %864, align 8
  %867 = load i64, i64* %865, align 8
  %868 = icmp sgt i64 %866, %867
  br i1 %868, label %body2.i28.1, label %body3.i30.1

noelle_task_0_update_original_heap.exit31.loopexit.unr-lcssa: ; preds = %body3.i30.1
  %lcmp.mod297 = icmp eq i64 %xtraiter295, 0
  br i1 %lcmp.mod297, label %noelle_task_0_update_original_heap.exit31, label %body0.i27.epil

body0.i27.epil:                                   ; preds = %body0.i27.preheader, %noelle_task_0_update_original_heap.exit31.loopexit.unr-lcssa
  %.unr29661 = phi i64 [ %994, %noelle_task_0_update_original_heap.exit31.loopexit.unr-lcssa ], [ 0, %body0.i27.preheader ]
  %869 = getelementptr i64, i64* %846, i64 %.unr29661
  %870 = getelementptr i64, i64* %640, i64 %.unr29661
  %871 = load i64, i64* %869, align 8
  %872 = load i64, i64* %870, align 8
  %873 = icmp sgt i64 %871, %872
  br i1 %873, label %body2.i28.epil, label %noelle_task_0_update_original_heap.exit31

body2.i28.epil:                                   ; preds = %body0.i27.epil
  %874 = getelementptr double, double* %24, i64 %.unr29661
  %875 = getelementptr double, double* %849, i64 %.unr29661
  %876 = bitcast double* %875 to i64*
  %877 = load i64, i64* %876, align 8
  %878 = bitcast double* %874 to i64*
  store i64 %877, i64* %878, align 8
  store i64 %871, i64* %870, align 8
  br label %noelle_task_0_update_original_heap.exit31

noelle_task_0_update_original_heap.exit31:        ; preds = %noelle_task_0_update_original_heap.exit31.loopexit.unr-lcssa, %body0.i27.epil, %body2.i28.epil, %noelle_task_0_update_original_heap.exit36
  call void @free(i8* %848)
  %879 = getelementptr inbounds [8 x i64*], [8 x i64*]* %608, i64 0, i64 7
  %880 = load i64*, i64** %879, align 8
  %881 = getelementptr inbounds [8 x i8*], [8 x i8*]* %607, i64 0, i64 7
  %882 = load i8*, i8** %881, align 8
  %883 = bitcast i8* %882 to double*
  %884 = icmp eq i64 %625, 0
  br i1 %884, label %noelle_task_0_update_original_heap.exit26, label %body0.i22.preheader

body0.i22.preheader:                              ; preds = %noelle_task_0_update_original_heap.exit31
  %xtraiter300 = and i64 %625, 1
  %885 = icmp eq i64 %625, 1
  br i1 %885, label %body0.i22.epil, label %body0.i22.preheader.new

body0.i22.preheader.new:                          ; preds = %body0.i22.preheader
  %unroll_iter303 = sub nuw i64 %625, %xtraiter300
  br label %body0.i22

body0.i22:                                        ; preds = %body3.i25.1, %body0.i22.preheader.new
  %886 = phi i64 [ 0, %body0.i22.preheader.new ], [ %1000, %body3.i25.1 ]
  %niter304 = phi i64 [ %unroll_iter303, %body0.i22.preheader.new ], [ %niter304.nsub.1, %body3.i25.1 ]
  %887 = getelementptr i64, i64* %880, i64 %886
  %888 = getelementptr i64, i64* %640, i64 %886
  %889 = load i64, i64* %887, align 8
  %890 = load i64, i64* %888, align 8
  %891 = icmp sgt i64 %889, %890
  br i1 %891, label %body2.i23, label %body3.i25

body2.i23:                                        ; preds = %body0.i22
  %892 = getelementptr double, double* %24, i64 %886
  %893 = getelementptr double, double* %883, i64 %886
  %894 = bitcast double* %893 to i64*
  %895 = load i64, i64* %894, align 8
  %896 = bitcast double* %892 to i64*
  store i64 %895, i64* %896, align 16
  store i64 %889, i64* %888, align 8
  br label %body3.i25

body3.i25:                                        ; preds = %body2.i23, %body0.i22
  %897 = or i64 %886, 1
  %898 = getelementptr i64, i64* %880, i64 %897
  %899 = getelementptr i64, i64* %640, i64 %897
  %900 = load i64, i64* %898, align 8
  %901 = load i64, i64* %899, align 8
  %902 = icmp sgt i64 %900, %901
  br i1 %902, label %body2.i23.1, label %body3.i25.1

noelle_task_0_update_original_heap.exit26.loopexit.unr-lcssa: ; preds = %body3.i25.1
  %lcmp.mod302 = icmp eq i64 %xtraiter300, 0
  br i1 %lcmp.mod302, label %noelle_task_0_update_original_heap.exit26, label %body0.i22.epil

body0.i22.epil:                                   ; preds = %body0.i22.preheader, %noelle_task_0_update_original_heap.exit26.loopexit.unr-lcssa
  %.unr30164 = phi i64 [ %1000, %noelle_task_0_update_original_heap.exit26.loopexit.unr-lcssa ], [ 0, %body0.i22.preheader ]
  %903 = getelementptr i64, i64* %880, i64 %.unr30164
  %904 = getelementptr i64, i64* %640, i64 %.unr30164
  %905 = load i64, i64* %903, align 8
  %906 = load i64, i64* %904, align 8
  %907 = icmp sgt i64 %905, %906
  br i1 %907, label %body2.i23.epil, label %noelle_task_0_update_original_heap.exit26

body2.i23.epil:                                   ; preds = %body0.i22.epil
  %908 = getelementptr double, double* %24, i64 %.unr30164
  %909 = getelementptr double, double* %883, i64 %.unr30164
  %910 = bitcast double* %909 to i64*
  %911 = load i64, i64* %910, align 8
  %912 = bitcast double* %908 to i64*
  store i64 %911, i64* %912, align 8
  store i64 %905, i64* %904, align 8
  br label %noelle_task_0_update_original_heap.exit26

noelle_task_0_update_original_heap.exit26:        ; preds = %noelle_task_0_update_original_heap.exit26.loopexit.unr-lcssa, %body0.i22.epil, %body2.i23.epil, %noelle_task_0_update_original_heap.exit31
  call void @free(i8* %882)
  br label %.us-lcssa.us.loopexit.i.i.i

.preheader.i2.i6.1:                               ; preds = %ilog2.exit.i9, %.preheader.i2.i6.1
  %.01.i.i589.1 = phi i32 [ %913, %.preheader.i2.i6.1 ], [ 2, %ilog2.exit.i9 ]
  %.02.i.i488.1 = phi i32 [ %914, %.preheader.i2.i6.1 ], [ 1, %ilog2.exit.i9 ]
  %913 = shl i32 %.01.i.i589.1, 1
  %914 = add nuw nsw i32 %.02.i.i488.1, 1
  %915 = icmp slt i32 %913, %206
  br i1 %915, label %.preheader.i2.i6.1, label %ilog2.exit.i9.1

ilog2.exit.i9.1:                                  ; preds = %.preheader.i2.i6.1, %ilog2.exit.i9
  %916 = phi i32 [ 1, %ilog2.exit.i9 ], [ %914, %.preheader.i2.i6.1 ]
  %.b233 = load i1, i1* @dims.1.2, align 8
  %917 = select i1 %.b233, i32 256, i32 0
  br i1 %.b233, label %.preheader.i2.i6.2, label %ilog2.exit.i9.2

.preheader.i2.i6.2:                               ; preds = %ilog2.exit.i9.1, %.preheader.i2.i6.2
  %.01.i.i589.2 = phi i32 [ %918, %.preheader.i2.i6.2 ], [ 2, %ilog2.exit.i9.1 ]
  %918 = shl i32 %.01.i.i589.2, 1
  %919 = icmp slt i32 %918, %917
  br i1 %919, label %.preheader.i2.i6.2, label %ilog2.exit.i9.2

ilog2.exit.i9.2:                                  ; preds = %.preheader.i2.i6.2, %ilog2.exit.i9.1
  %920 = bitcast [512 x [18 x %struct.dcomplex]]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 147456, i8* nonnull %920) #10
  %921 = bitcast [512 x [18 x %struct.dcomplex]]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 147456, i8* nonnull %921) #10
  %922 = zext i32 %917 to i64
  %923 = sub nsw i32 %203, %.pre.i
  %924 = zext i32 %206 to i64
  %925 = icmp sgt i32 %916, %948
  %926 = lshr exact i32 %206, 1
  %927 = zext i32 %926 to i64
  %928 = sext i32 %923 to i64
  br i1 %.b233, label %.preheader4.preheader.lr.ph, label %cffts2.exit, !noelle.parallelizer.looporder !47

.preheader.i1.1:                                  ; preds = %ilog2.exit, %.preheader.i1.1
  %.01.i139.1 = phi i32 [ %929, %.preheader.i1.1 ], [ 2, %ilog2.exit ]
  %929 = shl i32 %.01.i139.1, 1
  %930 = icmp slt i32 %929, %19
  br i1 %930, label %.preheader.i1.1, label %ilog2.exit.1

ilog2.exit.1:                                     ; preds = %.preheader.i1.1, %ilog2.exit
  %.b230 = load i1, i1* @dims.0.2, align 8
  %931 = select i1 %.b230, i32 256, i32 0
  br i1 %.b230, label %.preheader.i1.2, label %ilog2.exit.2

.preheader.i1.2:                                  ; preds = %ilog2.exit.1, %.preheader.i1.2
  %.01.i139.2 = phi i32 [ %932, %.preheader.i1.2 ], [ 2, %ilog2.exit.1 ]
  %932 = shl i32 %.01.i139.2, 1
  %933 = icmp slt i32 %932, %931
  br i1 %933, label %.preheader.i1.2, label %ilog2.exit.2

ilog2.exit.2:                                     ; preds = %.preheader.i1.2, %ilog2.exit.1
  %934 = bitcast [80 x i64]* %noelle.loop_environment to [512 x [18 x %struct.dcomplex]]**
  %935 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.loop_environment, i64 0, i64 16
  %936 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.loop_environment, i64 0, i64 32
  %937 = getelementptr inbounds [80 x i64], [80 x i64]* %noelle.loop_environment, i64 0, i64 48
  %938 = bitcast i64* %7 to i8***
  %939 = bitcast i64* %8 to i64***
  %940 = bitcast i64* %9 to i64**
  %941 = bitcast [512 x [18 x %struct.dcomplex]]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 147456, i8* nonnull %941) #10
  %942 = bitcast [512 x [18 x %struct.dcomplex]]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 147456, i8* nonnull %942) #10
  %943 = zext i32 %931 to i64
  %.pre.i = load i32, i32* @fftblock, align 4
  %944 = sub nsw i32 %19, %.pre.i
  %945 = zext i32 %14 to i64
  %946 = sext i32 %.pre.i to i64
  %947 = load double, double* getelementptr inbounds ([512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 0, i32 0), align 16
  %948 = fptosi double %947 to i32
  %949 = icmp sgt i32 %18, %948
  %950 = lshr exact i32 %14, 1
  %951 = zext i32 %950 to i64
  %952 = sext i32 %944 to i64
  br i1 %.b230, label %.preheader6.preheader.lr.ph, label %cffts1.exit, !noelle.parallelizer.looporder !24

body2.i.1:                                        ; preds = %body3.i
  %953 = getelementptr double, double* %24, i64 %659
  %954 = getelementptr double, double* %645, i64 %659
  %955 = bitcast double* %954 to i64*
  %956 = load i64, i64* %955, align 8
  %957 = bitcast double* %953 to i64*
  store i64 %956, i64* %957, align 8
  store i64 %662, i64* %661, align 8
  br label %body3.i.1

body3.i.1:                                        ; preds = %body2.i.1, %body3.i
  %958 = add nuw i64 %648, 2
  %niter269.nsub.1 = add i64 %niter269, -2
  %niter269.ncmp.1 = icmp eq i64 %niter269.nsub.1, 0
  br i1 %niter269.ncmp.1, label %noelle_task_0_update_original_heap.exit.loopexit.unr-lcssa, label %body0.i

body2.i18.1:                                      ; preds = %body3.i20
  %959 = getelementptr double, double* %24, i64 %693
  %960 = getelementptr double, double* %679, i64 %693
  %961 = bitcast double* %960 to i64*
  %962 = load i64, i64* %961, align 8
  %963 = bitcast double* %959 to i64*
  store i64 %962, i64* %963, align 8
  store i64 %696, i64* %695, align 8
  br label %body3.i20.1

body3.i20.1:                                      ; preds = %body2.i18.1, %body3.i20
  %964 = add nuw i64 %682, 2
  %niter274.nsub.1 = add i64 %niter274, -2
  %niter274.ncmp.1 = icmp eq i64 %niter274.nsub.1, 0
  br i1 %niter274.ncmp.1, label %noelle_task_0_update_original_heap.exit21.loopexit.unr-lcssa, label %body0.i17

body2.i48.1:                                      ; preds = %body3.i50
  %965 = getelementptr double, double* %24, i64 %727
  %966 = getelementptr double, double* %713, i64 %727
  %967 = bitcast double* %966 to i64*
  %968 = load i64, i64* %967, align 8
  %969 = bitcast double* %965 to i64*
  store i64 %968, i64* %969, align 8
  store i64 %730, i64* %729, align 8
  br label %body3.i50.1

body3.i50.1:                                      ; preds = %body2.i48.1, %body3.i50
  %970 = add nuw i64 %716, 2
  %niter279.nsub.1 = add i64 %niter279, -2
  %niter279.ncmp.1 = icmp eq i64 %niter279.nsub.1, 0
  br i1 %niter279.ncmp.1, label %noelle_task_0_update_original_heap.exit51.loopexit.unr-lcssa, label %body0.i47

body2.i43.1:                                      ; preds = %body3.i45
  %971 = getelementptr double, double* %24, i64 %761
  %972 = getelementptr double, double* %747, i64 %761
  %973 = bitcast double* %972 to i64*
  %974 = load i64, i64* %973, align 8
  %975 = bitcast double* %971 to i64*
  store i64 %974, i64* %975, align 8
  store i64 %764, i64* %763, align 8
  br label %body3.i45.1

body3.i45.1:                                      ; preds = %body2.i43.1, %body3.i45
  %976 = add nuw i64 %750, 2
  %niter284.nsub.1 = add i64 %niter284, -2
  %niter284.ncmp.1 = icmp eq i64 %niter284.nsub.1, 0
  br i1 %niter284.ncmp.1, label %noelle_task_0_update_original_heap.exit46.loopexit.unr-lcssa, label %body0.i42

body2.i38.1:                                      ; preds = %body3.i40
  %977 = getelementptr double, double* %24, i64 %795
  %978 = getelementptr double, double* %781, i64 %795
  %979 = bitcast double* %978 to i64*
  %980 = load i64, i64* %979, align 8
  %981 = bitcast double* %977 to i64*
  store i64 %980, i64* %981, align 8
  store i64 %798, i64* %797, align 8
  br label %body3.i40.1

body3.i40.1:                                      ; preds = %body2.i38.1, %body3.i40
  %982 = add nuw i64 %784, 2
  %niter289.nsub.1 = add i64 %niter289, -2
  %niter289.ncmp.1 = icmp eq i64 %niter289.nsub.1, 0
  br i1 %niter289.ncmp.1, label %noelle_task_0_update_original_heap.exit41.loopexit.unr-lcssa, label %body0.i37

body2.i33.1:                                      ; preds = %body3.i35
  %983 = getelementptr double, double* %24, i64 %829
  %984 = getelementptr double, double* %815, i64 %829
  %985 = bitcast double* %984 to i64*
  %986 = load i64, i64* %985, align 8
  %987 = bitcast double* %983 to i64*
  store i64 %986, i64* %987, align 8
  store i64 %832, i64* %831, align 8
  br label %body3.i35.1

body3.i35.1:                                      ; preds = %body2.i33.1, %body3.i35
  %988 = add nuw i64 %818, 2
  %niter294.nsub.1 = add i64 %niter294, -2
  %niter294.ncmp.1 = icmp eq i64 %niter294.nsub.1, 0
  br i1 %niter294.ncmp.1, label %noelle_task_0_update_original_heap.exit36.loopexit.unr-lcssa, label %body0.i32

body2.i28.1:                                      ; preds = %body3.i30
  %989 = getelementptr double, double* %24, i64 %863
  %990 = getelementptr double, double* %849, i64 %863
  %991 = bitcast double* %990 to i64*
  %992 = load i64, i64* %991, align 8
  %993 = bitcast double* %989 to i64*
  store i64 %992, i64* %993, align 8
  store i64 %866, i64* %865, align 8
  br label %body3.i30.1

body3.i30.1:                                      ; preds = %body2.i28.1, %body3.i30
  %994 = add nuw i64 %852, 2
  %niter299.nsub.1 = add i64 %niter299, -2
  %niter299.ncmp.1 = icmp eq i64 %niter299.nsub.1, 0
  br i1 %niter299.ncmp.1, label %noelle_task_0_update_original_heap.exit31.loopexit.unr-lcssa, label %body0.i27

body2.i23.1:                                      ; preds = %body3.i25
  %995 = getelementptr double, double* %24, i64 %897
  %996 = getelementptr double, double* %883, i64 %897
  %997 = bitcast double* %996 to i64*
  %998 = load i64, i64* %997, align 8
  %999 = bitcast double* %995 to i64*
  store i64 %998, i64* %999, align 8
  store i64 %900, i64* %899, align 8
  br label %body3.i25.1

body3.i25.1:                                      ; preds = %body2.i23.1, %body3.i25
  %1000 = add nuw i64 %886, 2
  %niter304.nsub.1 = add i64 %niter304, -2
  %niter304.ncmp.1 = icmp eq i64 %niter304.nsub.1, 0
  br i1 %niter304.ncmp.1, label %noelle_task_0_update_original_heap.exit26.loopexit.unr-lcssa, label %body0.i22

.preheader1.us.i.epil.us.1:                       ; preds = %.preheader1._crit_edge.us.i.us
  %1001 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv.next8.us.i.us, i64 %indvars.iv1332.i, i64 %409
  %1002 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv.next8.us.i.us, i64 0
  %1003 = bitcast %struct.dcomplex* %1001 to <2 x i64>*
  %1004 = load <2 x i64>, <2 x i64>* %1003, align 16, !tbaa !8
  %1005 = bitcast %struct.dcomplex* %1002 to <2 x i64>*
  store <2 x i64> %1004, <2 x i64>* %1005, align 16, !tbaa !8
  br label %.preheader1._crit_edge.us.i.us.1

.preheader1._crit_edge.us.i.us.1:                 ; preds = %.preheader1.us.i.epil.us.1, %.preheader1._crit_edge.us.i.us
  %indvars.iv.next8.us.i.us.1 = add nuw nsw i64 %indvars.iv72.us.i.us, 2
  %exitcond48.i.us.1 = icmp eq i64 %indvars.iv.next8.us.i.us.1, %597
  br i1 %exitcond48.i.us.1, label %LeafBlock7._crit_edge.i.i, label %.preheader1.preheader.us.i.us

.preheader1.i.us.i.epil.us.preheader.1:           ; preds = %.preheader1.i._crit_edge.us.i.us
  %scevgep112.1 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %1, i64 0, i64 %indvars.iv.next6.i.us.i.us, i64 0
  %scevgep112113.1 = bitcast %struct.dcomplex* %scevgep112.1 to i8*
  %scevgep110.1 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv.next6.i.us.i.us, i64 0
  %scevgep110111.1 = bitcast %struct.dcomplex* %scevgep110.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep110111.1, i8* align 16 %scevgep112113.1, i64 %407, i1 false)
  br label %.preheader1.i._crit_edge.us.i.us.1

.preheader1.i._crit_edge.us.i.us.1:               ; preds = %.preheader1.i.us.i.epil.us.preheader.1, %.preheader1.i._crit_edge.us.i.us
  %indvars.iv.next6.i.us.i.us.1 = add nuw nsw i64 %indvars.iv5.i24.us.i.us, 2
  %exitcond59.i.us.1 = icmp eq i64 %indvars.iv.next6.i.us.i.us.1, %597
  br i1 %exitcond59.i.us.1, label %cfftz.exit.i10, label %.preheader1.i.preheader.us.i.us

.preheader.us.i.epil.us.preheader.1:              ; preds = %.preheader._crit_edge.us.i.us
  %scevgep122.1 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %0, i64 0, i64 %indvars.iv.next12.us.i.us, i64 0
  %scevgep122123.1 = bitcast %struct.dcomplex* %scevgep122.1 to i8*
  %scevgep120.1 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %indvars.iv.next12.us.i.us, i64 %indvars.iv1332.i, i64 %408
  %scevgep120121.1 = bitcast %struct.dcomplex* %scevgep120.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep120121.1, i8* align 16 %scevgep122123.1, i64 %407, i1 false)
  br label %.preheader._crit_edge.us.i.us.1

.preheader._crit_edge.us.i.us.1:                  ; preds = %.preheader.us.i.epil.us.preheader.1, %.preheader._crit_edge.us.i.us
  %indvars.iv.next12.us.i.us.1 = add nuw nsw i64 %indvars.iv1127.us.i.us, 2
  %exitcond62.i.us.1 = icmp eq i64 %indvars.iv.next12.us.i.us.1, %597
  br i1 %exitcond62.i.us.1, label %.preheader4.i, label %.preheader.preheader.us.i.us

.preheader1.i.us.epil.us.1:                       ; preds = %.preheader1.i._crit_edge.us.us
  %1006 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv.next8.i.us.us, i64 %216
  %1007 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv.next8.i.us.us, i64 0
  %1008 = bitcast %struct.dcomplex* %1006 to <2 x i64>*
  %1009 = load <2 x i64>, <2 x i64>* %1008, align 16, !tbaa !8
  %1010 = bitcast %struct.dcomplex* %1007 to <2 x i64>*
  store <2 x i64> %1009, <2 x i64>* %1010, align 16, !tbaa !8
  br label %.preheader1.i._crit_edge.us.us.1

.preheader1.i._crit_edge.us.us.1:                 ; preds = %.preheader1.i.us.epil.us.1, %.preheader1.i._crit_edge.us.us
  %indvars.iv.next8.i.us.us.1 = add nuw nsw i64 %indvars.iv7.i53.us.us, 2
  %exitcond163.us.1 = icmp eq i64 %indvars.iv.next8.i.us.us.1, %924
  br i1 %exitcond163.us.1, label %.preheader3._crit_edge, label %.preheader1.i.preheader.us.us

.preheader1.i.i35.us.epil.us.preheader.1:         ; preds = %.preheader1.i.i35._crit_edge.us.us
  %scevgep132.1 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %11, i64 0, i64 %indvars.iv.next6.i.i38.us.us, i64 0
  %scevgep132133.1 = bitcast %struct.dcomplex* %scevgep132.1 to i8*
  %scevgep130.1 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv.next6.i.i38.us.us, i64 0
  %scevgep130131.1 = bitcast %struct.dcomplex* %scevgep130.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep130131.1, i8* align 16 %scevgep132133.1, i64 %214, i1 false)
  br label %.preheader1.i.i35._crit_edge.us.us.1

.preheader1.i.i35._crit_edge.us.us.1:             ; preds = %.preheader1.i.i35.us.epil.us.preheader.1, %.preheader1.i.i35._crit_edge.us.us
  %indvars.iv.next6.i.i38.us.us.1 = add nuw nsw i64 %indvars.iv5.i.i3478.us.us, 2
  %exitcond174.us.1 = icmp eq i64 %indvars.iv.next6.i.i38.us.us.1, %924
  br i1 %exitcond174.us.1, label %cfftz.exit.i40, label %.preheader1.i.i35.preheader.us.us

.preheader.i41.us.epil.us.preheader.1:            ; preds = %.preheader.i41._crit_edge.us.us
  %scevgep144.1 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %10, i64 0, i64 %indvars.iv.next12.i.us.us, i64 0
  %scevgep144145.1 = bitcast %struct.dcomplex* %scevgep144.1 to i8*
  %scevgep142.1 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %indvars.iv13.i86, i64 %indvars.iv.next12.i.us.us, i64 %215
  %scevgep142143.1 = bitcast %struct.dcomplex* %scevgep142.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep142143.1, i8* align 16 %scevgep144145.1, i64 %214, i1 false)
  br label %.preheader.i41._crit_edge.us.us.1

.preheader.i41._crit_edge.us.us.1:                ; preds = %.preheader.i41.us.epil.us.preheader.1, %.preheader.i41._crit_edge.us.us
  %indvars.iv.next12.i.us.us.1 = add nuw nsw i64 %indvars.iv11.i81.us.us, 2
  %exitcond177.us.1 = icmp eq i64 %indvars.iv.next12.i.us.us.1, %924
  br i1 %exitcond177.us.1, label %.preheader4, label %.preheader.i41.preheader.us.us

.preheader1.i.i.us.epil.us.preheader.1:           ; preds = %.preheader1.i.i._crit_edge.us.us
  %scevgep154.1 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %13, i64 0, i64 %indvars.iv.next6.i.i.us.us, i64 0
  %scevgep154155.1 = bitcast %struct.dcomplex* %scevgep154.1 to i8*
  %scevgep152.1 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %12, i64 0, i64 %indvars.iv.next6.i.i.us.us, i64 0
  %scevgep152153.1 = bitcast %struct.dcomplex* %scevgep152.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep152153.1, i8* align 16 %scevgep154155.1, i64 %27, i1 false)
  br label %.preheader1.i.i._crit_edge.us.us.1

.preheader1.i.i._crit_edge.us.us.1:               ; preds = %.preheader1.i.i.us.epil.us.preheader.1, %.preheader1.i.i._crit_edge.us.us
  %indvars.iv.next6.i.i.us.us.1 = add nuw nsw i64 %indvars.iv5.i.i124.us.us, 2
  %exitcond192.us.1 = icmp eq i64 %indvars.iv.next6.i.i.us.us.1, %945
  br i1 %exitcond192.us.1, label %cfftz.exit.i, label %.preheader1.i.i.preheader.us.us
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: cold nounwind uwtable
define dso_local void @wtime_(double* nocapture) local_unnamed_addr #0 {
  %2 = alloca %struct.timeval, align 8
  %3 = bitcast %struct.timeval* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #10
  %4 = call i32 @gettimeofday(%struct.timeval* nonnull %2, %struct.timezone* null) #10
  %5 = load i32, i32* @wtime_.sec, align 4, !tbaa !2
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 0
  %8 = load i64, i64* %7, align 8, !tbaa !50
  br i1 %6, label %9, label %._crit_edge

9:                                                ; preds = %1
  %10 = trunc i64 %8 to i32
  store i32 %10, i32* @wtime_.sec, align 4, !tbaa !2
  br label %._crit_edge

._crit_edge:                                      ; preds = %1, %9
  %11 = phi i32 [ %10, %9 ], [ %5, %1 ]
  %12 = sext i32 %11 to i64
  %13 = sub nsw i64 %8, %12
  %14 = sitofp i64 %13 to double
  %15 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 1
  %16 = load i64, i64* %15, align 8, !tbaa !53
  %17 = sitofp i64 %16 to double
  %18 = fmul double %17, 0x3EB0C6F7A0B5ED8D
  %19 = fadd double %18, %14
  store double %19, double* %0, align 8, !tbaa !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind
define void @noelle_task_7(i8* nocapture readonly, i64, i64, i64) #5 {
  %5 = bitcast i8* %0 to i64*
  %6 = getelementptr inbounds i8, i8* %0, i64 64
  %7 = bitcast i8* %6 to i64*
  %noelle_environment_variable_1 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 128
  %9 = bitcast i8* %8 to i64*
  %noelle_environment_variable_2 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 192
  %11 = bitcast i8* %10 to i32*
  %noelle_environment_variable_3 = load i32, i32* %11, align 4
  %coreIdx_X_chunkSize = mul i64 %3, %1
  %numCoresMinus1 = add i64 %2, -1
  %numCoresMinus1_X_chunkSize = mul i64 %numCoresMinus1, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp slt i64 %coreIdx_X_chunkSize, %12
  br i1 %13, label %.preheader1.lr.ph, label %._crit_edge3, !noelle.parallelizer.looporder !21

.preheader1.lr.ph:                                ; preds = %4
  %14 = icmp sgt i64 %noelle_environment_variable_1, 0
  %15 = icmp sgt i64 %noelle_environment_variable_2, 0
  br i1 %14, label %.preheader1.us.preheader, label %.preheader1

.preheader1.us.preheader:                         ; preds = %.preheader1.lr.ph
  %xtraiter = and i64 %noelle_environment_variable_2, 1
  %16 = icmp eq i64 %noelle_environment_variable_2, 1
  %unroll_iter = sub i64 %noelle_environment_variable_2, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %.preheader1.us

.preheader1.us:                                   ; preds = %.preheader1.us.preheader, %._crit_edge2.us
  %17 = phi i64 [ %chunkWrap.us, %._crit_edge2.us ], [ 0, %.preheader1.us.preheader ]
  %18 = phi i64 [ %nextStepOrNextChunk.us, %._crit_edge2.us ], [ %coreIdx_X_chunkSize, %.preheader1.us.preheader ]
  br i1 %15, label %.preheader.us.us.preheader, label %._crit_edge2.us

.preheader.us.us.preheader:                       ; preds = %.preheader1.us
  br i1 %16, label %.preheader.us.us.us, label %.preheader.us.us

.preheader.us.us.us:                              ; preds = %.preheader.us.us.preheader, %._crit_edge.us.us.us
  %19 = phi i64 [ %34, %._crit_edge.us.us.us ], [ 0, %.preheader.us.us.preheader ]
  br i1 %lcmp.mod, label %._crit_edge.us.us.us, label %.epil.preheader.us

.epil.preheader.us:                               ; preds = %.preheader.us.us.us
  %20 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %18, i64 %19, i64 0, i32 0
  %21 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %18, i64 %19, i64 0
  %22 = load i32, i32* %21, align 16, !tbaa !2
  %23 = mul nsw i32 %22, %noelle_environment_variable_3
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %24
  %26 = load double, double* %25, align 8, !tbaa !8
  %27 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %18, i64 %19, i64 0, i32 0
  %28 = bitcast double* %20 to <2 x double>*
  %29 = load <2 x double>, <2 x double>* %28, align 16, !tbaa !8
  %30 = insertelement <2 x double> undef, double %26, i32 0
  %31 = shufflevector <2 x double> %30, <2 x double> undef, <2 x i32> zeroinitializer
  %32 = fmul <2 x double> %29, %31
  %33 = bitcast double* %27 to <2 x double>*
  store <2 x double> %32, <2 x double>* %33, align 16, !tbaa !8
  br label %._crit_edge.us.us.us

._crit_edge.us.us.us:                             ; preds = %.epil.preheader.us, %.preheader.us.us.us
  %34 = add nuw nsw i64 %19, 1
  %exitcond11.us = icmp eq i64 %34, %noelle_environment_variable_1
  br i1 %exitcond11.us, label %._crit_edge2.us, label %.preheader.us.us.us, !noelle.parallelizer.looporder !23

._crit_edge2.us:                                  ; preds = %._crit_edge.us.us, %._crit_edge.us.us.us, %.preheader1.us
  %35 = add nuw nsw i64 %18, 1
  %36 = add i64 %17, 1
  %37 = icmp eq i64 %36, %3
  %chunkWrap.us = select i1 %37, i64 0, i64 %36
  %38 = select i1 %37, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us = add i64 %35, %38
  %39 = icmp slt i64 %nextStepOrNextChunk.us, %12
  br i1 %39, label %.preheader1.us, label %._crit_edge3, !noelle.parallelizer.looporder !21

.preheader.us.us:                                 ; preds = %.preheader.us.us.preheader, %._crit_edge.us.us
  %40 = phi i64 [ %55, %._crit_edge.us.us ], [ 0, %.preheader.us.us.preheader ]
  br label %.preheader.us.us.new

._crit_edge.us.us.unr-lcssa:                      ; preds = %.preheader.us.us.new
  br i1 %lcmp.mod, label %._crit_edge.us.us, label %.epil.preheader

.epil.preheader:                                  ; preds = %._crit_edge.us.us.unr-lcssa
  %41 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %18, i64 %40, i64 %86, i32 0
  %42 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %18, i64 %40, i64 %86
  %43 = load i32, i32* %42, align 8, !tbaa !2
  %44 = mul nsw i32 %43, %noelle_environment_variable_3
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %45
  %47 = load double, double* %46, align 8, !tbaa !8
  %48 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %18, i64 %40, i64 %86, i32 0
  %49 = bitcast double* %41 to <2 x double>*
  %50 = load <2 x double>, <2 x double>* %49, align 16, !tbaa !8
  %51 = insertelement <2 x double> undef, double %47, i32 0
  %52 = shufflevector <2 x double> %51, <2 x double> undef, <2 x i32> zeroinitializer
  %53 = fmul <2 x double> %50, %52
  %54 = bitcast double* %48 to <2 x double>*
  store <2 x double> %53, <2 x double>* %54, align 16, !tbaa !8
  br label %._crit_edge.us.us

._crit_edge.us.us:                                ; preds = %._crit_edge.us.us.unr-lcssa, %.epil.preheader
  %55 = add nuw nsw i64 %40, 1
  %exitcond11 = icmp eq i64 %55, %noelle_environment_variable_1
  br i1 %exitcond11, label %._crit_edge2.us, label %.preheader.us.us, !noelle.parallelizer.looporder !23

.preheader.us.us.new:                             ; preds = %.preheader.us.us, %.preheader.us.us.new
  %56 = phi i64 [ %86, %.preheader.us.us.new ], [ 0, %.preheader.us.us ]
  %niter = phi i64 [ %niter.nsub.1, %.preheader.us.us.new ], [ %unroll_iter, %.preheader.us.us ]
  %57 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %18, i64 %40, i64 %56, i32 0
  %58 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %18, i64 %40, i64 %56
  %59 = load i32, i32* %58, align 8, !tbaa !2
  %60 = mul nsw i32 %59, %noelle_environment_variable_3
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %61
  %63 = load double, double* %62, align 8, !tbaa !8
  %64 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %18, i64 %40, i64 %56, i32 0
  %65 = bitcast double* %57 to <2 x double>*
  %66 = load <2 x double>, <2 x double>* %65, align 16, !tbaa !8
  %67 = insertelement <2 x double> undef, double %63, i32 0
  %68 = shufflevector <2 x double> %67, <2 x double> undef, <2 x i32> zeroinitializer
  %69 = fmul <2 x double> %66, %68
  %70 = bitcast double* %64 to <2 x double>*
  store <2 x double> %69, <2 x double>* %70, align 16, !tbaa !8
  %71 = or i64 %56, 1
  %72 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u0, i64 0, i64 %18, i64 %40, i64 %71, i32 0
  %73 = getelementptr inbounds [256 x [256 x [512 x i32]]], [256 x [256 x [512 x i32]]]* @main.indexmap, i64 0, i64 %18, i64 %40, i64 %71
  %74 = load i32, i32* %73, align 4, !tbaa !2
  %75 = mul nsw i32 %74, %noelle_environment_variable_3
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [1966081 x double], [1966081 x double]* @ex, i64 0, i64 %76
  %78 = load double, double* %77, align 8, !tbaa !8
  %79 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %18, i64 %40, i64 %71, i32 0
  %80 = bitcast double* %72 to <2 x double>*
  %81 = load <2 x double>, <2 x double>* %80, align 16, !tbaa !8
  %82 = insertelement <2 x double> undef, double %78, i32 0
  %83 = shufflevector <2 x double> %82, <2 x double> undef, <2 x i32> zeroinitializer
  %84 = fmul <2 x double> %81, %83
  %85 = bitcast double* %79 to <2 x double>*
  store <2 x double> %84, <2 x double>* %85, align 16, !tbaa !8
  %86 = add nuw nsw i64 %56, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %._crit_edge.us.us.unr-lcssa, label %.preheader.us.us.new, !noelle.parallelizer.looporder !22

._crit_edge3:                                     ; preds = %.preheader1, %._crit_edge2.us, %4
  ret void

.preheader1:                                      ; preds = %.preheader1.lr.ph, %.preheader1
  %87 = phi i64 [ %chunkWrap, %.preheader1 ], [ 0, %.preheader1.lr.ph ]
  %88 = phi i64 [ %nextStepOrNextChunk, %.preheader1 ], [ %coreIdx_X_chunkSize, %.preheader1.lr.ph ]
  %89 = add nuw nsw i64 %88, 1
  %90 = add i64 %87, 1
  %91 = icmp eq i64 %90, %3
  %chunkWrap = select i1 %91, i64 0, i64 %90
  %92 = select i1 %91, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk = add i64 %89, %92
  %93 = icmp slt i64 %nextStepOrNextChunk, %12
  br i1 %93, label %.preheader1, label %._crit_edge3, !noelle.parallelizer.looporder !21
}

; Function Attrs: nofree nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #8

; Function Attrs: cold nofree nounwind uwtable
define dso_local void @c_print_results(i8*, i8 signext, i32, i32, i32, i32, i32, double, double, i8*, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*) local_unnamed_addr #2 {
  %21 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.19, i64 0, i64 0), i8* %0) #10
  %22 = sext i8 %1 to i32
  %23 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2.20, i64 0, i64 0), i32 %22) #10
  %24 = or i32 %4, %3
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %20
  %27 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.21, i64 0, i64 0), i32 %2) #10
  br label %30

28:                                               ; preds = %20
  %29 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.22, i64 0, i64 0), i32 %2, i32 %3, i32 %4) #10
  br label %30

30:                                               ; preds = %28, %26
  %31 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.23, i64 0, i64 0), i32 %5) #10
  %32 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6.24, i64 0, i64 0), i32 %6) #10
  %33 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7.25, i64 0, i64 0), double %7) #10
  %34 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8.26, i64 0, i64 0), double %8) #10
  %35 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9.27, i64 0, i64 0), i8* %9) #10
  %36 = icmp eq i32 %10, 0
  %.sink = select i1 %36, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @str.3, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @str.5, i64 0, i64 0)
  %puts = tail call i32 @puts(i8* %.sink)
  %37 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12.30, i64 0, i64 0), i8* %11) #10
  %38 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13.31, i64 0, i64 0), i8* %12) #10
  %puts1 = tail call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.4, i64 0, i64 0))
  %39 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.33, i64 0, i64 0), i8* %13) #10
  %40 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16.34, i64 0, i64 0), i8* %14) #10
  %41 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.35, i64 0, i64 0), i8* %15) #10
  %42 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18.36, i64 0, i64 0), i8* %16) #10
  %43 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %17) #10
  %44 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %18) #10
  %45 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %19) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @noelle_task_1(i8* nocapture readonly, i64, i64, i64) #5 {
  %5 = bitcast i8* %0 to [512 x [18 x %struct.dcomplex]]**
  %noelle_environment_variable_0 = load [512 x [18 x %struct.dcomplex]]*, [512 x [18 x %struct.dcomplex]]** %5, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 64
  %7 = bitcast i8* %6 to i64*
  %noelle_environment_variable_1 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 128
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %0, i64 192
  %11 = bitcast i8* %10 to i64*
  %noelle_environment_variable_3 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 256
  %13 = bitcast i8* %12 to i64*
  %noelle_environment_variable_4 = load i64, i64* %13, align 8
  %coreIdx_X_chunkSize = mul i64 %3, %1
  %numCoresMinus1 = add i64 %2, -1
  %numCoresMinus1_X_chunkSize = mul i64 %numCoresMinus1, %3
  %14 = load i64, i64* %9, align 8
  %15 = icmp slt i64 %coreIdx_X_chunkSize, %14
  br i1 %15, label %.preheader.lr.ph, label %._crit_edge1, !noelle.parallelizer.looporder !29

.preheader.lr.ph:                                 ; preds = %4
  %16 = icmp sgt i64 %noelle_environment_variable_1, 0
  br i1 %16, label %.preheader.us.preheader, label %.preheader

.preheader.us.preheader:                          ; preds = %.preheader.lr.ph
  %xtraiter = and i64 %noelle_environment_variable_1, 1
  %17 = icmp eq i64 %noelle_environment_variable_1, 1
  %unroll_iter = sub nuw nsw i64 %noelle_environment_variable_1, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %17, label %.preheader.us.us.preheader, label %.preheader.us

.preheader.us.us.preheader:                       ; preds = %.preheader.us.preheader
  %18 = shl i64 %noelle_environment_variable_4, 32
  %19 = ashr exact i64 %18, 32
  br label %.preheader.us.us

.preheader.us.us:                                 ; preds = %.preheader.us.us.preheader, %._crit_edge.us.us
  %20 = phi i64 [ %chunkWrap.us.us, %._crit_edge.us.us ], [ 0, %.preheader.us.us.preheader ]
  %21 = phi i64 [ %nextStepOrNextChunk.us.us, %._crit_edge.us.us ], [ %coreIdx_X_chunkSize, %.preheader.us.us.preheader ]
  br i1 %lcmp.mod, label %._crit_edge.us.us, label %.epil.preheader.us

.epil.preheader.us:                               ; preds = %.preheader.us.us
  %22 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %21, i64 %noelle_environment_variable_3, i64 %19
  %23 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %21, i64 0
  %24 = bitcast %struct.dcomplex* %22 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 16, !tbaa !8
  %26 = bitcast %struct.dcomplex* %23 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %26, align 16, !tbaa !8
  br label %._crit_edge.us.us

._crit_edge.us.us:                                ; preds = %.epil.preheader.us, %.preheader.us.us
  %27 = add nuw nsw i64 %21, 1
  %28 = add i64 %20, 1
  %29 = icmp eq i64 %28, %3
  %chunkWrap.us.us = select i1 %29, i64 0, i64 %28
  %30 = select i1 %29, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us.us = add i64 %27, %30
  %31 = icmp slt i64 %nextStepOrNextChunk.us.us, %14
  br i1 %31, label %.preheader.us.us, label %._crit_edge1, !noelle.parallelizer.looporder !29

.preheader.us:                                    ; preds = %.preheader.us.preheader, %._crit_edge.us
  %32 = phi i64 [ %chunkWrap.us, %._crit_edge.us ], [ 0, %.preheader.us.preheader ]
  %33 = phi i64 [ %nextStepOrNextChunk.us, %._crit_edge.us ], [ %coreIdx_X_chunkSize, %.preheader.us.preheader ]
  br label %.preheader.us.new

.preheader.us.new:                                ; preds = %.preheader.us, %.preheader.us.new
  %34 = phi i64 [ %52, %.preheader.us.new ], [ 0, %.preheader.us ]
  %niter = phi i64 [ %niter.nsub.1, %.preheader.us.new ], [ %unroll_iter, %.preheader.us ]
  %35 = add i64 %34, %noelle_environment_variable_4
  %36 = shl i64 %35, 32
  %37 = ashr exact i64 %36, 32
  %38 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %33, i64 %noelle_environment_variable_3, i64 %37
  %39 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %33, i64 %34
  %40 = bitcast %struct.dcomplex* %38 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 16, !tbaa !8
  %42 = bitcast %struct.dcomplex* %39 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 16, !tbaa !8
  %43 = or i64 %34, 1
  %44 = add i64 %43, %noelle_environment_variable_4
  %45 = shl i64 %44, 32
  %46 = ashr exact i64 %45, 32
  %47 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %33, i64 %noelle_environment_variable_3, i64 %46
  %48 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %33, i64 %43
  %49 = bitcast %struct.dcomplex* %47 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 16, !tbaa !8
  %51 = bitcast %struct.dcomplex* %48 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %51, align 16, !tbaa !8
  %52 = add nuw nsw i64 %34, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %._crit_edge.us.unr-lcssa, label %.preheader.us.new

._crit_edge.us.unr-lcssa:                         ; preds = %.preheader.us.new
  br i1 %lcmp.mod, label %._crit_edge.us, label %.epil.preheader

.epil.preheader:                                  ; preds = %._crit_edge.us.unr-lcssa
  %53 = add i64 %52, %noelle_environment_variable_4
  %54 = shl i64 %53, 32
  %55 = ashr exact i64 %54, 32
  %56 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %33, i64 %noelle_environment_variable_3, i64 %55
  %57 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %33, i64 %52
  %58 = bitcast %struct.dcomplex* %56 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 16, !tbaa !8
  %60 = bitcast %struct.dcomplex* %57 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 16, !tbaa !8
  br label %._crit_edge.us

._crit_edge.us:                                   ; preds = %._crit_edge.us.unr-lcssa, %.epil.preheader
  %61 = add nuw nsw i64 %33, 1
  %62 = add i64 %32, 1
  %63 = icmp eq i64 %62, %3
  %chunkWrap.us = select i1 %63, i64 0, i64 %62
  %64 = select i1 %63, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us = add i64 %61, %64
  %65 = icmp slt i64 %nextStepOrNextChunk.us, %14
  br i1 %65, label %.preheader.us, label %._crit_edge1, !noelle.parallelizer.looporder !29

._crit_edge1:                                     ; preds = %.preheader, %._crit_edge.us, %._crit_edge.us.us, %4
  ret void

.preheader:                                       ; preds = %.preheader.lr.ph, %.preheader
  %66 = phi i64 [ %chunkWrap, %.preheader ], [ 0, %.preheader.lr.ph ]
  %67 = phi i64 [ %nextStepOrNextChunk, %.preheader ], [ %coreIdx_X_chunkSize, %.preheader.lr.ph ]
  %68 = add nuw nsw i64 %67, 1
  %69 = add i64 %66, 1
  %70 = icmp eq i64 %69, %3
  %chunkWrap = select i1 %70, i64 0, i64 %69
  %71 = select i1 %70, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk = add i64 %68, %71
  %72 = icmp slt i64 %nextStepOrNextChunk, %14
  br i1 %72, label %.preheader, label %._crit_edge1, !noelle.parallelizer.looporder !29
}

; Function Attrs: nofree norecurse nounwind
define void @noelle_task_2(i8* nocapture readonly, i64, i64, i64) #5 {
  %5 = bitcast i8* %0 to i64*
  %noelle_environment_variable_0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 64
  %7 = bitcast i8* %6 to [512 x [18 x %struct.dcomplex]]**
  %noelle_environment_variable_1 = load [512 x [18 x %struct.dcomplex]]*, [512 x [18 x %struct.dcomplex]]** %7, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 128
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %0, i64 192
  %11 = bitcast i8* %10 to i64*
  %noelle_environment_variable_3 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 256
  %13 = bitcast i8* %12 to i64*
  %noelle_environment_variable_4 = load i64, i64* %13, align 8
  %coreIdx_X_chunkSize = mul i64 %3, %1
  %numCoresMinus1 = add i64 %2, -1
  %numCoresMinus1_X_chunkSize = mul i64 %numCoresMinus1, %3
  %14 = load i64, i64* %9, align 8
  %15 = icmp slt i64 %coreIdx_X_chunkSize, %14
  br i1 %15, label %.preheader.lr.ph, label %._crit_edge1, !noelle.parallelizer.looporder !33

.preheader.lr.ph:                                 ; preds = %4
  %16 = icmp sgt i64 %noelle_environment_variable_0, 0
  br i1 %16, label %.preheader.us.preheader, label %.preheader

.preheader.us.preheader:                          ; preds = %.preheader.lr.ph
  %xtraiter = and i64 %noelle_environment_variable_0, 1
  %17 = icmp eq i64 %noelle_environment_variable_0, 1
  %unroll_iter = sub nuw nsw i64 %noelle_environment_variable_0, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %17, label %.preheader.us.us.preheader, label %.preheader.us

.preheader.us.us.preheader:                       ; preds = %.preheader.us.preheader
  %18 = shl i64 %noelle_environment_variable_4, 32
  %19 = ashr exact i64 %18, 32
  br label %.preheader.us.us

.preheader.us.us:                                 ; preds = %.preheader.us.us.preheader, %._crit_edge.us.us
  %20 = phi i64 [ %chunkWrap.us.us, %._crit_edge.us.us ], [ 0, %.preheader.us.us.preheader ]
  %21 = phi i64 [ %nextStepOrNextChunk.us.us, %._crit_edge.us.us ], [ %coreIdx_X_chunkSize, %.preheader.us.us.preheader ]
  br i1 %lcmp.mod, label %._crit_edge.us.us, label %.epil.preheader.us

.epil.preheader.us:                               ; preds = %.preheader.us.us
  %22 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %21, i64 %19
  %23 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %21, i64 0
  %24 = bitcast %struct.dcomplex* %22 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 16, !tbaa !8
  %26 = bitcast %struct.dcomplex* %23 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %26, align 16, !tbaa !8
  br label %._crit_edge.us.us

._crit_edge.us.us:                                ; preds = %.epil.preheader.us, %.preheader.us.us
  %27 = add nuw nsw i64 %21, 1
  %28 = add i64 %20, 1
  %29 = icmp eq i64 %28, %3
  %chunkWrap.us.us = select i1 %29, i64 0, i64 %28
  %30 = select i1 %29, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us.us = add i64 %27, %30
  %31 = icmp slt i64 %nextStepOrNextChunk.us.us, %14
  br i1 %31, label %.preheader.us.us, label %._crit_edge1, !noelle.parallelizer.looporder !33

.preheader.us:                                    ; preds = %.preheader.us.preheader, %._crit_edge.us
  %32 = phi i64 [ %chunkWrap.us, %._crit_edge.us ], [ 0, %.preheader.us.preheader ]
  %33 = phi i64 [ %nextStepOrNextChunk.us, %._crit_edge.us ], [ %coreIdx_X_chunkSize, %.preheader.us.preheader ]
  br label %.preheader.us.new

.preheader.us.new:                                ; preds = %.preheader.us, %.preheader.us.new
  %34 = phi i64 [ %52, %.preheader.us.new ], [ 0, %.preheader.us ]
  %niter = phi i64 [ %niter.nsub.1, %.preheader.us.new ], [ %unroll_iter, %.preheader.us ]
  %35 = add i64 %34, %noelle_environment_variable_4
  %36 = shl i64 %35, 32
  %37 = ashr exact i64 %36, 32
  %38 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %33, i64 %37
  %39 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %33, i64 %34
  %40 = bitcast %struct.dcomplex* %38 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 16, !tbaa !8
  %42 = bitcast %struct.dcomplex* %39 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 16, !tbaa !8
  %43 = or i64 %34, 1
  %44 = add i64 %43, %noelle_environment_variable_4
  %45 = shl i64 %44, 32
  %46 = ashr exact i64 %45, 32
  %47 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %33, i64 %46
  %48 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %33, i64 %43
  %49 = bitcast %struct.dcomplex* %47 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 16, !tbaa !8
  %51 = bitcast %struct.dcomplex* %48 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %51, align 16, !tbaa !8
  %52 = add nuw nsw i64 %34, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %._crit_edge.us.unr-lcssa, label %.preheader.us.new

._crit_edge.us.unr-lcssa:                         ; preds = %.preheader.us.new
  br i1 %lcmp.mod, label %._crit_edge.us, label %.epil.preheader

.epil.preheader:                                  ; preds = %._crit_edge.us.unr-lcssa
  %53 = add i64 %52, %noelle_environment_variable_4
  %54 = shl i64 %53, 32
  %55 = ashr exact i64 %54, 32
  %56 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %33, i64 %55
  %57 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %33, i64 %52
  %58 = bitcast %struct.dcomplex* %56 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 16, !tbaa !8
  %60 = bitcast %struct.dcomplex* %57 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 16, !tbaa !8
  br label %._crit_edge.us

._crit_edge.us:                                   ; preds = %._crit_edge.us.unr-lcssa, %.epil.preheader
  %61 = add nuw nsw i64 %33, 1
  %62 = add i64 %32, 1
  %63 = icmp eq i64 %62, %3
  %chunkWrap.us = select i1 %63, i64 0, i64 %62
  %64 = select i1 %63, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us = add i64 %61, %64
  %65 = icmp slt i64 %nextStepOrNextChunk.us, %14
  br i1 %65, label %.preheader.us, label %._crit_edge1, !noelle.parallelizer.looporder !33

._crit_edge1:                                     ; preds = %.preheader, %._crit_edge.us, %._crit_edge.us.us, %4
  ret void

.preheader:                                       ; preds = %.preheader.lr.ph, %.preheader
  %66 = phi i64 [ %chunkWrap, %.preheader ], [ 0, %.preheader.lr.ph ]
  %67 = phi i64 [ %nextStepOrNextChunk, %.preheader ], [ %coreIdx_X_chunkSize, %.preheader.lr.ph ]
  %68 = add nuw nsw i64 %67, 1
  %69 = add i64 %66, 1
  %70 = icmp eq i64 %69, %3
  %chunkWrap = select i1 %70, i64 0, i64 %69
  %71 = select i1 %70, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk = add i64 %68, %71
  %72 = icmp slt i64 %nextStepOrNextChunk, %14
  br i1 %72, label %.preheader, label %._crit_edge1, !noelle.parallelizer.looporder !33
}

; Function Attrs: nofree norecurse nounwind
define void @noelle_task_3(i8* nocapture readonly, i64, i64, i64) #5 {
  %5 = bitcast i8* %0 to [512 x [18 x %struct.dcomplex]]**
  %noelle_environment_variable_0 = load [512 x [18 x %struct.dcomplex]]*, [512 x [18 x %struct.dcomplex]]** %5, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 64
  %7 = bitcast i8* %6 to i64*
  %noelle_environment_variable_1 = load i64, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 128
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %0, i64 192
  %11 = bitcast i8* %10 to i64*
  %noelle_environment_variable_3 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 256
  %13 = bitcast i8* %12 to i64*
  %noelle_environment_variable_4 = load i64, i64* %13, align 8
  %coreIdx_X_chunkSize = mul i64 %3, %1
  %numCoresMinus1 = add i64 %2, -1
  %numCoresMinus1_X_chunkSize = mul i64 %numCoresMinus1, %3
  %14 = load i64, i64* %9, align 8
  %15 = icmp slt i64 %coreIdx_X_chunkSize, %14
  br i1 %15, label %.preheader.lr.ph, label %._crit_edge1, !noelle.parallelizer.looporder !30

.preheader.lr.ph:                                 ; preds = %4
  %16 = icmp sgt i64 %noelle_environment_variable_1, 0
  br i1 %16, label %.preheader.us.preheader, label %.preheader

.preheader.us.preheader:                          ; preds = %.preheader.lr.ph
  %17 = add nsw i64 %noelle_environment_variable_1, -1
  %xtraiter = and i64 %noelle_environment_variable_1, 3
  %18 = icmp ult i64 %17, 3
  %unroll_iter = sub nsw i64 %noelle_environment_variable_1, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %18, label %.preheader.us.us.preheader, label %.preheader.us.preheader2

.preheader.us.preheader2:                         ; preds = %.preheader.us.preheader
  %19 = shl nuw nsw i64 %xtraiter, 4
  br label %.preheader.us

.preheader.us.us.preheader:                       ; preds = %.preheader.us.preheader
  %scevgep = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 0, i64 %noelle_environment_variable_3, i64 %noelle_environment_variable_4
  %20 = shl nuw nsw i64 %xtraiter, 4
  br label %.preheader.us.us

.preheader.us.us:                                 ; preds = %.preheader.us.us.preheader, %._crit_edge.us.us
  %21 = phi i64 [ %chunkWrap.us.us, %._crit_edge.us.us ], [ 0, %.preheader.us.us.preheader ]
  %22 = phi i64 [ %nextStepOrNextChunk.us.us, %._crit_edge.us.us ], [ %coreIdx_X_chunkSize, %.preheader.us.us.preheader ]
  br i1 %lcmp.mod, label %._crit_edge.us.us, label %.epil.preheader.us.preheader

.epil.preheader.us.preheader:                     ; preds = %.preheader.us.us
  %23 = shl i64 %22, 17
  %scevgep5 = getelementptr %struct.dcomplex, %struct.dcomplex* %scevgep, i64 %23
  %scevgep56 = bitcast %struct.dcomplex* %scevgep5 to i8*
  %scevgep7 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %22, i64 0
  %scevgep78 = bitcast %struct.dcomplex* %scevgep7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep56, i8* align 16 %scevgep78, i64 %20, i1 false)
  br label %._crit_edge.us.us

._crit_edge.us.us:                                ; preds = %.epil.preheader.us.preheader, %.preheader.us.us
  %24 = add nuw nsw i64 %22, 1
  %25 = add i64 %21, 1
  %26 = icmp eq i64 %25, %3
  %chunkWrap.us.us = select i1 %26, i64 0, i64 %25
  %27 = select i1 %26, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us.us = add i64 %24, %27
  %28 = icmp slt i64 %nextStepOrNextChunk.us.us, %14
  br i1 %28, label %.preheader.us.us, label %._crit_edge1, !noelle.parallelizer.looporder !30

.preheader.us:                                    ; preds = %.preheader.us.preheader2, %._crit_edge.us
  %29 = phi i64 [ %chunkWrap.us, %._crit_edge.us ], [ 0, %.preheader.us.preheader2 ]
  %30 = phi i64 [ %nextStepOrNextChunk.us, %._crit_edge.us ], [ %coreIdx_X_chunkSize, %.preheader.us.preheader2 ]
  br label %.preheader.us.new

.preheader.us.new:                                ; preds = %.preheader.us, %.preheader.us.new
  %31 = phi i64 [ %59, %.preheader.us.new ], [ 0, %.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %.preheader.us.new ], [ %unroll_iter, %.preheader.us ]
  %32 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %30, i64 %31
  %33 = add nsw i64 %31, %noelle_environment_variable_4
  %34 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %30, i64 %noelle_environment_variable_3, i64 %33
  %35 = bitcast %struct.dcomplex* %32 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 16, !tbaa !8
  %37 = bitcast %struct.dcomplex* %34 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %37, align 16, !tbaa !8
  %38 = or i64 %31, 1
  %39 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %30, i64 %38
  %40 = add nsw i64 %38, %noelle_environment_variable_4
  %41 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %30, i64 %noelle_environment_variable_3, i64 %40
  %42 = bitcast %struct.dcomplex* %39 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 16, !tbaa !8
  %44 = bitcast %struct.dcomplex* %41 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 16, !tbaa !8
  %45 = or i64 %31, 2
  %46 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %30, i64 %45
  %47 = add nsw i64 %45, %noelle_environment_variable_4
  %48 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %30, i64 %noelle_environment_variable_3, i64 %47
  %49 = bitcast %struct.dcomplex* %46 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 16, !tbaa !8
  %51 = bitcast %struct.dcomplex* %48 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %51, align 16, !tbaa !8
  %52 = or i64 %31, 3
  %53 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %30, i64 %52
  %54 = add nsw i64 %52, %noelle_environment_variable_4
  %55 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %30, i64 %noelle_environment_variable_3, i64 %54
  %56 = bitcast %struct.dcomplex* %53 to <2 x i64>*
  %57 = load <2 x i64>, <2 x i64>* %56, align 16, !tbaa !8
  %58 = bitcast %struct.dcomplex* %55 to <2 x i64>*
  store <2 x i64> %57, <2 x i64>* %58, align 16, !tbaa !8
  %59 = add nuw nsw i64 %31, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %._crit_edge.us.unr-lcssa, label %.preheader.us.new

._crit_edge.us.unr-lcssa:                         ; preds = %.preheader.us.new
  br i1 %lcmp.mod, label %._crit_edge.us, label %.epil.preheader.preheader

.epil.preheader.preheader:                        ; preds = %._crit_edge.us.unr-lcssa
  %60 = add i64 %noelle_environment_variable_4, %59
  %61 = shl i64 %30, 17
  %62 = add i64 %60, %61
  %scevgep10 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 0, i64 %noelle_environment_variable_3, i64 %62
  %scevgep1011 = bitcast %struct.dcomplex* %scevgep10 to i8*
  %scevgep12 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %30, i64 %59
  %scevgep1213 = bitcast %struct.dcomplex* %scevgep12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep1011, i8* align 16 %scevgep1213, i64 %19, i1 false)
  br label %._crit_edge.us

._crit_edge.us:                                   ; preds = %.epil.preheader.preheader, %._crit_edge.us.unr-lcssa
  %63 = add nuw nsw i64 %30, 1
  %64 = add i64 %29, 1
  %65 = icmp eq i64 %64, %3
  %chunkWrap.us = select i1 %65, i64 0, i64 %64
  %66 = select i1 %65, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us = add i64 %63, %66
  %67 = icmp slt i64 %nextStepOrNextChunk.us, %14
  br i1 %67, label %.preheader.us, label %._crit_edge1, !noelle.parallelizer.looporder !30

._crit_edge1:                                     ; preds = %.preheader, %._crit_edge.us, %._crit_edge.us.us, %4
  ret void

.preheader:                                       ; preds = %.preheader.lr.ph, %.preheader
  %68 = phi i64 [ %chunkWrap, %.preheader ], [ 0, %.preheader.lr.ph ]
  %69 = phi i64 [ %nextStepOrNextChunk, %.preheader ], [ %coreIdx_X_chunkSize, %.preheader.lr.ph ]
  %70 = add nuw nsw i64 %69, 1
  %71 = add i64 %68, 1
  %72 = icmp eq i64 %71, %3
  %chunkWrap = select i1 %72, i64 0, i64 %71
  %73 = select i1 %72, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk = add i64 %70, %73
  %74 = icmp slt i64 %nextStepOrNextChunk, %14
  br i1 %74, label %.preheader, label %._crit_edge1, !noelle.parallelizer.looporder !30
}

; Function Attrs: nofree norecurse nounwind
define void @noelle_task_4(i8* nocapture readonly, i64, i64, i64) #5 {
  %5 = bitcast i8* %0 to i64*
  %noelle_environment_variable_0 = load i64, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 64
  %7 = bitcast i8* %6 to [512 x [18 x %struct.dcomplex]]**
  %noelle_environment_variable_1 = load [512 x [18 x %struct.dcomplex]]*, [512 x [18 x %struct.dcomplex]]** %7, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 128
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %0, i64 192
  %11 = bitcast i8* %10 to i64*
  %noelle_environment_variable_3 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 256
  %13 = bitcast i8* %12 to i64*
  %noelle_environment_variable_4 = load i64, i64* %13, align 8
  %coreIdx_X_chunkSize = mul i64 %3, %1
  %numCoresMinus1 = add i64 %2, -1
  %numCoresMinus1_X_chunkSize = mul i64 %numCoresMinus1, %3
  %14 = load i64, i64* %9, align 8
  %15 = icmp slt i64 %coreIdx_X_chunkSize, %14
  br i1 %15, label %.preheader.lr.ph, label %._crit_edge1, !noelle.parallelizer.looporder !34

.preheader.lr.ph:                                 ; preds = %4
  %16 = icmp sgt i64 %noelle_environment_variable_0, 0
  br i1 %16, label %.preheader.us.preheader, label %.preheader

.preheader.us.preheader:                          ; preds = %.preheader.lr.ph
  %17 = add nsw i64 %noelle_environment_variable_0, -1
  %xtraiter = and i64 %noelle_environment_variable_0, 3
  %18 = icmp ult i64 %17, 3
  %unroll_iter = sub nsw i64 %noelle_environment_variable_0, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %18, label %.preheader.us.us.preheader, label %.preheader.us.preheader2

.preheader.us.preheader2:                         ; preds = %.preheader.us.preheader
  %19 = shl nuw nsw i64 %xtraiter, 4
  br label %.preheader.us

.preheader.us.us.preheader:                       ; preds = %.preheader.us.preheader
  %scevgep = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 0, i64 %noelle_environment_variable_4
  %20 = shl nuw nsw i64 %xtraiter, 4
  br label %.preheader.us.us

.preheader.us.us:                                 ; preds = %.preheader.us.us.preheader, %._crit_edge.us.us
  %21 = phi i64 [ %chunkWrap.us.us, %._crit_edge.us.us ], [ 0, %.preheader.us.us.preheader ]
  %22 = phi i64 [ %nextStepOrNextChunk.us.us, %._crit_edge.us.us ], [ %coreIdx_X_chunkSize, %.preheader.us.us.preheader ]
  br i1 %lcmp.mod, label %._crit_edge.us.us, label %.epil.preheader.us.preheader

.epil.preheader.us.preheader:                     ; preds = %.preheader.us.us
  %23 = shl i64 %22, 9
  %scevgep5 = getelementptr %struct.dcomplex, %struct.dcomplex* %scevgep, i64 %23
  %scevgep56 = bitcast %struct.dcomplex* %scevgep5 to i8*
  %scevgep7 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %22, i64 0
  %scevgep78 = bitcast %struct.dcomplex* %scevgep7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep56, i8* align 16 %scevgep78, i64 %20, i1 false)
  br label %._crit_edge.us.us

._crit_edge.us.us:                                ; preds = %.epil.preheader.us.preheader, %.preheader.us.us
  %24 = add nuw nsw i64 %22, 1
  %25 = add i64 %21, 1
  %26 = icmp eq i64 %25, %3
  %chunkWrap.us.us = select i1 %26, i64 0, i64 %25
  %27 = select i1 %26, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us.us = add i64 %24, %27
  %28 = icmp slt i64 %nextStepOrNextChunk.us.us, %14
  br i1 %28, label %.preheader.us.us, label %._crit_edge1, !noelle.parallelizer.looporder !34

.preheader.us:                                    ; preds = %.preheader.us.preheader2, %._crit_edge.us
  %29 = phi i64 [ %chunkWrap.us, %._crit_edge.us ], [ 0, %.preheader.us.preheader2 ]
  %30 = phi i64 [ %nextStepOrNextChunk.us, %._crit_edge.us ], [ %coreIdx_X_chunkSize, %.preheader.us.preheader2 ]
  br label %.preheader.us.new

.preheader.us.new:                                ; preds = %.preheader.us, %.preheader.us.new
  %31 = phi i64 [ %59, %.preheader.us.new ], [ 0, %.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %.preheader.us.new ], [ %unroll_iter, %.preheader.us ]
  %32 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %30, i64 %31
  %33 = add nsw i64 %31, %noelle_environment_variable_4
  %34 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %30, i64 %33
  %35 = bitcast %struct.dcomplex* %32 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 16, !tbaa !8
  %37 = bitcast %struct.dcomplex* %34 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %37, align 16, !tbaa !8
  %38 = or i64 %31, 1
  %39 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %30, i64 %38
  %40 = add nsw i64 %38, %noelle_environment_variable_4
  %41 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %30, i64 %40
  %42 = bitcast %struct.dcomplex* %39 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 16, !tbaa !8
  %44 = bitcast %struct.dcomplex* %41 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 16, !tbaa !8
  %45 = or i64 %31, 2
  %46 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %30, i64 %45
  %47 = add nsw i64 %45, %noelle_environment_variable_4
  %48 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %30, i64 %47
  %49 = bitcast %struct.dcomplex* %46 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 16, !tbaa !8
  %51 = bitcast %struct.dcomplex* %48 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %51, align 16, !tbaa !8
  %52 = or i64 %31, 3
  %53 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %30, i64 %52
  %54 = add nsw i64 %52, %noelle_environment_variable_4
  %55 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %30, i64 %54
  %56 = bitcast %struct.dcomplex* %53 to <2 x i64>*
  %57 = load <2 x i64>, <2 x i64>* %56, align 16, !tbaa !8
  %58 = bitcast %struct.dcomplex* %55 to <2 x i64>*
  store <2 x i64> %57, <2 x i64>* %58, align 16, !tbaa !8
  %59 = add nuw nsw i64 %31, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %._crit_edge.us.unr-lcssa, label %.preheader.us.new

._crit_edge.us.unr-lcssa:                         ; preds = %.preheader.us.new
  br i1 %lcmp.mod, label %._crit_edge.us, label %.epil.preheader.preheader

.epil.preheader.preheader:                        ; preds = %._crit_edge.us.unr-lcssa
  %60 = add i64 %noelle_environment_variable_4, %59
  %61 = shl i64 %30, 9
  %62 = add i64 %60, %61
  %scevgep10 = getelementptr [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 0, i64 %62
  %scevgep1011 = bitcast %struct.dcomplex* %scevgep10 to i8*
  %scevgep12 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %30, i64 %59
  %scevgep1213 = bitcast %struct.dcomplex* %scevgep12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %scevgep1011, i8* align 16 %scevgep1213, i64 %19, i1 false)
  br label %._crit_edge.us

._crit_edge.us:                                   ; preds = %.epil.preheader.preheader, %._crit_edge.us.unr-lcssa
  %63 = add nuw nsw i64 %30, 1
  %64 = add i64 %29, 1
  %65 = icmp eq i64 %64, %3
  %chunkWrap.us = select i1 %65, i64 0, i64 %64
  %66 = select i1 %65, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us = add i64 %63, %66
  %67 = icmp slt i64 %nextStepOrNextChunk.us, %14
  br i1 %67, label %.preheader.us, label %._crit_edge1, !noelle.parallelizer.looporder !34

._crit_edge1:                                     ; preds = %.preheader, %._crit_edge.us, %._crit_edge.us.us, %4
  ret void

.preheader:                                       ; preds = %.preheader.lr.ph, %.preheader
  %68 = phi i64 [ %chunkWrap, %.preheader ], [ 0, %.preheader.lr.ph ]
  %69 = phi i64 [ %nextStepOrNextChunk, %.preheader ], [ %coreIdx_X_chunkSize, %.preheader.lr.ph ]
  %70 = add nuw nsw i64 %69, 1
  %71 = add i64 %68, 1
  %72 = icmp eq i64 %71, %3
  %chunkWrap = select i1 %72, i64 0, i64 %71
  %73 = select i1 %72, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk = add i64 %70, %73
  %74 = icmp slt i64 %nextStepOrNextChunk, %14
  br i1 %74, label %.preheader, label %._crit_edge1, !noelle.parallelizer.looporder !34
}

; Function Attrs: nofree norecurse nounwind
define void @noelle_task_5(i8* nocapture readonly, i64, i64, i64) #5 {
  %5 = bitcast i8* %0 to i64*
  %6 = getelementptr inbounds i8, i8* %0, i64 64
  %7 = bitcast i8* %6 to [512 x [18 x %struct.dcomplex]]**
  %noelle_environment_variable_1 = load [512 x [18 x %struct.dcomplex]]*, [512 x [18 x %struct.dcomplex]]** %7, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 128
  %9 = bitcast i8* %8 to i64*
  %noelle_environment_variable_2 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 192
  %11 = bitcast i8* %10 to i64*
  %noelle_environment_variable_3 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 256
  %13 = bitcast i8* %12 to i64*
  %noelle_environment_variable_4 = load i64, i64* %13, align 8
  %coreIdx_X_chunkSize = mul i64 %3, %1
  %numCoresMinus1 = add i64 %2, -1
  %numCoresMinus1_X_chunkSize = mul i64 %numCoresMinus1, %3
  %14 = load i64, i64* %5, align 8
  %15 = icmp slt i64 %coreIdx_X_chunkSize, %14
  br i1 %15, label %.lr.ph3, label %._crit_edge4, !noelle.parallelizer.looporder !38

.lr.ph3:                                          ; preds = %4
  %16 = icmp sgt i64 %noelle_environment_variable_2, 0
  br i1 %16, label %.lr.ph3.split.us.preheader, label %.lr.ph3.split

.lr.ph3.split.us.preheader:                       ; preds = %.lr.ph3
  %17 = add nsw i64 %noelle_environment_variable_2, -1
  %xtraiter = and i64 %noelle_environment_variable_2, 3
  %18 = icmp ult i64 %17, 3
  %unroll_iter = sub nsw i64 %noelle_environment_variable_2, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %18, label %.lr.ph3.split.us.us, label %.lr.ph3.split.us

.lr.ph3.split.us.us:                              ; preds = %.lr.ph3.split.us.preheader, %._crit_edge.us.us
  %19 = phi i64 [ %chunkWrap.us.us, %._crit_edge.us.us ], [ 0, %.lr.ph3.split.us.preheader ]
  %20 = phi i64 [ %nextStepOrNextChunk.us.us, %._crit_edge.us.us ], [ %coreIdx_X_chunkSize, %.lr.ph3.split.us.preheader ]
  %21 = add i64 %20, %noelle_environment_variable_4
  %22 = shl i64 %21, 32
  %23 = ashr exact i64 %22, 32
  br i1 %lcmp.mod, label %._crit_edge.us.us, label %.epil.preheader.us

.epil.preheader.us:                               ; preds = %.lr.ph3.split.us.us, %.epil.preheader.us
  %24 = phi i64 [ %30, %.epil.preheader.us ], [ 0, %.lr.ph3.split.us.us ]
  %epil.iter.us = phi i64 [ %epil.iter.sub.us, %.epil.preheader.us ], [ %xtraiter, %.lr.ph3.split.us.us ]
  %25 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %23, i64 %24
  %26 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %24, i64 %20
  %27 = bitcast %struct.dcomplex* %25 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 16, !tbaa !8
  %29 = bitcast %struct.dcomplex* %26 to <2 x i64>*
  store <2 x i64> %28, <2 x i64>* %29, align 16, !tbaa !8
  %30 = add nuw nsw i64 %24, 1
  %epil.iter.sub.us = add nsw i64 %epil.iter.us, -1
  %epil.iter.cmp.us = icmp eq i64 %epil.iter.sub.us, 0
  br i1 %epil.iter.cmp.us, label %._crit_edge.us.us, label %.epil.preheader.us, !llvm.loop !54

._crit_edge.us.us:                                ; preds = %.epil.preheader.us, %.lr.ph3.split.us.us
  %31 = add nuw nsw i64 %20, 1
  %32 = add i64 %19, 1
  %33 = icmp eq i64 %32, %3
  %chunkWrap.us.us = select i1 %33, i64 0, i64 %32
  %34 = select i1 %33, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us.us = add i64 %31, %34
  %35 = icmp slt i64 %nextStepOrNextChunk.us.us, %14
  br i1 %35, label %.lr.ph3.split.us.us, label %._crit_edge4, !noelle.parallelizer.looporder !38

.lr.ph3.split.us:                                 ; preds = %.lr.ph3.split.us.preheader, %._crit_edge.us
  %36 = phi i64 [ %chunkWrap.us, %._crit_edge.us ], [ 0, %.lr.ph3.split.us.preheader ]
  %37 = phi i64 [ %nextStepOrNextChunk.us, %._crit_edge.us ], [ %coreIdx_X_chunkSize, %.lr.ph3.split.us.preheader ]
  %38 = add i64 %37, %noelle_environment_variable_4
  %39 = shl i64 %38, 32
  %40 = ashr exact i64 %39, 32
  br label %.lr.ph3.split.us.new

.lr.ph3.split.us.new:                             ; preds = %.lr.ph3.split.us, %.lr.ph3.split.us.new
  %41 = phi i64 [ %65, %.lr.ph3.split.us.new ], [ 0, %.lr.ph3.split.us ]
  %niter = phi i64 [ %niter.nsub.3, %.lr.ph3.split.us.new ], [ %unroll_iter, %.lr.ph3.split.us ]
  %42 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %40, i64 %41
  %43 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %41, i64 %37
  %44 = bitcast %struct.dcomplex* %42 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 16, !tbaa !8
  %46 = bitcast %struct.dcomplex* %43 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 16, !tbaa !8
  %47 = or i64 %41, 1
  %48 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %40, i64 %47
  %49 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %47, i64 %37
  %50 = bitcast %struct.dcomplex* %48 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 16, !tbaa !8
  %52 = bitcast %struct.dcomplex* %49 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %52, align 16, !tbaa !8
  %53 = or i64 %41, 2
  %54 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %40, i64 %53
  %55 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %53, i64 %37
  %56 = bitcast %struct.dcomplex* %54 to <2 x i64>*
  %57 = load <2 x i64>, <2 x i64>* %56, align 16, !tbaa !8
  %58 = bitcast %struct.dcomplex* %55 to <2 x i64>*
  store <2 x i64> %57, <2 x i64>* %58, align 16, !tbaa !8
  %59 = or i64 %41, 3
  %60 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %40, i64 %59
  %61 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %59, i64 %37
  %62 = bitcast %struct.dcomplex* %60 to <2 x i64>*
  %63 = load <2 x i64>, <2 x i64>* %62, align 16, !tbaa !8
  %64 = bitcast %struct.dcomplex* %61 to <2 x i64>*
  store <2 x i64> %63, <2 x i64>* %64, align 16, !tbaa !8
  %65 = add nuw nsw i64 %41, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %._crit_edge.us.unr-lcssa, label %.lr.ph3.split.us.new, !noelle.parallelizer.looporder !37

._crit_edge.us.unr-lcssa:                         ; preds = %.lr.ph3.split.us.new
  br i1 %lcmp.mod, label %._crit_edge.us, label %.epil.preheader

.epil.preheader:                                  ; preds = %._crit_edge.us.unr-lcssa, %.epil.preheader
  %66 = phi i64 [ %72, %.epil.preheader ], [ %65, %._crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %.epil.preheader ], [ %xtraiter, %._crit_edge.us.unr-lcssa ]
  %67 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u1, i64 0, i64 %noelle_environment_variable_3, i64 %40, i64 %66
  %68 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %66, i64 %37
  %69 = bitcast %struct.dcomplex* %67 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 16, !tbaa !8
  %71 = bitcast %struct.dcomplex* %68 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %71, align 16, !tbaa !8
  %72 = add nuw nsw i64 %66, 1
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %._crit_edge.us, label %.epil.preheader, !llvm.loop !54

._crit_edge.us:                                   ; preds = %.epil.preheader, %._crit_edge.us.unr-lcssa
  %73 = add nuw nsw i64 %37, 1
  %74 = add i64 %36, 1
  %75 = icmp eq i64 %74, %3
  %chunkWrap.us = select i1 %75, i64 0, i64 %74
  %76 = select i1 %75, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us = add i64 %73, %76
  %77 = icmp slt i64 %nextStepOrNextChunk.us, %14
  br i1 %77, label %.lr.ph3.split.us, label %._crit_edge4, !noelle.parallelizer.looporder !38

._crit_edge4:                                     ; preds = %.lr.ph3.split, %._crit_edge.us, %._crit_edge.us.us, %4
  ret void

.lr.ph3.split:                                    ; preds = %.lr.ph3, %.lr.ph3.split
  %78 = phi i64 [ %chunkWrap, %.lr.ph3.split ], [ 0, %.lr.ph3 ]
  %79 = phi i64 [ %nextStepOrNextChunk, %.lr.ph3.split ], [ %coreIdx_X_chunkSize, %.lr.ph3 ]
  %80 = add nuw nsw i64 %79, 1
  %81 = add i64 %78, 1
  %82 = icmp eq i64 %81, %3
  %chunkWrap = select i1 %82, i64 0, i64 %81
  %83 = select i1 %82, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk = add i64 %80, %83
  %84 = icmp slt i64 %nextStepOrNextChunk, %14
  br i1 %84, label %.lr.ph3.split, label %._crit_edge4, !noelle.parallelizer.looporder !38
}

; Function Attrs: nofree norecurse nounwind
define void @noelle_task_6(i8* nocapture readonly, i64, i64, i64) #5 {
  %5 = bitcast i8* %0 to i64*
  %6 = getelementptr inbounds i8, i8* %0, i64 64
  %7 = bitcast i8* %6 to [512 x [18 x %struct.dcomplex]]**
  %noelle_environment_variable_1 = load [512 x [18 x %struct.dcomplex]]*, [512 x [18 x %struct.dcomplex]]** %7, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 128
  %9 = bitcast i8* %8 to i64*
  %noelle_environment_variable_2 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 192
  %11 = bitcast i8* %10 to i64*
  %noelle_environment_variable_3 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 256
  %13 = bitcast i8* %12 to i64*
  %noelle_environment_variable_4 = load i64, i64* %13, align 8
  %coreIdx_X_chunkSize = mul i64 %3, %1
  %numCoresMinus1 = add i64 %2, -1
  %numCoresMinus1_X_chunkSize = mul i64 %numCoresMinus1, %3
  %14 = load i64, i64* %5, align 8
  %15 = icmp slt i64 %coreIdx_X_chunkSize, %14
  br i1 %15, label %.lr.ph3, label %._crit_edge4, !noelle.parallelizer.looporder !40

.lr.ph3:                                          ; preds = %4
  %16 = icmp sgt i64 %noelle_environment_variable_2, 0
  br i1 %16, label %.lr.ph3.split.us.preheader, label %.lr.ph3.split

.lr.ph3.split.us.preheader:                       ; preds = %.lr.ph3
  %17 = add nsw i64 %noelle_environment_variable_2, -1
  %xtraiter = and i64 %noelle_environment_variable_2, 3
  %18 = icmp ult i64 %17, 3
  %unroll_iter = sub nsw i64 %noelle_environment_variable_2, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %18, label %.lr.ph3.split.us.us, label %.lr.ph3.split.us

.lr.ph3.split.us.us:                              ; preds = %.lr.ph3.split.us.preheader, %._crit_edge.us.us
  %19 = phi i64 [ %chunkWrap.us.us, %._crit_edge.us.us ], [ 0, %.lr.ph3.split.us.preheader ]
  %20 = phi i64 [ %nextStepOrNextChunk.us.us, %._crit_edge.us.us ], [ %coreIdx_X_chunkSize, %.lr.ph3.split.us.preheader ]
  %21 = add nsw i64 %20, %noelle_environment_variable_4
  br i1 %lcmp.mod, label %._crit_edge.us.us, label %.epil.preheader.us

.epil.preheader.us:                               ; preds = %.lr.ph3.split.us.us, %.epil.preheader.us
  %22 = phi i64 [ %28, %.epil.preheader.us ], [ 0, %.lr.ph3.split.us.us ]
  %epil.iter.us = phi i64 [ %epil.iter.sub.us, %.epil.preheader.us ], [ %xtraiter, %.lr.ph3.split.us.us ]
  %23 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %22, i64 %20
  %24 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u2, i64 0, i64 %noelle_environment_variable_3, i64 %21, i64 %22
  %25 = bitcast %struct.dcomplex* %23 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 16, !tbaa !8
  %27 = bitcast %struct.dcomplex* %24 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 16, !tbaa !8
  %28 = add nuw nsw i64 %22, 1
  %epil.iter.sub.us = add nsw i64 %epil.iter.us, -1
  %epil.iter.cmp.us = icmp eq i64 %epil.iter.sub.us, 0
  br i1 %epil.iter.cmp.us, label %._crit_edge.us.us, label %.epil.preheader.us, !llvm.loop !56

._crit_edge.us.us:                                ; preds = %.epil.preheader.us, %.lr.ph3.split.us.us
  %29 = add nuw nsw i64 %20, 1
  %30 = add i64 %19, 1
  %31 = icmp eq i64 %30, %3
  %chunkWrap.us.us = select i1 %31, i64 0, i64 %30
  %32 = select i1 %31, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us.us = add i64 %29, %32
  %33 = icmp slt i64 %nextStepOrNextChunk.us.us, %14
  br i1 %33, label %.lr.ph3.split.us.us, label %._crit_edge4, !noelle.parallelizer.looporder !40

.lr.ph3.split.us:                                 ; preds = %.lr.ph3.split.us.preheader, %._crit_edge.us
  %34 = phi i64 [ %chunkWrap.us, %._crit_edge.us ], [ 0, %.lr.ph3.split.us.preheader ]
  %35 = phi i64 [ %nextStepOrNextChunk.us, %._crit_edge.us ], [ %coreIdx_X_chunkSize, %.lr.ph3.split.us.preheader ]
  %36 = add nsw i64 %35, %noelle_environment_variable_4
  br label %.lr.ph3.split.us.new

.lr.ph3.split.us.new:                             ; preds = %.lr.ph3.split.us, %.lr.ph3.split.us.new
  %37 = phi i64 [ %61, %.lr.ph3.split.us.new ], [ 0, %.lr.ph3.split.us ]
  %niter = phi i64 [ %niter.nsub.3, %.lr.ph3.split.us.new ], [ %unroll_iter, %.lr.ph3.split.us ]
  %38 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %37, i64 %35
  %39 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u2, i64 0, i64 %noelle_environment_variable_3, i64 %36, i64 %37
  %40 = bitcast %struct.dcomplex* %38 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 16, !tbaa !8
  %42 = bitcast %struct.dcomplex* %39 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 16, !tbaa !8
  %43 = or i64 %37, 1
  %44 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %43, i64 %35
  %45 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u2, i64 0, i64 %noelle_environment_variable_3, i64 %36, i64 %43
  %46 = bitcast %struct.dcomplex* %44 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 16, !tbaa !8
  %48 = bitcast %struct.dcomplex* %45 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 16, !tbaa !8
  %49 = or i64 %37, 2
  %50 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %49, i64 %35
  %51 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u2, i64 0, i64 %noelle_environment_variable_3, i64 %36, i64 %49
  %52 = bitcast %struct.dcomplex* %50 to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 16, !tbaa !8
  %54 = bitcast %struct.dcomplex* %51 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %54, align 16, !tbaa !8
  %55 = or i64 %37, 3
  %56 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %55, i64 %35
  %57 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u2, i64 0, i64 %noelle_environment_variable_3, i64 %36, i64 %55
  %58 = bitcast %struct.dcomplex* %56 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 16, !tbaa !8
  %60 = bitcast %struct.dcomplex* %57 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 16, !tbaa !8
  %61 = add nuw nsw i64 %37, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %._crit_edge.us.unr-lcssa, label %.lr.ph3.split.us.new, !noelle.parallelizer.looporder !39

._crit_edge.us.unr-lcssa:                         ; preds = %.lr.ph3.split.us.new
  br i1 %lcmp.mod, label %._crit_edge.us, label %.epil.preheader

.epil.preheader:                                  ; preds = %._crit_edge.us.unr-lcssa, %.epil.preheader
  %62 = phi i64 [ %68, %.epil.preheader ], [ %61, %._crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %.epil.preheader ], [ %xtraiter, %._crit_edge.us.unr-lcssa ]
  %63 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 %62, i64 %35
  %64 = getelementptr inbounds [256 x [256 x [512 x %struct.dcomplex]]], [256 x [256 x [512 x %struct.dcomplex]]]* @main.u2, i64 0, i64 %noelle_environment_variable_3, i64 %36, i64 %62
  %65 = bitcast %struct.dcomplex* %63 to <2 x i64>*
  %66 = load <2 x i64>, <2 x i64>* %65, align 16, !tbaa !8
  %67 = bitcast %struct.dcomplex* %64 to <2 x i64>*
  store <2 x i64> %66, <2 x i64>* %67, align 16, !tbaa !8
  %68 = add nuw nsw i64 %62, 1
  %epil.iter.sub = add nsw i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %._crit_edge.us, label %.epil.preheader, !llvm.loop !56

._crit_edge.us:                                   ; preds = %.epil.preheader, %._crit_edge.us.unr-lcssa
  %69 = add nuw nsw i64 %35, 1
  %70 = add i64 %34, 1
  %71 = icmp eq i64 %70, %3
  %chunkWrap.us = select i1 %71, i64 0, i64 %70
  %72 = select i1 %71, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk.us = add i64 %69, %72
  %73 = icmp slt i64 %nextStepOrNextChunk.us, %14
  br i1 %73, label %.lr.ph3.split.us, label %._crit_edge4, !noelle.parallelizer.looporder !40

._crit_edge4:                                     ; preds = %.lr.ph3.split, %._crit_edge.us, %._crit_edge.us.us, %4
  ret void

.lr.ph3.split:                                    ; preds = %.lr.ph3, %.lr.ph3.split
  %74 = phi i64 [ %chunkWrap, %.lr.ph3.split ], [ 0, %.lr.ph3 ]
  %75 = phi i64 [ %nextStepOrNextChunk, %.lr.ph3.split ], [ %coreIdx_X_chunkSize, %.lr.ph3 ]
  %76 = add nuw nsw i64 %75, 1
  %77 = add i64 %74, 1
  %78 = icmp eq i64 %77, %3
  %chunkWrap = select i1 %78, i64 0, i64 %77
  %79 = select i1 %78, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk = add i64 %76, %79
  %80 = icmp slt i64 %nextStepOrNextChunk, %14
  br i1 %80, label %.lr.ph3.split, label %._crit_edge4, !noelle.parallelizer.looporder !40
}

; Function Attrs: nofree nounwind
declare dso_local i32 @gettimeofday(%struct.timeval* nocapture, %struct.timezone* nocapture) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) local_unnamed_addr #9

; Function Attrs: nounwind
define void @noelle_task_0(i8* nocapture readonly, i64, i64, i64) #10 {
  %5 = bitcast i8* %0 to [512 x [18 x %struct.dcomplex]]**
  %noelle_environment_variable_0 = load [512 x [18 x %struct.dcomplex]]*, [512 x [18 x %struct.dcomplex]]** %5, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 64
  %7 = bitcast i8* %6 to [512 x [18 x %struct.dcomplex]]**
  %noelle_environment_variable_1 = load [512 x [18 x %struct.dcomplex]]*, [512 x [18 x %struct.dcomplex]]** %7, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 128
  %9 = bitcast i8* %8 to i64*
  %noelle_environment_variable_2 = load i64, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 192
  %11 = bitcast i8* %10 to i64*
  %noelle_environment_variable_3 = load i64, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 256
  %13 = bitcast i8* %12 to i64*
  %noelle_environment_variable_4 = load i64, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %0, i64 320
  %15 = bitcast i8* %14 to i64*
  %16 = getelementptr inbounds i8, i8* %0, i64 384
  %17 = bitcast i8* %16 to i64*
  %noelle_environment_variable_6 = load i64, i64* %17, align 8
  %coreIdx_X_chunkSize = mul i64 %3, %1
  %numCoresMinus1 = add i64 %2, -1
  %numCoresMinus1_X_chunkSize = mul i64 %numCoresMinus1, %3
  %18 = load i64, i64* %15, align 8
  %19 = tail call i8* @malloc(i64 147456)
  %20 = bitcast [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %20, i64 147456, i1 false)
  %21 = getelementptr inbounds i8, i8* %0, i64 448
  %22 = bitcast i8* %21 to i8***
  %noelle_heap_cloning_environment_variable_7 = load i8**, i8*** %22, align 8
  %23 = tail call i8* @malloc(i64 8)
  %24 = bitcast i8* %23 to i64*
  store i64 -1, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %0, i64 512
  %26 = bitcast i8* %25 to i64***
  %noelle_heap_cloning_environment_variable_8 = load i64**, i64*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %0, i64 576
  %28 = bitcast i8* %27 to i64**
  %noelle_heap_cloning_environment_variable_9 = load i64*, i64** %28, align 8
  %29 = icmp slt i64 %coreIdx_X_chunkSize, %18
  br i1 %29, label %.lr.ph34, label %._crit_edge35, !noelle.parallelizer.looporder !26

.lr.ph34:                                         ; preds = %4
  %30 = icmp slt i64 %noelle_environment_variable_4, 1
  %31 = icmp slt i64 %noelle_environment_variable_2, 1
  %32 = mul i64 %3, 7
  %33 = add i64 %32, 1
  %brmerge = or i1 %30, %31
  br label %38

._crit_edge35:                                    ; preds = %._crit_edge30, %4
  %.lcssa26 = phi i8* [ %19, %4 ], [ %.lcssa25, %._crit_edge30 ]
  %34 = getelementptr i8*, i8** %noelle_heap_cloning_environment_variable_7, i64 %1
  store i8* %.lcssa26, i8** %34, align 8
  %35 = getelementptr i64*, i64** %noelle_heap_cloning_environment_variable_8, i64 %1
  %36 = bitcast i64** %35 to i8**
  store i8* %23, i8** %36, align 8
  %37 = getelementptr i64, i64* %noelle_heap_cloning_environment_variable_9, i64 %1
  store i64 1, i64* %37, align 8
  ret void

38:                                               ; preds = %.lr.ph34, %._crit_edge30
  %39 = phi i64 [ 0, %.lr.ph34 ], [ %chunkWrap, %._crit_edge30 ]
  %40 = phi i64 [ %coreIdx_X_chunkSize, %.lr.ph34 ], [ %151, %._crit_edge30 ]
  %41 = phi i64 [ %coreIdx_X_chunkSize, %.lr.ph34 ], [ %nextStepOrNextChunk, %._crit_edge30 ]
  %42 = phi i64 [ 147456, %.lr.ph34 ], [ %.lcssa24, %._crit_edge30 ]
  %43 = phi i8* [ %19, %.lr.ph34 ], [ %.lcssa25, %._crit_edge30 ]
  %44 = mul nsw i64 %41, %noelle_environment_variable_4
  %45 = mul nsw i64 %41, %noelle_environment_variable_6
  %46 = add nsw i64 %41, %18
  %47 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %46, i32 0
  %48 = load double, double* %47, align 16, !tbaa !42
  %49 = getelementptr inbounds [512 x %struct.dcomplex], [512 x %struct.dcomplex]* @u, i64 0, i64 %46, i32 1
  %50 = load double, double* %49, align 8, !tbaa !44
  br i1 %brmerge, label %._crit_edge30, label %.lr.ph29.us

.lr.ph29.us:                                      ; preds = %38, %._crit_edge.loopexit.us
  %51 = phi i64 [ %146, %._crit_edge.loopexit.us ], [ 0, %38 ]
  %52 = phi i64 [ %144, %._crit_edge.loopexit.us ], [ %42, %38 ]
  %53 = phi i8* [ %143, %._crit_edge.loopexit.us ], [ %43, %38 ]
  %54 = add i64 %51, %44
  %55 = add i64 %54, %noelle_environment_variable_3
  %56 = add i64 %51, %45
  %57 = add i64 %56, %noelle_environment_variable_4
  br label %.lr.ph.us

.lr.ph.us:                                        ; preds = %.lr.ph29.us, %141
  %58 = phi i64 [ %145, %141 ], [ 0, %.lr.ph29.us ]
  %59 = phi i64 [ %144, %141 ], [ %52, %.lr.ph29.us ]
  %60 = phi i8* [ %143, %141 ], [ %53, %.lr.ph29.us ]
  %61 = bitcast i8* %60 to [512 x [18 x %struct.dcomplex]]*
  %62 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %54, i64 %58, i32 0
  %63 = load double, double* %62, align 16, !tbaa !42
  %64 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %54, i64 %58, i32 1
  %65 = load double, double* %64, align 8, !tbaa !44
  %66 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %55, i64 %58, i32 0
  %67 = load double, double* %66, align 16, !tbaa !42
  %68 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_0, i64 0, i64 %55, i64 %58, i32 1
  %69 = load double, double* %68, align 8, !tbaa !44
  %70 = fadd double %63, %67
  %71 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %61, i64 0, i64 %56, i64 %58, i32 0
  %72 = ptrtoint double* %71 to i64
  %73 = ptrtoint i8* %60 to i64
  %74 = sub i64 %72, %73
  %75 = icmp ult i64 %74, %59
  br i1 %75, label %84, label %76

76:                                               ; preds = %.lr.ph.us
  %77 = add i64 %74, 128
  %78 = tail call i8* @realloc(i8* %60, i64 %77)
  %79 = sub i64 %77, %59
  %80 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 %59
  %81 = bitcast [512 x [18 x %struct.dcomplex]]* %80 to i8*
  %p0 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 0, i64 0
  %p1 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 0, i64 0, i64 1
  %p0i = ptrtoint %struct.dcomplex* %p0 to i64
  %p1i = ptrtoint %struct.dcomplex* %p1 to i64
  %diff = sub i64 %p1i, %p0i
  %th.xdinfo111 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str.th.xdinfo, i64 0, i64 0), i64 %1, i64 111)
  %th.xdinfodiff = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str.th.xdinfo, i64 0, i64 0), i64 %1, i64 %diff)
  %th.xdinfo222 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str.th.xdinfo, i64 0, i64 0), i64 %1, i64 222)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %81, i64 %79, i1 false)
  %th.xdinfo333 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str.th.xdinfo, i64 0, i64 0), i64 %1, i64 333)
  %82 = bitcast i8* %78 to double*
  %83 = getelementptr double, double* %82, i64 %59
  %.pre.us = ptrtoint i8* %78 to i64
  br label %84

84:                                               ; preds = %76, %.lr.ph.us
  %.pre-phi.us = phi i64 [ %73, %.lr.ph.us ], [ %.pre.us, %76 ]
  %85 = phi double* [ %71, %.lr.ph.us ], [ %83, %76 ]
  %86 = phi i8* [ %60, %.lr.ph.us ], [ %78, %76 ]
  %87 = phi i64 [ %59, %.lr.ph.us ], [ %77, %76 ]
  store double %70, double* %85, align 16, !tbaa !42
  store i64 %40, i64* %24, align 8
  %88 = fadd double %65, %69
  %89 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %61, i64 0, i64 %56, i64 %58, i32 1
  %90 = ptrtoint double* %89 to i64
  %91 = sub i64 %90, %.pre-phi.us
  %92 = icmp ult i64 %91, %87
  br i1 %92, label %101, label %93

93:                                               ; preds = %84
  %94 = add i64 %91, 128
  %95 = tail call i8* @realloc(i8* %86, i64 %94)
  %96 = sub i64 %94, %87
  %97 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 %87
  %98 = bitcast [512 x [18 x %struct.dcomplex]]* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* align 1 %98, i64 %96, i1 false)
  %99 = bitcast i8* %95 to double*
  %100 = getelementptr double, double* %99, i64 %87
  %.pre40.us = ptrtoint i8* %95 to i64
  br label %101

101:                                              ; preds = %93, %84
  %.pre-phi41.us = phi i64 [ %.pre-phi.us, %84 ], [ %.pre40.us, %93 ]
  %102 = phi double* [ %89, %84 ], [ %100, %93 ]
  %103 = phi i8* [ %86, %84 ], [ %95, %93 ]
  %104 = phi i64 [ %87, %84 ], [ %94, %93 ]
  store double %88, double* %102, align 8, !tbaa !44
  store i64 %40, i64* %24, align 8
  %105 = fsub double %63, %67
  %106 = fmul double %48, %105
  %107 = fsub double %65, %69
  %108 = fmul double %50, %107
  %109 = fsub double %106, %108
  %110 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %61, i64 0, i64 %57, i64 %58, i32 0
  %111 = ptrtoint double* %110 to i64
  %112 = sub i64 %111, %.pre-phi41.us
  %113 = icmp ult i64 %112, %104
  br i1 %113, label %122, label %114

114:                                              ; preds = %101
  %115 = add i64 %112, 128
  %116 = tail call i8* @realloc(i8* %103, i64 %115)
  %117 = sub i64 %115, %104
  %118 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 %104
  %119 = bitcast [512 x [18 x %struct.dcomplex]]* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %116, i8* align 1 %119, i64 %117, i1 false)
  %120 = bitcast i8* %116 to double*
  %121 = getelementptr double, double* %120, i64 %104
  %.pre42.us = ptrtoint i8* %116 to i64
  br label %122

122:                                              ; preds = %114, %101
  %.pre-phi43.us = phi i64 [ %.pre-phi41.us, %101 ], [ %.pre42.us, %114 ]
  %123 = phi double* [ %110, %101 ], [ %121, %114 ]
  %124 = phi i8* [ %103, %101 ], [ %116, %114 ]
  %125 = phi i64 [ %104, %101 ], [ %115, %114 ]
  store double %109, double* %123, align 16, !tbaa !42
  store i64 %40, i64* %24, align 8
  %126 = fmul double %48, %107
  %127 = fmul double %50, %105
  %128 = fadd double %127, %126
  %129 = getelementptr inbounds [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %61, i64 0, i64 %57, i64 %58, i32 1
  %130 = ptrtoint double* %129 to i64
  %131 = sub i64 %130, %.pre-phi43.us
  %132 = icmp ult i64 %131, %125
  br i1 %132, label %141, label %133

133:                                              ; preds = %122
  %134 = add i64 %131, 128
  %135 = tail call i8* @realloc(i8* %124, i64 %134)
  %136 = sub i64 %134, %125
  %137 = getelementptr [512 x [18 x %struct.dcomplex]], [512 x [18 x %struct.dcomplex]]* %noelle_environment_variable_1, i64 %125
  %138 = bitcast [512 x [18 x %struct.dcomplex]]* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %135, i8* align 1 %138, i64 %136, i1 false)
  %139 = bitcast i8* %135 to double*
  %140 = getelementptr double, double* %139, i64 %125
  br label %141

141:                                              ; preds = %133, %122
  %142 = phi double* [ %140, %133 ], [ %129, %122 ]
  %143 = phi i8* [ %135, %133 ], [ %124, %122 ]
  %144 = phi i64 [ %134, %133 ], [ %125, %122 ]
  store double %128, double* %142, align 8, !tbaa !44
  store i64 %40, i64* %24, align 8
  %145 = add nuw nsw i64 %58, 1
  %exitcond.us = icmp eq i64 %145, %noelle_environment_variable_2
  br i1 %exitcond.us, label %._crit_edge.loopexit.us, label %.lr.ph.us

._crit_edge.loopexit.us:                          ; preds = %141
  %146 = add nuw nsw i64 %51, 1
  %exitcond39.us = icmp eq i64 %146, %noelle_environment_variable_4
  br i1 %exitcond39.us, label %._crit_edge30, label %.lr.ph29.us

._crit_edge30:                                    ; preds = %._crit_edge.loopexit.us, %38
  %.lcssa25 = phi i8* [ %43, %38 ], [ %143, %._crit_edge.loopexit.us ]
  %.lcssa24 = phi i64 [ %42, %38 ], [ %144, %._crit_edge.loopexit.us ]
  %147 = add nuw nsw i64 %41, 1
  %148 = add i64 %39, 1
  %149 = icmp eq i64 %148, %3
  %chunkWrap = select i1 %149, i64 0, i64 %148
  %150 = select i1 %149, i64 %33, i64 1
  %151 = add i64 %150, %40
  %152 = select i1 %149, i64 %numCoresMinus1_X_chunkSize, i64 0
  %nextStepOrNextChunk = add i64 %147, %152
  %153 = icmp slt i64 %nextStepOrNextChunk, %18
  br i1 %153, label %38, label %._crit_edge35, !noelle.parallelizer.looporder !26
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare dso_local double @cos(double) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare dso_local double @sin(double) local_unnamed_addr #6

; Function Attrs: cold nofree norecurse nounwind uwtable
define dso_local double @randlc(double* nocapture, double) local_unnamed_addr #11 {
  %3 = fmul double %1, 0x3E80000000000000
  %4 = fptosi double %3 to i32
  %5 = sitofp i32 %4 to double
  %6 = fmul double %5, 0x4160000000000000
  %7 = fsub double %1, %6
  %8 = load double, double* %0, align 8, !tbaa !8
  %9 = fmul double %8, 0x3E80000000000000
  %10 = fptosi double %9 to i32
  %11 = sitofp i32 %10 to double
  %12 = fmul double %11, 0x4160000000000000
  %13 = fsub double %8, %12
  %14 = fmul double %13, %5
  %15 = fmul double %7, %11
  %16 = fadd double %15, %14
  %17 = fmul double %16, 0x3E80000000000000
  %18 = fptosi double %17 to i32
  %19 = sitofp i32 %18 to double
  %20 = fmul double %19, 0x4160000000000000
  %21 = fsub double %16, %20
  %22 = fmul double %21, 0x4160000000000000
  %23 = fmul double %7, %13
  %24 = fadd double %23, %22
  %25 = fmul double %24, 0x3D10000000000000
  %26 = fptosi double %25 to i32
  %27 = sitofp i32 %26 to double
  %28 = fmul double %27, 0x42D0000000000000
  %29 = fsub double %24, %28
  store double %29, double* %0, align 8, !tbaa !8
  %30 = fmul double %29, 0x3D10000000000000
  ret double %30
}

; Function Attrs: cold nofree norecurse nounwind uwtable writeonly
define dso_local void @timer_clear(i32) local_unnamed_addr #12 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [64 x double], [64 x double]* @elapsed, i64 0, i64 %2
  store double 0.000000e+00, double* %3, align 8, !tbaa !8
  ret void
}

; Function Attrs: cold nounwind uwtable
define dso_local void @timer_start(i32) local_unnamed_addr #0 {
  %2 = alloca double, align 8
  %3 = bitcast double* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #10
  call void @wtime_(double* nonnull %2) #10
  %4 = bitcast double* %2 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #10
  %6 = sext i32 %0 to i64
  %7 = getelementptr inbounds [64 x double], [64 x double]* @start, i64 0, i64 %6
  %8 = bitcast double* %7 to i64*
  store i64 %5, i64* %8, align 8, !tbaa !8
  ret void
}

; Function Attrs: cold nounwind uwtable
define dso_local void @timer_stop(i32) local_unnamed_addr #0 {
  %2 = alloca double, align 8
  %3 = bitcast double* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #10
  call void @wtime_(double* nonnull %2) #10
  %4 = load double, double* %2, align 8, !tbaa !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #10
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [64 x double], [64 x double]* @start, i64 0, i64 %5
  %7 = load double, double* %6, align 8, !tbaa !8
  %8 = fsub double %4, %7
  %9 = getelementptr inbounds [64 x double], [64 x double]* @elapsed, i64 0, i64 %5
  %10 = load double, double* %9, align 8, !tbaa !8
  %11 = fadd double %10, %8
  store double %11, double* %9, align 8, !tbaa !8
  ret void
}

; Function Attrs: cold norecurse nounwind readonly uwtable
define dso_local double @timer_read(i32) local_unnamed_addr #13 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [64 x double], [64 x double]* @elapsed, i64 0, i64 %2
  %4 = load double, double* %3, align 8, !tbaa !8
  ret double %4
}

; Function Attrs: cold nounwind uwtable
define dso_local double @elapsed_time() local_unnamed_addr #0 {
  %1 = alloca double, align 8
  %2 = bitcast double* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #10
  call void @wtime_(double* nonnull %1)
  %3 = load double, double* %1, align 8, !tbaa !8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #10
  ret double %3
}

; Function Attrs: cold nofree norecurse nounwind uwtable
define dso_local void @vranlc(i32, double* nocapture, double, double* nocapture) local_unnamed_addr #11 {
  %5 = fmul double %2, 0x3E80000000000000
  %6 = fptosi double %5 to i32
  %7 = sitofp i32 %6 to double
  %8 = fmul double %7, 0x4160000000000000
  %9 = fsub double %2, %8
  %10 = load double, double* %1, align 8, !tbaa !8
  %11 = icmp slt i32 %0, 1
  br i1 %11, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %4
  %12 = sext i32 %0 to i64
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.02 = phi double [ %33, %.lr.ph ], [ %10, %.lr.ph.preheader ]
  %indvars.iv1 = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 1, %.lr.ph.preheader ]
  %13 = fmul double %.02, 0x3E80000000000000
  %14 = fptosi double %13 to i32
  %15 = sitofp i32 %14 to double
  %16 = fmul double %15, 0x4160000000000000
  %17 = fsub double %.02, %16
  %18 = fmul double %17, %7
  %19 = fmul double %9, %15
  %20 = fadd double %19, %18
  %21 = fmul double %20, 0x3E80000000000000
  %22 = fptosi double %21 to i32
  %23 = sitofp i32 %22 to double
  %24 = fmul double %23, 0x4160000000000000
  %25 = fsub double %20, %24
  %26 = fmul double %25, 0x4160000000000000
  %27 = fmul double %9, %17
  %28 = fadd double %27, %26
  %29 = fmul double %28, 0x3D10000000000000
  %30 = fptosi double %29 to i32
  %31 = sitofp i32 %30 to double
  %32 = fmul double %31, 0x42D0000000000000
  %33 = fsub double %28, %32
  %34 = fmul double %33, 0x3D10000000000000
  %35 = getelementptr inbounds double, double* %3, i64 %indvars.iv1
  store double %34, double* %35, align 8, !tbaa !8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv1, 1
  %exitcond = icmp eq i64 %indvars.iv1, %12
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %4
  %.0.lcssa = phi double [ %10, %4 ], [ %33, %.lr.ph ]
  store double %.0.lcssa, double* %1, align 8, !tbaa !8
  ret void
}

; Function Attrs: nofree norecurse nounwind
define void @noelle_task_0_update_original_heap(double* nocapture, double* nocapture readonly, i64* nocapture readonly, i64, i64* nocapture) local_unnamed_addr #5 {
entry:
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %exit, label %body0.preheader

body0.preheader:                                  ; preds = %entry
  %xtraiter = and i64 %3, 1
  %6 = icmp eq i64 %3, 1
  br i1 %6, label %body0.epil, label %body0.preheader.new

body0.preheader.new:                              ; preds = %body0.preheader
  %unroll_iter = sub nuw i64 %3, %xtraiter
  br label %body0

body0:                                            ; preds = %body3.1, %body0.preheader.new
  %7 = phi i64 [ 0, %body0.preheader.new ], [ %39, %body3.1 ]
  %niter = phi i64 [ %unroll_iter, %body0.preheader.new ], [ %niter.nsub.1, %body3.1 ]
  %8 = getelementptr i64, i64* %2, i64 %7
  %9 = getelementptr i64, i64* %4, i64 %7
  %10 = load i64, i64* %8, align 8
  %11 = load i64, i64* %9, align 8
  %12 = icmp sgt i64 %10, %11
  br i1 %12, label %body2, label %body3

body2:                                            ; preds = %body0
  %13 = getelementptr double, double* %0, i64 %7
  %14 = getelementptr double, double* %1, i64 %7
  %15 = bitcast double* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast double* %13 to i64*
  store i64 %16, i64* %17, align 8
  store i64 %10, i64* %9, align 8
  br label %body3

body3:                                            ; preds = %body0, %body2
  %18 = or i64 %7, 1
  %19 = getelementptr i64, i64* %2, i64 %18
  %20 = getelementptr i64, i64* %4, i64 %18
  %21 = load i64, i64* %19, align 8
  %22 = load i64, i64* %20, align 8
  %23 = icmp sgt i64 %21, %22
  br i1 %23, label %body2.1, label %body3.1

exit.loopexit.unr-lcssa:                          ; preds = %body3.1
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %exit, label %body0.epil

body0.epil:                                       ; preds = %body0.preheader, %exit.loopexit.unr-lcssa
  %.unr6 = phi i64 [ %39, %exit.loopexit.unr-lcssa ], [ 0, %body0.preheader ]
  %24 = getelementptr i64, i64* %2, i64 %.unr6
  %25 = getelementptr i64, i64* %4, i64 %.unr6
  %26 = load i64, i64* %24, align 8
  %27 = load i64, i64* %25, align 8
  %28 = icmp sgt i64 %26, %27
  br i1 %28, label %body2.epil, label %exit

body2.epil:                                       ; preds = %body0.epil
  %29 = getelementptr double, double* %0, i64 %.unr6
  %30 = getelementptr double, double* %1, i64 %.unr6
  %31 = bitcast double* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast double* %29 to i64*
  store i64 %32, i64* %33, align 8
  store i64 %26, i64* %25, align 8
  br label %exit

exit:                                             ; preds = %exit.loopexit.unr-lcssa, %body0.epil, %body2.epil, %entry
  ret void

body2.1:                                          ; preds = %body3
  %34 = getelementptr double, double* %0, i64 %18
  %35 = getelementptr double, double* %1, i64 %18
  %36 = bitcast double* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast double* %34 to i64*
  store i64 %37, i64* %38, align 8
  store i64 %21, i64* %20, align 8
  br label %body3.1

body3.1:                                          ; preds = %body2.1, %body3
  %39 = add nuw i64 %7, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %exit.loopexit.unr-lcssa, label %body0
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC11ThreadCTask7executeEv(%"class.MARC::ThreadCTask"*) unnamed_addr #14 align 2 {
  %2 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !tbaa !57, !range !62
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @pthread_self() #31
  %7 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 3
  %8 = tail call i32 @pthread_setaffinity_np(i64 %6, i64 128, %struct.cpu_set_t* nonnull %7) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cerr, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0))
  %12 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull %11, i32 %8)
  %13 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %12)
  tail call void @abort() #30
  unreachable

14:                                               ; preds = %5, %1
  %15 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 1
  %16 = load void (i8*)*, void (i8*)** %15, align 8, !tbaa !63
  %17 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8, !tbaa !64
  tail call void %16(i8* %18)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC11IThreadTaskD2Ev(%"class.MARC::IThreadTask"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC11ThreadCTaskD0Ev(%"class.MARC::ThreadCTask"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.MARC::ThreadCTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #32
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #15

; Function Attrs: nounwind readnone
declare dso_local i64 @pthread_self() local_unnamed_addr #16

; Function Attrs: nounwind
declare dso_local i32 @pthread_setaffinity_np(i64, i64, %struct.cpu_set_t*) local_unnamed_addr #17

; Function Attrs: inlinehint uwtable
declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #18

declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #19

; Function Attrs: inlinehint uwtable
declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) local_unnamed_addr #18

; Function Attrs: noreturn nounwind
declare dso_local void @abort() local_unnamed_addr #9

; Function Attrs: uwtable
define dso_local i64 @_ZNK4MARC10ThreadPool33numberOfTasksWaitingToBeProcessedEv(%"class.MARC::ThreadPool"*) unnamed_addr #14 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %3, %1
  %9 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %12 = bitcast %"class.std::unique_ptr"*** %11 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !65
  %14 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %15 = bitcast %"class.std::unique_ptr"*** %14 to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !65
  %17 = sub i64 %13, %16
  %18 = shl i64 %17, 3
  %19 = add i64 %18, -64
  %20 = bitcast %"struct.std::_Deque_iterator.19"* %9 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !67
  %22 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %23 = bitcast %"class.std::unique_ptr"** %22 to i64*
  %24 = load i64, i64* %23, align 8, !tbaa !68
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %19, %26
  %28 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %29 = bitcast %"class.std::unique_ptr"** %28 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !69
  %31 = bitcast %"struct.std::_Deque_iterator.19"* %10 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !67
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  %35 = add nsw i64 %27, %34
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %36, label %39

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %37) #10
  br label %39

39:                                               ; preds = %8, %36
  ret i64 %35
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC10ThreadPool14workerFunctionEPSt6atomicIbEj(%"class.MARC::ThreadPool"*, %"struct.std::atomic"* nocapture, i32) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load atomic i8, i8* %5 seq_cst, align 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %.loopexit

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %1, i64 0, i32 0, i32 0
  %11 = bitcast %"class.std::unique_ptr"* %4 to i8*
  %12 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1
  br label %14

14:                                               ; preds = %9, %40
  store atomic i8 1, i8* %10 seq_cst, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %12, align 8, !tbaa !70
  %15 = invoke zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE7waitPopERS5_(%"class.MARC::ThreadSafeMutexQueue.11"* nonnull %13, %"class.std::unique_ptr"* nonnull dereferenceable(8) %4)
          to label %16 unwind label %22

16:                                               ; preds = %14
  br i1 %15, label %17, label %32

17:                                               ; preds = %16
  store atomic i8 0, i8* %10 seq_cst, align 1
  %18 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %12, align 8, !tbaa !72
  %19 = bitcast %"class.MARC::IThreadTask"* %18 to void (%"class.MARC::IThreadTask"*)***
  %20 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %19, align 8, !tbaa !73
  %21 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %20, align 8
  invoke void %21(%"class.MARC::IThreadTask"* %18)
          to label %32 unwind label %22

22:                                               ; preds = %17, %14
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %12, align 8, !tbaa !72
  %25 = icmp eq %"class.MARC::IThreadTask"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.MARC::IThreadTask"* %24 to void (%"class.MARC::IThreadTask"*)***
  %28 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %27, align 8, !tbaa !73
  %29 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %28, i64 2
  %30 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %29, align 8
  call void %30(%"class.MARC::IThreadTask"* nonnull %24) #10
  br label %31

31:                                               ; preds = %22, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  resume { i8*, i32 } %23

32:                                               ; preds = %17, %16
  %33 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %12, align 8, !tbaa !72
  %34 = icmp eq %"class.MARC::IThreadTask"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.MARC::IThreadTask"* %33 to void (%"class.MARC::IThreadTask"*)***
  %37 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %36, align 8, !tbaa !73
  %38 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %37, i64 2
  %39 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %38, align 8
  call void %39(%"class.MARC::IThreadTask"* nonnull %33) #10
  br label %40

40:                                               ; preds = %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  %41 = load atomic i8, i8* %5 seq_cst, align 1
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %14, label %.loopexit

.loopexit:                                        ; preds = %40, %3
  ret void
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE7waitPopERS5_(%"class.MARC::ThreadSafeMutexQueue.11"*, %"class.std::unique_ptr"* dereferenceable(8)) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::unique_lock", align 8
  %4 = bitcast %"class.std::unique_lock"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %3, i64 0, i32 0
  store %"class.std::mutex"* %5, %"class.std::mutex"** %6, align 8, !tbaa !75
  %7 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %3, i64 0, i32 1
  store i8 0, i8* %7, align 8, !tbaa !77
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %5, i64 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %9) #10
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZSt20__throw_system_errori(i32 %10) #33
  unreachable

13:                                               ; preds = %2, %8
  store i8 1, i8* %7, align 8, !tbaa !77
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = load atomic i8, i8* %14 seq_cst, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %92, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %20 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %19, align 8, !tbaa !67
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %22 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %21, align 8, !tbaa !67
  %23 = icmp eq %"class.std::unique_ptr"* %20, %22
  br i1 %23, label %24, label %.loopexit

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 2
  br label %26

26:                                               ; preds = %24, %30
  %27 = load atomic i8, i8* %14 seq_cst, align 1
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %.loopexit, label %30

30:                                               ; preds = %26
  call void @_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE(%"class.std::condition_variable"* nonnull %25, %"class.std::unique_lock"* nonnull dereferenceable(16) %3) #10
  %31 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %19, align 8, !tbaa !67
  %32 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %21, align 8, !tbaa !67
  %33 = icmp eq %"class.std::unique_ptr"* %31, %32
  br i1 %33, label %26, label %.loopexit

.loopexit:                                        ; preds = %30, %26, %18
  %34 = load atomic i8, i8* %14 seq_cst, align 1
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %92, label %37

37:                                               ; preds = %.loopexit
  %38 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %21, align 8, !tbaa !67, !noalias !78
  %39 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::unique_ptr"* %38 to i64*
  %41 = load i64, i64* %40, align 8, !tbaa !72
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %39, align 8, !tbaa !72
  %42 = bitcast %"class.std::unique_ptr"* %1 to i64*
  %43 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %43, align 8, !tbaa !72
  store i64 %41, i64* %42, align 8, !tbaa !72
  %45 = icmp eq %"class.MARC::IThreadTask"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %37
  %47 = bitcast %"class.MARC::IThreadTask"* %44 to void (%"class.MARC::IThreadTask"*)***
  %48 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %47, align 8, !tbaa !73
  %49 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %48, i64 2
  %50 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %49, align 8
  call void %50(%"class.MARC::IThreadTask"* nonnull %44) #10
  br label %51

51:                                               ; preds = %46, %37
  %52 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %21, align 8, !tbaa !81
  %53 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %54 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %53, align 8, !tbaa !84
  %55 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %54, i64 -1
  %56 = icmp eq %"class.std::unique_ptr"* %52, %55
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %58, align 8, !tbaa !72
  %60 = icmp eq %"class.MARC::IThreadTask"* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = bitcast %"class.MARC::IThreadTask"* %59 to void (%"class.MARC::IThreadTask"*)***
  %63 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %62, align 8, !tbaa !73
  %64 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %63, i64 2
  %65 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %64, align 8
  call void %65(%"class.MARC::IThreadTask"* nonnull %59) #10
  br label %66

66:                                               ; preds = %61, %57
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %58, align 8, !tbaa !72
  %67 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %21, align 8, !tbaa !81
  %68 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %67, i64 1
  store %"class.std::unique_ptr"* %68, %"class.std::unique_ptr"** %21, align 8, !tbaa !81
  br label %90

69:                                               ; preds = %51
  %70 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %71 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %71, align 8, !tbaa !72
  %73 = icmp eq %"class.MARC::IThreadTask"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.MARC::IThreadTask"* %72 to void (%"class.MARC::IThreadTask"*)***
  %76 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %75, align 8, !tbaa !73
  %77 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %76, i64 2
  %78 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %77, align 8
  call void %78(%"class.MARC::IThreadTask"* nonnull %72) #10
  br label %79

79:                                               ; preds = %74, %69
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %71, align 8, !tbaa !72
  %80 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %81 = bitcast %"class.std::unique_ptr"** %80 to i8**
  %82 = load i8*, i8** %81, align 8, !tbaa !85
  call void @_ZdlPv(i8* %82) #10
  %83 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %84 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %83, align 8, !tbaa !86
  %85 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %84, i64 1
  store %"class.std::unique_ptr"** %85, %"class.std::unique_ptr"*** %83, align 8, !tbaa !65
  %86 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %85, align 8, !tbaa !72
  store %"class.std::unique_ptr"* %86, %"class.std::unique_ptr"** %80, align 8, !tbaa !68
  %87 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %86, i64 64
  store %"class.std::unique_ptr"* %87, %"class.std::unique_ptr"** %53, align 8, !tbaa !69
  %88 = ptrtoint %"class.std::unique_ptr"* %86 to i64
  %89 = bitcast %"struct.std::_Deque_iterator.19"* %70 to i64*
  store i64 %88, i64* %89, align 8, !tbaa !81
  br label %90

90:                                               ; preds = %66, %79
  %91 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 3
  call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %91) #10
  br label %92

92:                                               ; preds = %.loopexit, %13, %90
  %93 = phi i1 [ false, %13 ], [ false, %.loopexit ], [ true, %90 ]
  %94 = load i8, i8* %7, align 8, !tbaa !77, !range !62
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %92
  %97 = load %"class.std::mutex"*, %"class.std::mutex"** %6, align 8, !tbaa !75
  %98 = icmp eq %"class.std::mutex"* %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %96
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %100, label %103

100:                                              ; preds = %99
  %101 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %97, i64 0, i32 0, i32 0
  %102 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %101) #10
  br label %103

103:                                              ; preds = %100, %99
  store i8 0, i8* %7, align 8, !tbaa !77
  br label %104

104:                                              ; preds = %92, %96, %103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret i1 %93
}

; Function Attrs: nounwind
declare extern_weak dso_local i32 @__pthread_key_create(i32*, void (i8*)*) #17

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #17

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_system_errori(i32) local_unnamed_addr #20

; Function Attrs: nounwind
declare dso_local void @_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE(%"class.std::condition_variable"*, %"class.std::unique_lock"* dereferenceable(16)) local_unnamed_addr #17

; Function Attrs: nounwind
declare dso_local void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"*) local_unnamed_addr #17

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #17

; Function Attrs: uwtable
define dso_local i64 @_ZNK4MARC25ThreadPoolForCSingleQueue33numberOfTasksWaitingToBeProcessedEv(%"class.MARC::ThreadPoolForCSingleQueue"*) unnamed_addr #14 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %3, %1
  %9 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %12 = bitcast %"class.MARC::ThreadCTask"**** %11 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !87
  %14 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %15 = bitcast %"class.MARC::ThreadCTask"**** %14 to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !87
  %17 = sub i64 %13, %16
  %18 = shl i64 %17, 3
  %19 = add i64 %18, -64
  %20 = bitcast %"struct.std::_Deque_iterator.33"* %9 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !89
  %22 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %23 = bitcast %"class.MARC::ThreadCTask"*** %22 to i64*
  %24 = load i64, i64* %23, align 8, !tbaa !90
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %19, %26
  %28 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %29 = bitcast %"class.MARC::ThreadCTask"*** %28 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !91
  %31 = bitcast %"struct.std::_Deque_iterator.33"* %10 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !89
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  %35 = add nsw i64 %27, %34
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %36, label %39

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %37) #10
  br label %39

39:                                               ; preds = %8, %36
  ret i64 %35
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC25ThreadPoolForCSingleQueue14workerFunctionEPSt6atomicIbEj(%"class.MARC::ThreadPoolForCSingleQueue"*, %"struct.std::atomic"* nocapture, i32) unnamed_addr #14 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = alloca %"class.MARC::ThreadCTask"*, align 8
  %5 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load atomic i8, i8* %5 seq_cst, align 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %.loopexit

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %1, i64 0, i32 0, i32 0
  %11 = bitcast %"class.MARC::ThreadCTask"** %4 to i8*
  %12 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1
  br label %13

13:                                               ; preds = %9, %32
  store atomic i8 1, i8* %10 seq_cst, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  store %"class.MARC::ThreadCTask"* null, %"class.MARC::ThreadCTask"** %4, align 8, !tbaa !72
  %14 = call zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE7waitPopERS2_(%"class.MARC::ThreadSafeMutexQueue.28"* nonnull %12, %"class.MARC::ThreadCTask"** nonnull dereferenceable(8) %4)
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  store atomic i8 0, i8* %10 seq_cst, align 1
  %16 = load %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %4, align 8, !tbaa !72
  %17 = bitcast %"class.MARC::ThreadCTask"* %16 to void (%"class.MARC::ThreadCTask"*)***
  %18 = load void (%"class.MARC::ThreadCTask"*)**, void (%"class.MARC::ThreadCTask"*)*** %17, align 8, !tbaa !73
  %19 = load void (%"class.MARC::ThreadCTask"*)*, void (%"class.MARC::ThreadCTask"*)** %18, align 8
  call void %19(%"class.MARC::ThreadCTask"* %16)
  br label %20

20:                                               ; preds = %15, %13
  %21 = load atomic i8, i8* %5 seq_cst, align 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %20
  %25 = load %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %4, align 8, !tbaa !72
  %26 = icmp eq %"class.MARC::ThreadCTask"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %25, i64 0, i32 8
  %29 = call i32 @pthread_spin_lock(i32* nonnull %28) #10
  %30 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %25, i64 0, i32 5
  store i8 1, i8* %30, align 1, !tbaa !92
  %31 = call i32 @pthread_spin_unlock(i32* nonnull %28) #10
  br label %32

32:                                               ; preds = %27, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  %33 = load atomic i8, i8* %5 seq_cst, align 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %13, label %.loopexit

36:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %.loopexit

.loopexit:                                        ; preds = %32, %3, %36
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC25ThreadPoolForCSingleQueue15submitAndDetachEPFvPvES1_(%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*) unnamed_addr #14 align 2 {
  %4 = bitcast %"class.MARC::ThreadPoolForCSingleQueue"* %0 to %"class.MARC::ThreadPoolForC"*
  %5 = tail call %"class.MARC::ThreadCTask"* @_ZN4MARC14ThreadPoolForC7getTaskEv(%"class.MARC::ThreadPoolForC"* %4)
  %6 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %5, i64 0, i32 1
  store void (i8*)* %1, void (i8*)** %6, align 8, !tbaa !63
  %7 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %5, i64 0, i32 2
  store i8* %2, i8** %7, align 8, !tbaa !64
  %8 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1
  tail call void @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE4pushES2_(%"class.MARC::ThreadSafeMutexQueue.28"* nonnull %8, %"class.MARC::ThreadCTask"* %5)
  %9 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4MARC19ThreadPoolInterface10expandPoolEv(%"class.MARC::ThreadPoolInterface"* %9)
  ret void
}

; Function Attrs: uwtable
define dso_local %"class.MARC::ThreadCTask"* @_ZN4MARC14ThreadPoolForC7getTaskEv(%"class.MARC::ThreadPoolForC"*) local_unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadPoolForC", %"class.MARC::ThreadPoolForC"* %0, i64 0, i32 2
  %3 = tail call i32 @pthread_spin_lock(i32* nonnull %2) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadPoolForC", %"class.MARC::ThreadPoolForC"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.MARC::ThreadPoolForC", %"class.MARC::ThreadPoolForC"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = bitcast %"class.MARC::ThreadCTask"*** %5 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !93
  %8 = bitcast %"class.std::vector.23"* %4 to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !96
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %.loopexit, label %13

13:                                               ; preds = %1
  %14 = inttoptr i64 %9 to %"class.MARC::ThreadCTask"**
  %15 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %4, i64 0, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %34, %13
  %17 = phi %"class.MARC::ThreadCTask"** [ %14, %13 ], [ %35, %34 ]
  %18 = phi i64 [ 0, %13 ], [ %32, %34 ]
  %19 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %17, i64 %18
  %20 = load %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %19, align 8, !tbaa !72
  %21 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %20, i64 0, i32 5
  %22 = load i8, i8* %21, align 1, !tbaa !92, !range !62
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %20, i64 0, i32 8
  %26 = tail call i32 @pthread_spin_lock(i32* nonnull %25) #10
  %27 = load i8, i8* %21, align 1, !tbaa !92, !range !62
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = tail call i32 @pthread_spin_unlock(i32* nonnull %25) #10
  br label %31

31:                                               ; preds = %16, %29
  %32 = add nuw i64 %18, 1
  %33 = icmp ugt i64 %11, %32
  br i1 %33, label %34, label %.loopexit

34:                                               ; preds = %31
  %35 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %15, align 8, !tbaa !96
  br label %16

36:                                               ; preds = %24
  store i8 0, i8* %21, align 1, !tbaa !92
  %37 = tail call i32 @pthread_spin_unlock(i32* nonnull %25) #10
  %38 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %15, align 8, !tbaa !96
  %39 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %38, i64 %18
  %40 = bitcast %"class.MARC::ThreadCTask"** %39 to i64*
  %41 = load i64, i64* %40, align 8, !tbaa !72
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %.loopexit, label %96

.loopexit:                                        ; preds = %31, %1, %36
  %43 = tail call i8* @_Znwm(i64 176) #34
  %44 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC11ThreadCTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8, !tbaa !73
  %45 = getelementptr inbounds i8, i8* %43, i64 152
  store i8 0, i8* %45, align 8, !tbaa !57
  %46 = getelementptr inbounds i8, i8* %43, i64 153
  store i8 0, i8* %46, align 1, !tbaa !92
  %47 = getelementptr inbounds i8, i8* %43, i64 160
  %48 = bitcast i8* %47 to i64*
  store i64 %11, i64* %48, align 8, !tbaa !97
  %49 = getelementptr inbounds i8, i8* %43, i64 168
  %50 = bitcast i8* %49 to i32*
  %51 = tail call i32 @pthread_spin_init(i32* nonnull %50, i32 0) #10
  %52 = ptrtoint i8* %43 to i64
  %53 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %5, align 8, !tbaa !93
  %54 = getelementptr inbounds %"class.MARC::ThreadPoolForC", %"class.MARC::ThreadPoolForC"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %55 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %54, align 8, !tbaa !98
  %56 = icmp eq %"class.MARC::ThreadCTask"** %53, %55
  br i1 %56, label %61, label %57

57:                                               ; preds = %.loopexit
  %58 = bitcast %"class.MARC::ThreadCTask"** %53 to i64*
  store i64 %52, i64* %58, align 8, !tbaa !72
  %59 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %5, align 8, !tbaa !93
  %60 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %59, i64 1
  br label %93

61:                                               ; preds = %.loopexit
  %62 = ptrtoint %"class.MARC::ThreadCTask"** %53 to i64
  %63 = load i64, i64* %8, align 8, !tbaa !96
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = icmp eq i64 %64, 0
  %67 = select i1 %66, i64 1, i64 %65
  %68 = add nsw i64 %67, %65
  %69 = icmp ult i64 %68, %65
  %70 = icmp ugt i64 %68, 2305843009213693951
  %71 = or i1 %69, %70
  %72 = select i1 %71, i64 2305843009213693951, i64 %68
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %61
  %75 = shl i64 %72, 3
  %76 = tail call i8* @_Znwm(i64 %75)
  %77 = bitcast i8* %76 to %"class.MARC::ThreadCTask"**
  br label %78

78:                                               ; preds = %74, %61
  %79 = phi i8* [ %76, %74 ], [ null, %61 ]
  %80 = phi %"class.MARC::ThreadCTask"** [ %77, %74 ], [ null, %61 ]
  %81 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %80, i64 %65
  %82 = bitcast %"class.MARC::ThreadCTask"** %81 to i64*
  store i64 %52, i64* %82, align 8, !tbaa !72
  br i1 %66, label %85, label %83

83:                                               ; preds = %78
  %84 = inttoptr i64 %63 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %84, i64 %64, i1 false) #10
  br label %85

85:                                               ; preds = %83, %78
  %86 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %81, i64 1
  %87 = icmp eq i64 %63, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = inttoptr i64 %63 to i8*
  tail call void @_ZdlPv(i8* nonnull %89) #10
  br label %90

90:                                               ; preds = %88, %85
  %91 = bitcast %"class.std::vector.23"* %4 to i8**
  store i8* %79, i8** %91, align 8, !tbaa !96
  store %"class.MARC::ThreadCTask"** %86, %"class.MARC::ThreadCTask"*** %5, align 8, !tbaa !93
  %92 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %80, i64 %72
  br label %93

93:                                               ; preds = %57, %90
  %94 = phi %"class.MARC::ThreadCTask"*** [ %54, %90 ], [ %5, %57 ]
  %95 = phi %"class.MARC::ThreadCTask"** [ %92, %90 ], [ %60, %57 ]
  store %"class.MARC::ThreadCTask"** %95, %"class.MARC::ThreadCTask"*** %94, align 8, !tbaa !72
  br label %96

96:                                               ; preds = %93, %36
  %97 = phi i64 [ %41, %36 ], [ %52, %93 ]
  %98 = tail call i32 @pthread_spin_unlock(i32* nonnull %2) #10
  %99 = inttoptr i64 %97 to %"class.MARC::ThreadCTask"*
  ret %"class.MARC::ThreadCTask"* %99
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE4pushES2_(%"class.MARC::ThreadSafeMutexQueue.28"*, %"class.MARC::ThreadCTask"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = ptrtoint %"class.MARC::ThreadCTask"* %1 to i64
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %5, label %10

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %4, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %6) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZSt20__throw_system_errori(i32 %7) #33
  unreachable

10:                                               ; preds = %2, %5
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::queue.30", %"class.std::queue.30"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %14 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %13, align 8, !tbaa !99
  %15 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 2
  %16 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %15, align 8, !tbaa !102
  %17 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %16, i64 -1
  %18 = icmp eq %"class.MARC::ThreadCTask"** %14, %17
  br i1 %18, label %23, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.MARC::ThreadCTask"** %14 to i64*
  store i64 %3, i64* %20, align 8, !tbaa !72
  %21 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %13, align 8, !tbaa !99
  %22 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %21, i64 1
  store %"class.MARC::ThreadCTask"** %22, %"class.MARC::ThreadCTask"*** %13, align 8, !tbaa !99
  br label %52

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8, !tbaa !103
  %26 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %27 = bitcast %"class.MARC::ThreadCTask"**** %26 to i64*
  %28 = load i64, i64* %27, align 8, !tbaa !104
  %29 = bitcast %"class.std::queue.30"* %11 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !105
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  %33 = sub i64 %25, %32
  %34 = icmp ult i64 %33, 2
  br i1 %34, label %35, label %36

35:                                               ; preds = %23
  invoke void @_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE17_M_reallocate_mapEmb(%"class.std::deque.31"* nonnull %12, i64 1, i1 zeroext false)
          to label %36 unwind label %58

36:                                               ; preds = %35, %23
  %37 = invoke i8* @_Znwm(i64 512)
          to label %38 unwind label %58

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %40 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %26, align 8, !tbaa !104
  %41 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %40, i64 1
  %42 = bitcast %"class.MARC::ThreadCTask"*** %41 to i8**
  store i8* %37, i8** %42, align 8, !tbaa !72
  %43 = bitcast %"struct.std::_Deque_iterator.33"* %39 to i64**
  %44 = load i64*, i64** %43, align 8, !tbaa !99
  store i64 %3, i64* %44, align 8, !tbaa !72
  %45 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %26, align 8, !tbaa !104
  %46 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %45, i64 1
  store %"class.MARC::ThreadCTask"*** %46, %"class.MARC::ThreadCTask"**** %26, align 8, !tbaa !87
  %47 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %46, align 8, !tbaa !72
  %48 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  store %"class.MARC::ThreadCTask"** %47, %"class.MARC::ThreadCTask"*** %48, align 8, !tbaa !90
  %49 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %47, i64 64
  store %"class.MARC::ThreadCTask"** %49, %"class.MARC::ThreadCTask"*** %15, align 8, !tbaa !91
  %50 = ptrtoint %"class.MARC::ThreadCTask"** %47 to i64
  %51 = bitcast %"struct.std::_Deque_iterator.33"* %39 to i64*
  store i64 %50, i64* %51, align 8, !tbaa !99
  br label %52

52:                                               ; preds = %38, %19
  %53 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %53) #10
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %54, label %57

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %4, i64 0, i32 0, i32 0
  %56 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %55) #10
  br label %57

57:                                               ; preds = %52, %54
  ret void

58:                                               ; preds = %36, %35
  %59 = landingpad { i8*, i32 }
          cleanup
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %60, label %63

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %4, i64 0, i32 0, i32 0
  %62 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %61) #10
  br label %63

63:                                               ; preds = %58, %60
  resume { i8*, i32 } %59
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC19ThreadPoolInterface10expandPoolEv(%"class.MARC::ThreadPoolInterface"*) local_unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.11, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2.12, i64 0, i64 0), i32 216, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._ZN4MARC19ThreadPoolInterface10expandPoolEv, i64 0, i64 0)) #30
  unreachable

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 5
  %9 = load i8, i8* %8, align 8, !tbaa !106, !range !62
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %65, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.MARC::ThreadPoolInterface"* %0 to i64 (%"class.MARC::ThreadPoolInterface"*)***
  %13 = load i64 (%"class.MARC::ThreadPoolInterface"*)**, i64 (%"class.MARC::ThreadPoolInterface"*)*** %12, align 8, !tbaa !73
  %14 = load i64 (%"class.MARC::ThreadPoolInterface"*)*, i64 (%"class.MARC::ThreadPoolInterface"*)** %13, align 8
  %15 = tail call i64 %14(%"class.MARC::ThreadPoolInterface"* nonnull %0)
  %16 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %18 = bitcast %"class.std::thread"** %17 to i64*
  %19 = load i64, i64* %18, align 8, !tbaa !115
  %20 = bitcast %"class.std::vector"* %16 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !118
  %22 = icmp eq i64 %19, %21
  br i1 %22, label %44, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 0, %23 ], [ %36, %25 ]
  %27 = phi i32 [ 0, %23 ], [ %35, %25 ]
  %28 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %24, align 8, !tbaa !119
  %29 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %28, i64 %26
  %30 = load %"struct.std::atomic"*, %"struct.std::atomic"** %29, align 8, !tbaa !72
  %31 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %30, i64 0, i32 0, i32 0
  %32 = load atomic i8, i8* %31 seq_cst, align 1
  %33 = and i8 %32, 1
  %34 = zext i8 %33 to i32
  %35 = add i32 %27, %34
  %36 = add nuw i64 %26, 1
  %37 = load i64, i64* %18, align 8, !tbaa !115
  %38 = load i64, i64* %20, align 8, !tbaa !118
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ugt i64 %40, %36
  br i1 %41, label %25, label %42

42:                                               ; preds = %25
  %43 = zext i32 %35 to i64
  br label %44

44:                                               ; preds = %42, %11
  %45 = phi i64 [ 0, %11 ], [ %43, %42 ]
  %46 = icmp ugt i64 %15, %45
  br i1 %46, label %47, label %65

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 6
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %49, label %54

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %48, i64 0, i32 0, i32 0
  %51 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %50) #10
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  tail call void @_ZSt20__throw_system_errori(i32 %51) #33
  unreachable

54:                                               ; preds = %47, %49
  invoke void @_ZN4MARC19ThreadPoolInterface10newThreadsEj(%"class.MARC::ThreadPoolInterface"* nonnull %0, i32 2)
          to label %55 unwind label %59

55:                                               ; preds = %54
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %56, label %65

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %48, i64 0, i32 0, i32 0
  %58 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %57) #10
  br label %65

59:                                               ; preds = %54
  %60 = landingpad { i8*, i32 }
          cleanup
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %61, label %64

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %48, i64 0, i32 0, i32 0
  %63 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %62) #10
  br label %64

64:                                               ; preds = %59, %61
  resume { i8*, i32 } %60

65:                                               ; preds = %56, %55, %44, %7
  ret void
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) local_unnamed_addr #9

; Function Attrs: uwtable
define dso_local void @_ZN4MARC19ThreadPoolInterface10newThreadsEj(%"class.MARC::ThreadPoolInterface"*, i32) local_unnamed_addr #14 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = alloca i32, align 4
  %4 = alloca %"struct.std::atomic"*, align 8
  %5 = alloca void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)*, align 8
  %6 = alloca %"class.MARC::ThreadPoolInterface"*, align 8
  %7 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load atomic i8, i8* %7 seq_cst, align 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.11, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2.12, i64 0, i64 0), i32 172, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @__PRETTY_FUNCTION__._ZN4MARC19ThreadPoolInterface10newThreadsEj, i64 0, i64 0)) #30
  unreachable

12:                                               ; preds = %2
  %13 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #10
  store i32 0, i32* %3, align 4, !tbaa !122
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %.loopexit, label %15

15:                                               ; preds = %12
  %16 = bitcast %"struct.std::atomic"** %4 to i8*
  %17 = bitcast %"struct.std::atomic"** %4 to i8**
  %18 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 3
  %19 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %21 = bitcast %"struct.std::atomic"** %4 to i64*
  %22 = bitcast %"class.std::vector.0"* %18 to i64*
  %23 = bitcast %"class.std::vector.0"* %18 to i8**
  %24 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 2
  %25 = bitcast void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)** %5 to i8*
  %26 = bitcast %"class.MARC::ThreadPoolInterface"** %6 to i8*
  br label %27

.loopexit:                                        ; preds = %70, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #10
  ret void

27:                                               ; preds = %15, %70
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %28 = call i8* @_Znwm(i64 1) #34
  store i8 1, i8* %28, align 1, !tbaa !123
  store i8* %28, i8** %17, align 8, !tbaa !72
  %29 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %19, align 8, !tbaa !124
  %30 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %20, align 8, !tbaa !125
  %31 = icmp eq %"struct.std::atomic"** %29, %30
  %32 = ptrtoint i8* %28 to i64
  br i1 %31, label %37, label %33

33:                                               ; preds = %27
  %34 = bitcast %"struct.std::atomic"** %29 to i64*
  store i64 %32, i64* %34, align 8, !tbaa !72
  %35 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %19, align 8, !tbaa !124
  %36 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %35, i64 1
  br label %70

37:                                               ; preds = %27
  %38 = ptrtoint %"struct.std::atomic"** %29 to i64
  %39 = load i64, i64* %22, align 8, !tbaa !119
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, %41
  %45 = icmp ult i64 %44, %41
  %46 = icmp ugt i64 %44, 2305843009213693951
  %47 = or i1 %45, %46
  %48 = select i1 %47, i64 2305843009213693951, i64 %44
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %37
  %51 = shl i64 %48, 3
  %52 = call i8* @_Znwm(i64 %51)
  %53 = bitcast i8* %52 to %"struct.std::atomic"**
  %54 = load i64, i64* %21, align 8, !tbaa !72
  br label %55

55:                                               ; preds = %50, %37
  %56 = phi i64 [ %54, %50 ], [ %32, %37 ]
  %57 = phi i8* [ %52, %50 ], [ null, %37 ]
  %58 = phi %"struct.std::atomic"** [ %53, %50 ], [ null, %37 ]
  %59 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %58, i64 %41
  %60 = bitcast %"struct.std::atomic"** %59 to i64*
  store i64 %56, i64* %60, align 8, !tbaa !72
  br i1 %42, label %63, label %61

61:                                               ; preds = %55
  %62 = inttoptr i64 %39 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %62, i64 %40, i1 false) #10
  br label %63

63:                                               ; preds = %61, %55
  %64 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %59, i64 1
  %65 = icmp eq i64 %39, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = inttoptr i64 %39 to i8*
  call void @_ZdlPv(i8* nonnull %67) #10
  br label %68

68:                                               ; preds = %66, %63
  store i8* %57, i8** %23, align 8, !tbaa !119
  store %"struct.std::atomic"** %64, %"struct.std::atomic"*** %19, align 8, !tbaa !124
  %69 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %58, i64 %48
  br label %70

70:                                               ; preds = %33, %68
  %71 = phi %"struct.std::atomic"*** [ %19, %33 ], [ %20, %68 ]
  %72 = phi %"struct.std::atomic"** [ %36, %33 ], [ %69, %68 ]
  store %"struct.std::atomic"** %72, %"struct.std::atomic"*** %71, align 8, !tbaa !72
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  store void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)* @_ZN4MARC19ThreadPoolInterface24workerFunctionTrampolineEPS0_PSt6atomicIbEj, void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)** %5, align 8, !tbaa !72
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  store %"class.MARC::ThreadPoolInterface"* %0, %"class.MARC::ThreadPoolInterface"** %6, align 8, !tbaa !72
  call void @_ZNSt6vectorISt6threadSaIS0_EE12emplace_backIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES6_RS9_RiEEEvDpOT_(%"class.std::vector"* nonnull %24, void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)** nonnull dereferenceable(8) %5, %"class.MARC::ThreadPoolInterface"** nonnull dereferenceable(8) %6, %"struct.std::atomic"** nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  %73 = load i32, i32* %3, align 4, !tbaa !122
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %3, align 4, !tbaa !122
  %75 = icmp ult i32 %74, %1
  br i1 %75, label %27, label %.loopexit
}

; Function Attrs: nobuiltin nofree
declare dso_local noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #21

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: uwtable
define dso_local void @_ZN4MARC19ThreadPoolInterface24workerFunctionTrampolineEPS0_PSt6atomicIbEj(%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32) #14 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load atomic i8, i8* %4 seq_cst, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = bitcast %"class.MARC::ThreadPoolInterface"* %0 to void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)***
  %10 = load void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)**, void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)*** %9, align 8, !tbaa !73
  %11 = getelementptr inbounds void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)*, void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)** %10, i64 1
  %12 = load void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)*, void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)** %11, align 8
  tail call void %12(%"class.MARC::ThreadPoolInterface"* nonnull %0, %"struct.std::atomic"* %1, i32 %2)
  br label %13

13:                                               ; preds = %3, %8
  %14 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %1, i64 0, i32 0, i32 0
  store atomic i8 0, i8* %14 seq_cst, align 1
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt6threadSaIS0_EE12emplace_backIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES6_RS9_RiEEEvDpOT_(%"class.std::vector"*, void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)** dereferenceable(8), %"class.MARC::ThreadPoolInterface"** dereferenceable(8), %"struct.std::atomic"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %6 = alloca %"class.std::unique_ptr", align 8
  %7 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.std::thread"*, %"class.std::thread"** %7, align 8, !tbaa !115
  %9 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load %"class.std::thread"*, %"class.std::thread"** %9, align 8, !tbaa !126
  %11 = icmp eq %"class.std::thread"* %8, %10
  br i1 %11, label %56, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.std::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %8, i64 0, i32 0, i32 0
  store i64 0, i64* %14, align 8, !tbaa !127
  %15 = load i32, i32* %4, align 4, !tbaa !122, !noalias !129
  %16 = bitcast %"struct.std::atomic"** %3 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !72, !noalias !129
  %18 = bitcast %"class.MARC::ThreadPoolInterface"** %2 to i64*
  %19 = load i64, i64* %18, align 8, !tbaa !72, !noalias !129
  %20 = bitcast void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)** %1 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !72, !noalias !129
  %22 = tail call i8* @_Znwm(i64 40) #34, !noalias !132
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8, !tbaa !73, !noalias !132
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 %15, i32* %25, align 4, !tbaa !135, !noalias !132
  %26 = getelementptr inbounds i8, i8* %22, i64 16
  %27 = bitcast i8* %26 to i64*
  store i64 %17, i64* %27, align 8, !tbaa !137, !noalias !132
  %28 = getelementptr inbounds i8, i8* %22, i64 24
  %29 = bitcast i8* %28 to i64*
  store i64 %19, i64* %29, align 8, !tbaa !139, !noalias !132
  %30 = getelementptr inbounds i8, i8* %22, i64 32
  %31 = bitcast i8* %30 to i64*
  store i64 %21, i64* %31, align 8, !tbaa !141, !noalias !132
  %32 = bitcast %"class.std::unique_ptr"* %6 to i8**
  store i8* %22, i8** %32, align 8, !tbaa !72, !alias.scope !132
  invoke void @_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE(%"class.std::thread"* %8, %"class.std::unique_ptr"* nonnull %6, void ()* bitcast (i32 (i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*)* @pthread_create to void ()*))
          to label %33 unwind label %42

33:                                               ; preds = %12
  %34 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %34, align 8, !tbaa !72
  %36 = icmp eq %"class.MARC::IThreadTask"* %35, null
  br i1 %36, label %53, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.MARC::IThreadTask"* %35 to void (%"class.MARC::IThreadTask"*)***
  %39 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %38, align 8, !tbaa !73
  %40 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %39, i64 1
  %41 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %40, align 8
  call void %41(%"class.MARC::IThreadTask"* nonnull %35) #10
  br label %53

42:                                               ; preds = %12
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %44, align 8, !tbaa !72
  %46 = icmp eq %"class.MARC::IThreadTask"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.MARC::IThreadTask"* %45 to void (%"class.MARC::IThreadTask"*)***
  %49 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %48, align 8, !tbaa !73
  %50 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %49, i64 1
  %51 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %50, align 8
  call void %51(%"class.MARC::IThreadTask"* nonnull %45) #10
  br label %52

52:                                               ; preds = %47, %42
  resume { i8*, i32 } %43

53:                                               ; preds = %33, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %54 = load %"class.std::thread"*, %"class.std::thread"** %7, align 8, !tbaa !115
  %55 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %54, i64 1
  store %"class.std::thread"* %55, %"class.std::thread"** %7, align 8, !tbaa !115
  br label %57

56:                                               ; preds = %5
  tail call void @_ZNSt6vectorISt6threadSaIS0_EE17_M_realloc_insertIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES6_RS9_RiEEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_(%"class.std::vector"* nonnull %0, %"class.std::thread"* %8, void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)** nonnull dereferenceable(8) %1, %"class.MARC::ThreadPoolInterface"** nonnull dereferenceable(8) %2, %"struct.std::atomic"** nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) %4)
  br label %57

57:                                               ; preds = %56, %53
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) #17

declare dso_local void @_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE(%"class.std::thread"*, %"class.std::unique_ptr"*, void ()*) local_unnamed_addr #19

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt6threadSaIS0_EE17_M_realloc_insertIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES6_RS9_RiEEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_(%"class.std::vector"*, %"class.std::thread"*, void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)** dereferenceable(8), %"class.MARC::ThreadPoolInterface"** dereferenceable(8), %"struct.std::atomic"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %7 = ptrtoint %"class.std::thread"* %1 to i64
  %8 = alloca %"class.std::unique_ptr", align 8
  %9 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::thread"** %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !115
  %12 = bitcast %"class.std::vector"* %0 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !118
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp eq i64 %14, 0
  %17 = select i1 %16, i64 1, i64 %15
  %18 = add nsw i64 %17, %15
  %19 = icmp ult i64 %18, %15
  %20 = icmp ugt i64 %18, 2305843009213693951
  %21 = or i1 %19, %20
  %22 = select i1 %21, i64 2305843009213693951, i64 %18
  %23 = inttoptr i64 %13 to %"class.std::thread"*
  %24 = inttoptr i64 %13 to i8*
  %25 = inttoptr i64 %11 to %"class.std::thread"*
  %26 = sub i64 %7, %13
  %27 = ashr exact i64 %26, 3
  %28 = icmp eq i64 %22, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %6
  %30 = shl i64 %22, 3
  %31 = tail call i8* @_Znwm(i64 %30)
  %32 = bitcast i8* %31 to %"class.std::thread"*
  br label %33

33:                                               ; preds = %6, %29
  %34 = phi i8* [ %31, %29 ], [ null, %6 ]
  %35 = phi %"class.std::thread"* [ %32, %29 ], [ null, %6 ]
  %36 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %35, i64 %27
  %37 = bitcast %"class.std::unique_ptr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %36, i64 0, i32 0, i32 0
  store i64 0, i64* %38, align 8, !tbaa !127
  %39 = load i32, i32* %5, align 4, !tbaa !122, !noalias !143
  %40 = bitcast %"struct.std::atomic"** %4 to i64*
  %41 = load i64, i64* %40, align 8, !tbaa !72, !noalias !143
  %42 = bitcast %"class.MARC::ThreadPoolInterface"** %3 to i64*
  %43 = load i64, i64* %42, align 8, !tbaa !72, !noalias !143
  %44 = bitcast void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)** %2 to i64*
  %45 = load i64, i64* %44, align 8, !tbaa !72, !noalias !143
  %46 = invoke i8* @_Znwm(i64 40) #34
          to label %47 unwind label %312

47:                                               ; preds = %33
  %48 = bitcast i8* %46 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8, !tbaa !73, !noalias !146
  %49 = getelementptr inbounds i8, i8* %46, i64 8
  %50 = bitcast i8* %49 to i32*
  store i32 %39, i32* %50, align 4, !tbaa !135, !noalias !146
  %51 = getelementptr inbounds i8, i8* %46, i64 16
  %52 = bitcast i8* %51 to i64*
  store i64 %41, i64* %52, align 8, !tbaa !137, !noalias !146
  %53 = getelementptr inbounds i8, i8* %46, i64 24
  %54 = bitcast i8* %53 to i64*
  store i64 %43, i64* %54, align 8, !tbaa !139, !noalias !146
  %55 = getelementptr inbounds i8, i8* %46, i64 32
  %56 = bitcast i8* %55 to i64*
  store i64 %45, i64* %56, align 8, !tbaa !141, !noalias !146
  %57 = bitcast %"class.std::unique_ptr"* %8 to i8**
  store i8* %46, i8** %57, align 8, !tbaa !72, !alias.scope !146
  invoke void @_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE(%"class.std::thread"* %36, %"class.std::unique_ptr"* nonnull %8, void ()* bitcast (i32 (i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*)* @pthread_create to void ()*))
          to label %58 unwind label %67

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %59, align 8, !tbaa !72
  %61 = icmp eq %"class.MARC::IThreadTask"* %60, null
  br i1 %61, label %77, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.MARC::IThreadTask"* %60 to void (%"class.MARC::IThreadTask"*)***
  %64 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %63, align 8, !tbaa !73
  %65 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %64, i64 1
  %66 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %65, align 8
  call void %66(%"class.MARC::IThreadTask"* nonnull %60) #10
  br label %77

67:                                               ; preds = %47
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %69, align 8, !tbaa !72
  %71 = icmp eq %"class.MARC::IThreadTask"* %70, null
  br i1 %71, label %314, label %72

72:                                               ; preds = %67
  %73 = bitcast %"class.MARC::IThreadTask"* %70 to void (%"class.MARC::IThreadTask"*)***
  %74 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %73, align 8, !tbaa !73
  %75 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %74, i64 1
  %76 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %75, align 8
  call void %76(%"class.MARC::IThreadTask"* nonnull %70) #10
  br label %314

77:                                               ; preds = %62, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  %78 = icmp eq %"class.std::thread"* %23, %1
  br i1 %78, label %.loopexit18, label %79

79:                                               ; preds = %77
  %80 = getelementptr %"class.std::thread", %"class.std::thread"* %1, i64 -1, i32 0, i32 0
  %81 = bitcast i64* %80 to i8*
  %82 = sub i64 0, %13
  %83 = getelementptr i8, i8* %81, i64 %82
  %84 = ptrtoint i8* %83 to i64
  %85 = lshr i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = icmp ult i64 %86, 4
  br i1 %87, label %149, label %88

88:                                               ; preds = %79
  %89 = getelementptr %"class.std::thread", %"class.std::thread"* %35, i64 %86
  %90 = bitcast %"class.std::thread"* %89 to i8*
  %91 = getelementptr %"class.std::thread", %"class.std::thread"* %23, i64 %86
  %92 = bitcast %"class.std::thread"* %91 to i8*
  %93 = icmp ult i8* %34, %92
  %94 = icmp ult i8* %24, %90
  %95 = and i1 %93, %94
  br i1 %95, label %149, label %96

96:                                               ; preds = %88
  %97 = and i64 %86, 4611686018427387900
  %98 = getelementptr %"class.std::thread", %"class.std::thread"* %35, i64 %97
  %99 = getelementptr %"class.std::thread", %"class.std::thread"* %23, i64 %97
  %100 = add nsw i64 %97, -4
  %101 = lshr exact i64 %100, 2
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 1
  %104 = icmp eq i64 %100, 0
  br i1 %104, label %.loopexit21, label %105

105:                                              ; preds = %96
  %106 = sub nuw nsw i64 %102, %103
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %131, %107 ]
  %109 = phi i64 [ %106, %105 ], [ %132, %107 ]
  %110 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %35, i64 %108, i32 0, i32 0
  %111 = bitcast i64* %110 to <2 x i64>*
  %112 = getelementptr i64, i64* %110, i64 2
  %113 = bitcast i64* %112 to <2 x i64>*
  %114 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %23, i64 %108, i32 0, i32 0
  %115 = bitcast i64* %114 to <2 x i64>*
  %116 = load <2 x i64>, <2 x i64>* %115, align 8, !tbaa !149, !alias.scope !150
  %117 = getelementptr i64, i64* %114, i64 2
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !tbaa !149, !alias.scope !150
  store <2 x i64> %116, <2 x i64>* %111, align 8, !tbaa !149, !alias.scope !153, !noalias !150
  store <2 x i64> %119, <2 x i64>* %113, align 8, !tbaa !149, !alias.scope !153, !noalias !150
  store <2 x i64> zeroinitializer, <2 x i64>* %115, align 8, !tbaa !149, !alias.scope !150
  store <2 x i64> zeroinitializer, <2 x i64>* %118, align 8, !tbaa !149, !alias.scope !150
  %120 = or i64 %108, 4
  %121 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %35, i64 %120, i32 0, i32 0
  %122 = bitcast i64* %121 to <2 x i64>*
  %123 = getelementptr i64, i64* %121, i64 2
  %124 = bitcast i64* %123 to <2 x i64>*
  %125 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %23, i64 %120, i32 0, i32 0
  %126 = bitcast i64* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !tbaa !149, !alias.scope !150
  %128 = getelementptr i64, i64* %125, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !tbaa !149, !alias.scope !150
  store <2 x i64> %127, <2 x i64>* %122, align 8, !tbaa !149, !alias.scope !153, !noalias !150
  store <2 x i64> %130, <2 x i64>* %124, align 8, !tbaa !149, !alias.scope !153, !noalias !150
  store <2 x i64> zeroinitializer, <2 x i64>* %126, align 8, !tbaa !149, !alias.scope !150
  store <2 x i64> zeroinitializer, <2 x i64>* %129, align 8, !tbaa !149, !alias.scope !150
  %131 = add i64 %108, 8
  %132 = add i64 %109, -2
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %.loopexit21, label %107, !llvm.loop !155

.loopexit21:                                      ; preds = %107, %96
  %134 = phi i64 [ 0, %96 ], [ %131, %107 ]
  %135 = icmp eq i64 %103, 0
  br i1 %135, label %147, label %136

136:                                              ; preds = %.loopexit21
  %137 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %35, i64 %134, i32 0, i32 0
  %138 = bitcast i64* %137 to <2 x i64>*
  %139 = getelementptr i64, i64* %137, i64 2
  %140 = bitcast i64* %139 to <2 x i64>*
  %141 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %23, i64 %134, i32 0, i32 0
  %142 = bitcast i64* %141 to <2 x i64>*
  %143 = load <2 x i64>, <2 x i64>* %142, align 8, !tbaa !149, !alias.scope !150
  %144 = getelementptr i64, i64* %141, i64 2
  %145 = bitcast i64* %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !tbaa !149, !alias.scope !150
  store <2 x i64> %143, <2 x i64>* %138, align 8, !tbaa !149, !alias.scope !153, !noalias !150
  store <2 x i64> %146, <2 x i64>* %140, align 8, !tbaa !149, !alias.scope !153, !noalias !150
  store <2 x i64> zeroinitializer, <2 x i64>* %142, align 8, !tbaa !149, !alias.scope !150
  store <2 x i64> zeroinitializer, <2 x i64>* %145, align 8, !tbaa !149, !alias.scope !150
  br label %147

147:                                              ; preds = %.loopexit21, %136
  %148 = icmp eq i64 %86, %97
  br i1 %148, label %.loopexit18, label %149

149:                                              ; preds = %147, %88, %79
  %150 = phi %"class.std::thread"* [ %35, %88 ], [ %35, %79 ], [ %98, %147 ]
  %151 = phi %"class.std::thread"* [ %23, %88 ], [ %23, %79 ], [ %99, %147 ]
  %152 = ptrtoint %"class.std::thread"* %151 to i64
  %153 = ptrtoint i64* %80 to i64
  %154 = sub i64 %153, %152
  %155 = lshr i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %.loopexit20, label %.preheader19

.preheader19:                                     ; preds = %149, %.preheader19
  %159 = phi %"class.std::thread"* [ %166, %.preheader19 ], [ %150, %149 ]
  %160 = phi %"class.std::thread"* [ %165, %.preheader19 ], [ %151, %149 ]
  %161 = phi i64 [ %167, %.preheader19 ], [ %157, %149 ]
  %162 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %159, i64 0, i32 0, i32 0
  store i64 0, i64* %162, align 8, !tbaa !127
  %163 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %160, i64 0, i32 0, i32 0
  %164 = load i64, i64* %163, align 8, !tbaa !149
  store i64 %164, i64* %162, align 8, !tbaa !149
  store i64 0, i64* %163, align 8, !tbaa !149
  %165 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %160, i64 1
  %166 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %159, i64 1
  %167 = add nsw i64 %161, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %.loopexit20, label %.preheader19, !llvm.loop !156

.loopexit20:                                      ; preds = %.preheader19, %149
  %169 = phi %"class.std::thread"* [ undef, %149 ], [ %166, %.preheader19 ]
  %170 = phi %"class.std::thread"* [ %150, %149 ], [ %166, %.preheader19 ]
  %171 = phi %"class.std::thread"* [ %151, %149 ], [ %165, %.preheader19 ]
  %172 = icmp ult i64 %154, 24
  br i1 %172, label %.loopexit18, label %.preheader17

.preheader17:                                     ; preds = %.loopexit20, %.preheader17
  %173 = phi %"class.std::thread"* [ %188, %.preheader17 ], [ %170, %.loopexit20 ]
  %174 = phi %"class.std::thread"* [ %187, %.preheader17 ], [ %171, %.loopexit20 ]
  %175 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %173, i64 0, i32 0, i32 0
  store i64 0, i64* %175, align 8, !tbaa !127
  %176 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %174, i64 0, i32 0, i32 0
  %177 = load i64, i64* %176, align 8, !tbaa !149
  store i64 %177, i64* %175, align 8, !tbaa !149
  store i64 0, i64* %176, align 8, !tbaa !149
  %178 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %173, i64 1, i32 0, i32 0
  store i64 0, i64* %178, align 8, !tbaa !127
  %179 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %174, i64 1, i32 0, i32 0
  %180 = load i64, i64* %179, align 8, !tbaa !149
  store i64 %180, i64* %178, align 8, !tbaa !149
  store i64 0, i64* %179, align 8, !tbaa !149
  %181 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %173, i64 2, i32 0, i32 0
  store i64 0, i64* %181, align 8, !tbaa !127
  %182 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %174, i64 2, i32 0, i32 0
  %183 = load i64, i64* %182, align 8, !tbaa !149
  store i64 %183, i64* %181, align 8, !tbaa !149
  store i64 0, i64* %182, align 8, !tbaa !149
  %184 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %173, i64 3, i32 0, i32 0
  store i64 0, i64* %184, align 8, !tbaa !127
  %185 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %174, i64 3, i32 0, i32 0
  %186 = load i64, i64* %185, align 8, !tbaa !149
  store i64 %186, i64* %184, align 8, !tbaa !149
  store i64 0, i64* %185, align 8, !tbaa !149
  %187 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %174, i64 4
  %188 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %173, i64 4
  %189 = icmp eq %"class.std::thread"* %187, %1
  br i1 %189, label %.loopexit18, label %.preheader17, !llvm.loop !157

.loopexit18:                                      ; preds = %.preheader17, %.loopexit20, %147, %77
  %190 = phi %"class.std::thread"* [ %35, %77 ], [ %98, %147 ], [ %169, %.loopexit20 ], [ %188, %.preheader17 ]
  %191 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %190, i64 1
  %192 = icmp eq %"class.std::thread"* %25, %1
  br i1 %192, label %.loopexit13, label %193

193:                                              ; preds = %.loopexit18
  %194 = getelementptr %"class.std::thread", %"class.std::thread"* %25, i64 -1, i32 0, i32 0
  %195 = ptrtoint i64* %194 to i64
  %196 = sub i64 %195, %7
  %197 = lshr i64 %196, 3
  %198 = add nuw nsw i64 %197, 1
  %199 = icmp ult i64 %198, 4
  br i1 %199, label %260, label %200

200:                                              ; preds = %193
  %201 = add nuw nsw i64 %197, 2
  %202 = getelementptr %"class.std::thread", %"class.std::thread"* %190, i64 %201
  %203 = getelementptr %"class.std::thread", %"class.std::thread"* %1, i64 %198
  %204 = icmp ult %"class.std::thread"* %191, %203
  %205 = icmp ugt %"class.std::thread"* %202, %1
  %206 = and i1 %204, %205
  br i1 %206, label %260, label %207

207:                                              ; preds = %200
  %208 = and i64 %198, 4611686018427387900
  %209 = getelementptr %"class.std::thread", %"class.std::thread"* %191, i64 %208
  %210 = getelementptr %"class.std::thread", %"class.std::thread"* %1, i64 %208
  %211 = add nsw i64 %208, -4
  %212 = lshr exact i64 %211, 2
  %213 = add nuw nsw i64 %212, 1
  %214 = and i64 %213, 1
  %215 = icmp eq i64 %211, 0
  br i1 %215, label %.loopexit16, label %216

216:                                              ; preds = %207
  %217 = sub nuw nsw i64 %213, %214
  br label %218

218:                                              ; preds = %218, %216
  %219 = phi i64 [ 0, %216 ], [ %242, %218 ]
  %220 = phi i64 [ %217, %216 ], [ %243, %218 ]
  %221 = getelementptr %"class.std::thread", %"class.std::thread"* %191, i64 %219
  %222 = bitcast %"class.std::thread"* %221 to <2 x i64>*
  %223 = getelementptr %"class.std::thread", %"class.std::thread"* %221, i64 2
  %224 = bitcast %"class.std::thread"* %223 to <2 x i64>*
  %225 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %1, i64 %219, i32 0, i32 0
  %226 = bitcast i64* %225 to <2 x i64>*
  %227 = load <2 x i64>, <2 x i64>* %226, align 8, !tbaa !149, !alias.scope !158
  %228 = getelementptr i64, i64* %225, i64 2
  %229 = bitcast i64* %228 to <2 x i64>*
  %230 = load <2 x i64>, <2 x i64>* %229, align 8, !tbaa !149, !alias.scope !158
  store <2 x i64> %227, <2 x i64>* %222, align 8, !tbaa !149, !alias.scope !161, !noalias !158
  store <2 x i64> %230, <2 x i64>* %224, align 8, !tbaa !149, !alias.scope !161, !noalias !158
  store <2 x i64> zeroinitializer, <2 x i64>* %226, align 8, !tbaa !149, !alias.scope !158
  store <2 x i64> zeroinitializer, <2 x i64>* %229, align 8, !tbaa !149, !alias.scope !158
  %231 = or i64 %219, 4
  %232 = getelementptr %"class.std::thread", %"class.std::thread"* %191, i64 %231
  %233 = bitcast %"class.std::thread"* %232 to <2 x i64>*
  %234 = getelementptr %"class.std::thread", %"class.std::thread"* %232, i64 2
  %235 = bitcast %"class.std::thread"* %234 to <2 x i64>*
  %236 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %1, i64 %231, i32 0, i32 0
  %237 = bitcast i64* %236 to <2 x i64>*
  %238 = load <2 x i64>, <2 x i64>* %237, align 8, !tbaa !149, !alias.scope !158
  %239 = getelementptr i64, i64* %236, i64 2
  %240 = bitcast i64* %239 to <2 x i64>*
  %241 = load <2 x i64>, <2 x i64>* %240, align 8, !tbaa !149, !alias.scope !158
  store <2 x i64> %238, <2 x i64>* %233, align 8, !tbaa !149, !alias.scope !161, !noalias !158
  store <2 x i64> %241, <2 x i64>* %235, align 8, !tbaa !149, !alias.scope !161, !noalias !158
  store <2 x i64> zeroinitializer, <2 x i64>* %237, align 8, !tbaa !149, !alias.scope !158
  store <2 x i64> zeroinitializer, <2 x i64>* %240, align 8, !tbaa !149, !alias.scope !158
  %242 = add i64 %219, 8
  %243 = add i64 %220, -2
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %.loopexit16, label %218, !llvm.loop !163

.loopexit16:                                      ; preds = %218, %207
  %245 = phi i64 [ 0, %207 ], [ %242, %218 ]
  %246 = icmp eq i64 %214, 0
  br i1 %246, label %258, label %247

247:                                              ; preds = %.loopexit16
  %248 = getelementptr %"class.std::thread", %"class.std::thread"* %191, i64 %245
  %249 = bitcast %"class.std::thread"* %248 to <2 x i64>*
  %250 = getelementptr %"class.std::thread", %"class.std::thread"* %248, i64 2
  %251 = bitcast %"class.std::thread"* %250 to <2 x i64>*
  %252 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %1, i64 %245, i32 0, i32 0
  %253 = bitcast i64* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !tbaa !149, !alias.scope !158
  %255 = getelementptr i64, i64* %252, i64 2
  %256 = bitcast i64* %255 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 8, !tbaa !149, !alias.scope !158
  store <2 x i64> %254, <2 x i64>* %249, align 8, !tbaa !149, !alias.scope !161, !noalias !158
  store <2 x i64> %257, <2 x i64>* %251, align 8, !tbaa !149, !alias.scope !161, !noalias !158
  store <2 x i64> zeroinitializer, <2 x i64>* %253, align 8, !tbaa !149, !alias.scope !158
  store <2 x i64> zeroinitializer, <2 x i64>* %256, align 8, !tbaa !149, !alias.scope !158
  br label %258

258:                                              ; preds = %.loopexit16, %247
  %259 = icmp eq i64 %198, %208
  br i1 %259, label %.loopexit13, label %._crit_edge

._crit_edge:                                      ; preds = %258
  %.pre = ptrtoint %"class.std::thread"* %210 to i64
  %.pre36 = sub i64 %195, %.pre
  %.pre38 = lshr i64 %.pre36, 3
  %.pre40 = add nuw nsw i64 %.pre38, 1
  br label %260

260:                                              ; preds = %._crit_edge, %200, %193
  %.pre-phi41 = phi i64 [ %.pre40, %._crit_edge ], [ %198, %200 ], [ %198, %193 ]
  %.pre-phi37 = phi i64 [ %.pre36, %._crit_edge ], [ %196, %200 ], [ %196, %193 ]
  %261 = phi %"class.std::thread"* [ %209, %._crit_edge ], [ %191, %200 ], [ %191, %193 ]
  %262 = phi %"class.std::thread"* [ %210, %._crit_edge ], [ %1, %200 ], [ %1, %193 ]
  %263 = and i64 %.pre-phi41, 3
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %.loopexit15, label %.preheader14

.preheader14:                                     ; preds = %260, %.preheader14
  %265 = phi %"class.std::thread"* [ %272, %.preheader14 ], [ %261, %260 ]
  %266 = phi %"class.std::thread"* [ %271, %.preheader14 ], [ %262, %260 ]
  %267 = phi i64 [ %273, %.preheader14 ], [ %263, %260 ]
  %268 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %265, i64 0, i32 0, i32 0
  store i64 0, i64* %268, align 8, !tbaa !127
  %269 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %266, i64 0, i32 0, i32 0
  %270 = load i64, i64* %269, align 8, !tbaa !149
  store i64 %270, i64* %268, align 8, !tbaa !149
  store i64 0, i64* %269, align 8, !tbaa !149
  %271 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %266, i64 1
  %272 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %265, i64 1
  %273 = add nsw i64 %267, -1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %.loopexit15, label %.preheader14, !llvm.loop !164

.loopexit15:                                      ; preds = %.preheader14, %260
  %275 = phi %"class.std::thread"* [ undef, %260 ], [ %272, %.preheader14 ]
  %276 = phi %"class.std::thread"* [ %261, %260 ], [ %272, %.preheader14 ]
  %277 = phi %"class.std::thread"* [ %262, %260 ], [ %271, %.preheader14 ]
  %278 = icmp ult i64 %.pre-phi37, 24
  br i1 %278, label %.loopexit13, label %.preheader12

.preheader12:                                     ; preds = %.loopexit15, %.preheader12
  %279 = phi %"class.std::thread"* [ %294, %.preheader12 ], [ %276, %.loopexit15 ]
  %280 = phi %"class.std::thread"* [ %293, %.preheader12 ], [ %277, %.loopexit15 ]
  %281 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %279, i64 0, i32 0, i32 0
  store i64 0, i64* %281, align 8, !tbaa !127
  %282 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %280, i64 0, i32 0, i32 0
  %283 = load i64, i64* %282, align 8, !tbaa !149
  store i64 %283, i64* %281, align 8, !tbaa !149
  store i64 0, i64* %282, align 8, !tbaa !149
  %284 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %279, i64 1, i32 0, i32 0
  store i64 0, i64* %284, align 8, !tbaa !127
  %285 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %280, i64 1, i32 0, i32 0
  %286 = load i64, i64* %285, align 8, !tbaa !149
  store i64 %286, i64* %284, align 8, !tbaa !149
  store i64 0, i64* %285, align 8, !tbaa !149
  %287 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %279, i64 2, i32 0, i32 0
  store i64 0, i64* %287, align 8, !tbaa !127
  %288 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %280, i64 2, i32 0, i32 0
  %289 = load i64, i64* %288, align 8, !tbaa !149
  store i64 %289, i64* %287, align 8, !tbaa !149
  store i64 0, i64* %288, align 8, !tbaa !149
  %290 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %279, i64 3, i32 0, i32 0
  store i64 0, i64* %290, align 8, !tbaa !127
  %291 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %280, i64 3, i32 0, i32 0
  %292 = load i64, i64* %291, align 8, !tbaa !149
  store i64 %292, i64* %290, align 8, !tbaa !149
  store i64 0, i64* %291, align 8, !tbaa !149
  %293 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %280, i64 4
  %294 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %279, i64 4
  %295 = icmp eq %"class.std::thread"* %293, %25
  br i1 %295, label %.loopexit13, label %.preheader12, !llvm.loop !165

.loopexit13:                                      ; preds = %.preheader12, %.loopexit15, %258, %.loopexit18
  %296 = phi %"class.std::thread"* [ %191, %.loopexit18 ], [ %209, %258 ], [ %275, %.loopexit15 ], [ %294, %.preheader12 ]
  %297 = icmp eq %"class.std::thread"* %23, %25
  br i1 %297, label %.loopexit, label %.preheader

298:                                              ; preds = %.preheader
  %299 = icmp eq %"class.std::thread"* %304, %25
  br i1 %299, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %.loopexit13, %298
  %300 = phi %"class.std::thread"* [ %304, %298 ], [ %23, %.loopexit13 ]
  %301 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %300, i64 0, i32 0, i32 0
  %302 = load i64, i64* %301, align 8
  %303 = icmp eq i64 %302, 0
  %304 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %300, i64 1
  br i1 %303, label %298, label %305

305:                                              ; preds = %.preheader
  call void @_ZSt9terminatev() #30
  unreachable

.loopexit:                                        ; preds = %298, %.loopexit13
  %306 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 2
  %307 = icmp eq i64 %13, 0
  br i1 %307, label %309, label %308

308:                                              ; preds = %.loopexit
  call void @_ZdlPv(i8* nonnull %24) #10
  br label %309

309:                                              ; preds = %.loopexit, %308
  %310 = bitcast %"class.std::vector"* %0 to i8**
  store i8* %34, i8** %310, align 8, !tbaa !118
  store %"class.std::thread"* %296, %"class.std::thread"** %9, align 8, !tbaa !115
  %311 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %35, i64 %22
  store %"class.std::thread"* %311, %"class.std::thread"** %306, align 8, !tbaa !126
  ret void

312:                                              ; preds = %33
  %313 = landingpad { i8*, i32 }
          catch i8* null
  br label %314

314:                                              ; preds = %67, %72, %312
  %315 = phi { i8*, i32 } [ %313, %312 ], [ %68, %72 ], [ %68, %67 ]
  %316 = extractvalue { i8*, i32 } %315, 0
  %317 = call i8* @__cxa_begin_catch(i8* %316) #10
  %318 = icmp eq %"class.std::thread"* %35, null
  br i1 %318, label %319, label %325

319:                                              ; preds = %314
  %320 = load i64, i64* %38, align 8
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %326, label %322

322:                                              ; preds = %319
  call void @_ZSt9terminatev() #30
  unreachable

323:                                              ; preds = %326
  %324 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %327 unwind label %328

325:                                              ; preds = %314
  call void @_ZdlPv(i8* nonnull %34) #10
  br label %326

326:                                              ; preds = %319, %325
  invoke void @__cxa_rethrow() #33
          to label %331 unwind label %323

327:                                              ; preds = %323
  resume { i8*, i32 } %324

328:                                              ; preds = %323
  %329 = landingpad { i8*, i32 }
          catch i8* null
  %330 = extractvalue { i8*, i32 } %329, 0
  call void @__clang_call_terminate(i8* %330) #30
  unreachable

331:                                              ; preds = %326
  unreachable
}

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

declare dso_local void @__cxa_rethrow() local_unnamed_addr

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) local_unnamed_addr #22 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #10
  tail call void @_ZSt9terminatev() #30
  unreachable
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt6thread6_StateD2Ev(%"class.MARC::IThreadTask"*) unnamed_addr #17

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEED0Ev(%"struct.std::thread::_State_impl"*) unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::thread::_State_impl", %"struct.std::thread::_State_impl"* %0, i64 0, i32 0
  tail call void @_ZNSt6thread6_StateD2Ev(%"class.MARC::IThreadTask"* %2) #10
  %3 = bitcast %"struct.std::thread::_State_impl"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #32
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEE6_M_runEv(%"struct.std::thread::_State_impl"*) unnamed_addr #14 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::thread::_State_impl", %"struct.std::thread::_State_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = getelementptr inbounds %"struct.std::thread::_State_impl", %"struct.std::thread::_State_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %4 = getelementptr inbounds %"struct.std::thread::_State_impl", %"struct.std::thread::_State_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %5 = getelementptr inbounds %"struct.std::thread::_State_impl", %"struct.std::thread::_State_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)*, void (%"class.MARC::ThreadPoolInterface"*, %"struct.std::atomic"*, i32)** %2, align 8, !tbaa !72
  %7 = load %"class.MARC::ThreadPoolInterface"*, %"class.MARC::ThreadPoolInterface"** %3, align 8, !tbaa !72
  %8 = load %"struct.std::atomic"*, %"struct.std::atomic"** %4, align 8, !tbaa !72
  %9 = load i32, i32* %5, align 4, !tbaa !122
  tail call void %6(%"class.MARC::ThreadPoolInterface"* %7, %"struct.std::atomic"* %8, i32 %9)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE17_M_reallocate_mapEmb(%"class.std::deque.31"*, i64, i1 zeroext) local_unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::deque.31", %"class.std::deque.31"* %0, i64 0, i32 0, i32 0, i32 3, i32 3
  %5 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %4, align 8, !tbaa !104
  %6 = getelementptr inbounds %"class.std::deque.31", %"class.std::deque.31"* %0, i64 0, i32 0, i32 0, i32 2, i32 3
  %7 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %6, align 8, !tbaa !166
  %8 = ptrtoint %"class.MARC::ThreadCTask"*** %5 to i64
  %9 = ptrtoint %"class.MARC::ThreadCTask"*** %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 3
  %12 = add nsw i64 %11, 1
  %13 = add i64 %12, %1
  %14 = getelementptr inbounds %"class.std::deque.31", %"class.std::deque.31"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !tbaa !103
  %16 = shl i64 %13, 1
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %18, label %43

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.std::deque.31", %"class.std::deque.31"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %19, align 8, !tbaa !105
  %21 = sub i64 %15, %13
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %20, i64 %22
  %24 = select i1 %2, i64 %1, i64 0
  %25 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %23, i64 %24
  %26 = icmp ult %"class.MARC::ThreadCTask"*** %25, %7
  %27 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %5, i64 1
  %28 = ptrtoint %"class.MARC::ThreadCTask"*** %27 to i64
  %29 = sub i64 %28, %9
  %30 = icmp eq i64 %29, 0
  br i1 %26, label %31, label %35

31:                                               ; preds = %18
  br i1 %30, label %72, label %32

32:                                               ; preds = %31
  %33 = bitcast %"class.MARC::ThreadCTask"*** %25 to i8*
  %34 = bitcast %"class.MARC::ThreadCTask"*** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 %29, i1 false) #10
  br label %72

35:                                               ; preds = %18
  br i1 %30, label %72, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %25, i64 %12
  %38 = ashr exact i64 %29, 3
  %39 = sub nsw i64 0, %38
  %40 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %37, i64 %39
  %41 = bitcast %"class.MARC::ThreadCTask"*** %40 to i8*
  %42 = bitcast %"class.MARC::ThreadCTask"*** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 %29, i1 false) #10
  br label %72

43:                                               ; preds = %3
  %44 = icmp ult i64 %15, %1
  %45 = select i1 %44, i64 %1, i64 %15
  %46 = add i64 %15, 2
  %47 = add i64 %46, %45
  %48 = icmp ugt i64 %47, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %43
  tail call void @_ZSt17__throw_bad_allocv() #33
  unreachable

50:                                               ; preds = %43
  %51 = shl i64 %47, 3
  %52 = tail call i8* @_Znwm(i64 %51)
  %53 = bitcast i8* %52 to %"class.MARC::ThreadCTask"***
  %54 = sub i64 %47, %13
  %55 = lshr i64 %54, 1
  %56 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %53, i64 %55
  %57 = select i1 %2, i64 %1, i64 0
  %58 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %56, i64 %57
  %59 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %6, align 8, !tbaa !166
  %60 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %4, align 8, !tbaa !104
  %61 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %60, i64 1
  %62 = ptrtoint %"class.MARC::ThreadCTask"*** %61 to i64
  %63 = ptrtoint %"class.MARC::ThreadCTask"*** %59 to i64
  %64 = sub i64 %62, %63
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %50
  %67 = bitcast %"class.MARC::ThreadCTask"*** %58 to i8*
  %68 = bitcast %"class.MARC::ThreadCTask"*** %59 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %68, i64 %64, i1 false) #10
  br label %69

69:                                               ; preds = %50, %66
  %70 = bitcast %"class.std::deque.31"* %0 to i8**
  %71 = load i8*, i8** %70, align 8, !tbaa !105
  tail call void @_ZdlPv(i8* %71) #10
  store i8* %52, i8** %70, align 8, !tbaa !105
  store i64 %47, i64* %14, align 8, !tbaa !103
  br label %72

72:                                               ; preds = %36, %35, %32, %31, %69
  %73 = phi %"class.MARC::ThreadCTask"*** [ %58, %69 ], [ %25, %31 ], [ %25, %32 ], [ %25, %35 ], [ %25, %36 ]
  store %"class.MARC::ThreadCTask"*** %73, %"class.MARC::ThreadCTask"**** %6, align 8, !tbaa !87
  %74 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %73, align 8, !tbaa !72
  %75 = getelementptr inbounds %"class.std::deque.31", %"class.std::deque.31"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  store %"class.MARC::ThreadCTask"** %74, %"class.MARC::ThreadCTask"*** %75, align 8, !tbaa !90
  %76 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %74, i64 64
  %77 = getelementptr inbounds %"class.std::deque.31", %"class.std::deque.31"* %0, i64 0, i32 0, i32 0, i32 2, i32 2
  store %"class.MARC::ThreadCTask"** %76, %"class.MARC::ThreadCTask"*** %77, align 8, !tbaa !91
  %78 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %73, i64 %11
  store %"class.MARC::ThreadCTask"*** %78, %"class.MARC::ThreadCTask"**** %4, align 8, !tbaa !87
  %79 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %78, align 8, !tbaa !72
  %80 = getelementptr inbounds %"class.std::deque.31", %"class.std::deque.31"* %0, i64 0, i32 0, i32 0, i32 3, i32 1
  store %"class.MARC::ThreadCTask"** %79, %"class.MARC::ThreadCTask"*** %80, align 8, !tbaa !90
  %81 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %79, i64 64
  %82 = getelementptr inbounds %"class.std::deque.31", %"class.std::deque.31"* %0, i64 0, i32 0, i32 0, i32 3, i32 2
  store %"class.MARC::ThreadCTask"** %81, %"class.MARC::ThreadCTask"*** %82, align 8, !tbaa !91
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #20

; Function Attrs: nounwind
declare dso_local i32 @pthread_spin_lock(i32*) local_unnamed_addr #17

; Function Attrs: nounwind
declare dso_local i32 @pthread_spin_unlock(i32*) local_unnamed_addr #17

; Function Attrs: nounwind
declare dso_local i32 @pthread_spin_init(i32*, i32) local_unnamed_addr #17

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE7waitPopERS2_(%"class.MARC::ThreadSafeMutexQueue.28"*, %"class.MARC::ThreadCTask"** dereferenceable(8)) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::unique_lock", align 8
  %4 = bitcast %"class.std::unique_lock"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %3, i64 0, i32 0
  store %"class.std::mutex"* %5, %"class.std::mutex"** %6, align 8, !tbaa !75
  %7 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %3, i64 0, i32 1
  store i8 0, i8* %7, align 8, !tbaa !77
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %5, i64 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %9) #10
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZSt20__throw_system_errori(i32 %10) #33
  unreachable

13:                                               ; preds = %2, %8
  store i8 1, i8* %7, align 8, !tbaa !77
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = load atomic i8, i8* %14 seq_cst, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %63, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %20 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %19, align 8, !tbaa !89
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %22 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %21, align 8, !tbaa !89
  %23 = icmp eq %"class.MARC::ThreadCTask"** %20, %22
  br i1 %23, label %24, label %.loopexit

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 2
  br label %26

26:                                               ; preds = %24, %30
  %27 = load atomic i8, i8* %14 seq_cst, align 1
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %.loopexit, label %30

30:                                               ; preds = %26
  call void @_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE(%"class.std::condition_variable"* nonnull %25, %"class.std::unique_lock"* nonnull dereferenceable(16) %3) #10
  %31 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %19, align 8, !tbaa !89
  %32 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %21, align 8, !tbaa !89
  %33 = icmp eq %"class.MARC::ThreadCTask"** %31, %32
  br i1 %33, label %26, label %.loopexit

.loopexit:                                        ; preds = %30, %26, %18
  %34 = load atomic i8, i8* %14 seq_cst, align 1
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %63, label %37

37:                                               ; preds = %.loopexit
  %38 = bitcast %"class.MARC::ThreadCTask"*** %21 to i64**
  %39 = load i64*, i64** %38, align 8, !tbaa !89, !noalias !167
  %40 = load i64, i64* %39, align 8, !tbaa !72
  %41 = bitcast %"class.MARC::ThreadCTask"** %1 to i64*
  store i64 %40, i64* %41, align 8, !tbaa !72
  %42 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %21, align 8, !tbaa !170
  %43 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %44 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %43, align 8, !tbaa !171
  %45 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %44, i64 -1
  %46 = icmp eq %"class.MARC::ThreadCTask"** %42, %45
  br i1 %46, label %49, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %42, i64 1
  store %"class.MARC::ThreadCTask"** %48, %"class.MARC::ThreadCTask"*** %21, align 8, !tbaa !170
  br label %61

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %51 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %52 = bitcast %"class.MARC::ThreadCTask"*** %51 to i8**
  %53 = load i8*, i8** %52, align 8, !tbaa !172
  call void @_ZdlPv(i8* %53) #10
  %54 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %55 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %54, align 8, !tbaa !166
  %56 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %55, i64 1
  store %"class.MARC::ThreadCTask"*** %56, %"class.MARC::ThreadCTask"**** %54, align 8, !tbaa !87
  %57 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %56, align 8, !tbaa !72
  store %"class.MARC::ThreadCTask"** %57, %"class.MARC::ThreadCTask"*** %51, align 8, !tbaa !90
  %58 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %57, i64 64
  store %"class.MARC::ThreadCTask"** %58, %"class.MARC::ThreadCTask"*** %43, align 8, !tbaa !91
  %59 = ptrtoint %"class.MARC::ThreadCTask"** %57 to i64
  %60 = bitcast %"struct.std::_Deque_iterator.33"* %50 to i64*
  store i64 %59, i64* %60, align 8, !tbaa !170
  br label %61

61:                                               ; preds = %47, %49
  %62 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 3
  call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %62) #10
  br label %63

63:                                               ; preds = %.loopexit, %13, %61
  %64 = phi i1 [ false, %13 ], [ false, %.loopexit ], [ true, %61 ]
  %65 = load i8, i8* %7, align 8, !tbaa !77, !range !62
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %63
  %68 = load %"class.std::mutex"*, %"class.std::mutex"** %6, align 8, !tbaa !75
  %69 = icmp eq %"class.std::mutex"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %71, label %74

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %68, i64 0, i32 0, i32 0
  %73 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %72) #10
  br label %74

74:                                               ; preds = %71, %70
  store i8 0, i8* %7, align 8, !tbaa !77
  br label %75

75:                                               ; preds = %63, %67, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret i1 %64
}

; Function Attrs: nounwind uwtable
define dso_local i64 @_ZNK4MARC25ThreadPoolForCMultiQueues33numberOfTasksWaitingToBeProcessedEv(%"class.MARC::ThreadPoolForCMultiQueues"*) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 3
  %3 = tail call i32 @pthread_spin_lock(i32* nonnull %2) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.MARC::ThreadSafeSpinLockQueue"**, %"class.MARC::ThreadSafeSpinLockQueue"*** %4, align 8, !tbaa !173
  %6 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %7 = load %"class.MARC::ThreadSafeSpinLockQueue"**, %"class.MARC::ThreadSafeSpinLockQueue"*** %6, align 8, !tbaa !176
  %8 = icmp eq %"class.MARC::ThreadSafeSpinLockQueue"** %5, %7
  br i1 %8, label %.loopexit, label %.preheader

.loopexit:                                        ; preds = %.preheader, %1
  %9 = phi i64 [ 0, %1 ], [ %44, %.preheader ]
  %10 = tail call i32 @pthread_spin_unlock(i32* nonnull %2) #10
  ret i64 %9

.preheader:                                       ; preds = %1, %.preheader
  %11 = phi i64 [ %44, %.preheader ], [ 0, %1 ]
  %12 = phi %"class.MARC::ThreadSafeSpinLockQueue"** [ %45, %.preheader ], [ %5, %1 ]
  %13 = load %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %12, align 8, !tbaa !72
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %13, i64 0, i32 1
  %15 = tail call i32 @pthread_spin_lock(i32* nonnull %14) #10
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %19 = bitcast %"class.MARC::ThreadCTask"**** %18 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !87
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %22 = bitcast %"class.MARC::ThreadCTask"**** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !87
  %24 = sub i64 %20, %23
  %25 = shl i64 %24, 3
  %26 = bitcast %"struct.std::_Deque_iterator.33"* %16 to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !89
  %28 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %29 = bitcast %"class.MARC::ThreadCTask"*** %28 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !90
  %31 = sub i64 %27, %30
  %32 = ashr exact i64 %31, 3
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %34 = bitcast %"class.MARC::ThreadCTask"*** %33 to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !91
  %36 = bitcast %"struct.std::_Deque_iterator.33"* %17 to i64*
  %37 = load i64, i64* %36, align 8, !tbaa !89
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = tail call i32 @pthread_spin_unlock(i32* nonnull %14) #10
  %41 = add i64 %11, -64
  %42 = add i64 %41, %25
  %43 = add i64 %42, %32
  %44 = add i64 %43, %39
  %45 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %12, i64 1
  %46 = icmp eq %"class.MARC::ThreadSafeSpinLockQueue"** %45, %7
  br i1 %46, label %.loopexit, label %.preheader
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC25ThreadPoolForCMultiQueues14workerFunctionEPSt6atomicIbEj(%"class.MARC::ThreadPoolForCMultiQueues"*, %"struct.std::atomic"* nocapture, i32) unnamed_addr #14 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = alloca %struct.cpu_set_t, align 8
  %5 = tail call i32 @sched_getcpu() #10
  %6 = bitcast %struct.cpu_set_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 128, i1 false)
  %7 = sext i32 %5 to i64
  %8 = icmp ult i32 %5, 1024
  br i1 %8, label %9, label %16

9:                                                ; preds = %3
  %10 = and i64 %7, 63
  %11 = shl i64 1, %10
  %12 = lshr i64 %7, 6
  %13 = getelementptr inbounds %struct.cpu_set_t, %struct.cpu_set_t* %4, i64 0, i32 0, i64 %12
  %14 = load i64, i64* %13, align 8, !tbaa !149
  %15 = or i64 %14, %11
  store i64 %15, i64* %13, align 8, !tbaa !149
  br label %16

16:                                               ; preds = %3, %9
  %17 = tail call i64 @pthread_self() #31
  %18 = call i32 @pthread_setaffinity_np(i64 %17, i64 128, %struct.cpu_set_t* nonnull %4) #10
  %19 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 3
  %20 = call i32 @pthread_spin_lock(i32* nonnull %19) #10
  %21 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 2
  %22 = zext i32 %2 to i64
  %23 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %24 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"*** %23 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !176
  %26 = bitcast %"class.std::vector.35"* %21 to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !173
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  %30 = icmp ugt i64 %29, %22
  br i1 %30, label %32, label %31

31:                                               ; preds = %16
  call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21.13, i64 0, i64 0), i64 %22, i64 %29) #33
  unreachable

32:                                               ; preds = %16
  %33 = inttoptr i64 %27 to %"class.MARC::ThreadSafeSpinLockQueue"**
  %34 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %33, i64 %22
  %35 = load %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %34, align 8, !tbaa !72
  %36 = call i32 @pthread_spin_unlock(i32* nonnull %19) #10
  %37 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %38 = load atomic i8, i8* %37 seq_cst, align 1
  %39 = and i8 %38, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %.loopexit

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %1, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %35, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %35, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %45 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %35, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %46 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %35, i64 0, i32 1
  %47 = bitcast %"class.MARC::ThreadCTask"*** %45 to i64**
  %48 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %35, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %49 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %35, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %35, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %51 = bitcast %"class.MARC::ThreadCTask"*** %50 to i8**
  %52 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %35, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %53 = bitcast %"struct.std::_Deque_iterator.33"* %49 to i64*
  br label %54

54:                                               ; preds = %41, %103
  store atomic i8 1, i8* %42 seq_cst, align 1
  %55 = load atomic i8, i8* %43 seq_cst, align 1
  %56 = and i8 %55, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_.exit.thread, label %.preheader

.preheader:                                       ; preds = %54, %61
  %58 = load atomic i8, i8* %43 seq_cst, align 1
  %59 = and i8 %58, 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %.preheader
  %62 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %44, align 8, !tbaa !89
  %63 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %45, align 8, !tbaa !89
  %64 = icmp eq %"class.MARC::ThreadCTask"** %62, %63
  br i1 %64, label %.preheader, label %65

65:                                               ; preds = %61, %.preheader
  %66 = call i32 @pthread_spin_lock(i32* nonnull %46) #10
  %67 = load atomic i8, i8* %43 seq_cst, align 1
  %68 = and i8 %67, 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_.exit, label %70

70:                                               ; preds = %65
  %71 = load i64*, i64** %47, align 8, !tbaa !89
  %72 = load i64, i64* %71, align 8, !tbaa !72
  %.cast = bitcast i64* %71 to %"class.MARC::ThreadCTask"**
  %73 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %48, align 8, !tbaa !171
  %74 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %73, i64 -1
  %75 = icmp eq %"class.MARC::ThreadCTask"** %74, %.cast
  br i1 %75, label %78, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds i64, i64* %71, i64 1
  store i64* %77, i64** %47, align 8, !tbaa !170
  br label %86

78:                                               ; preds = %70
  %79 = load i8*, i8** %51, align 8, !tbaa !172
  call void @_ZdlPv(i8* %79) #10
  %80 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %52, align 8, !tbaa !166
  %81 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %80, i64 1
  store %"class.MARC::ThreadCTask"*** %81, %"class.MARC::ThreadCTask"**** %52, align 8, !tbaa !87
  %82 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %81, align 8, !tbaa !72
  store %"class.MARC::ThreadCTask"** %82, %"class.MARC::ThreadCTask"*** %50, align 8, !tbaa !90
  %83 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %82, i64 64
  store %"class.MARC::ThreadCTask"** %83, %"class.MARC::ThreadCTask"*** %48, align 8, !tbaa !91
  %84 = ptrtoint %"class.MARC::ThreadCTask"** %82 to i64
  store i64 %84, i64* %53, align 8, !tbaa !170
  br label %86

_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_.exit: ; preds = %65
  %85 = call i32 @pthread_spin_unlock(i32* nonnull %46) #10
  br label %_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_.exit.thread

86:                                               ; preds = %76, %78
  %87 = call i32 @pthread_spin_unlock(i32* nonnull %46) #10
  store atomic i8 0, i8* %42 seq_cst, align 1
  %88 = inttoptr i64 %72 to %"class.MARC::ThreadCTask"*
  %89 = inttoptr i64 %72 to void (%"class.MARC::ThreadCTask"*)***
  %90 = load void (%"class.MARC::ThreadCTask"*)**, void (%"class.MARC::ThreadCTask"*)*** %89, align 8, !tbaa !73
  %91 = load void (%"class.MARC::ThreadCTask"*)*, void (%"class.MARC::ThreadCTask"*)** %90, align 8
  call void %91(%"class.MARC::ThreadCTask"* %88)
  br label %_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_.exit.thread

_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_.exit.thread: ; preds = %54, %_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_.exit, %86
  %.sroa.0.17 = phi i64 [ %72, %86 ], [ 0, %_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_.exit ], [ 0, %54 ]
  %92 = load atomic i8, i8* %37 seq_cst, align 1
  %93 = and i8 %92, 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %.loopexit

95:                                               ; preds = %_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_.exit.thread
  %96 = inttoptr i64 %.sroa.0.17 to %"class.MARC::ThreadCTask"*
  %97 = icmp eq i64 %.sroa.0.17, 0
  br i1 %97, label %103, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %96, i64 0, i32 8
  %100 = call i32 @pthread_spin_lock(i32* nonnull %99) #10
  %101 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %96, i64 0, i32 5
  store i8 1, i8* %101, align 1, !tbaa !92
  %102 = call i32 @pthread_spin_unlock(i32* nonnull %99) #10
  br label %103

103:                                              ; preds = %98, %95
  %104 = load atomic i8, i8* %37 seq_cst, align 1
  %105 = and i8 %104, 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %54, label %.loopexit

.loopexit:                                        ; preds = %_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_.exit.thread, %103, %32
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #10
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC25ThreadPoolForCMultiQueues15submitAndDetachEPFvPvES1_(%"class.MARC::ThreadPoolForCMultiQueues"*, void (i8*)*, i8*) unnamed_addr #14 align 2 {
  %4 = load i32, i32* @_ZZN4MARC25ThreadPoolForCMultiQueues15submitAndDetachEPFvPvES1_E12nextLocality, align 4, !tbaa !122
  tail call void @_ZN4MARC25ThreadPoolForCMultiQueues15submitAndDetachEPFvPvES1_i(%"class.MARC::ThreadPoolForCMultiQueues"* %0, void (i8*)* %1, i8* %2, i32 %4)
  %5 = load i32, i32* @_ZZN4MARC25ThreadPoolForCMultiQueues15submitAndDetachEPFvPvES1_E12nextLocality, align 4, !tbaa !122
  %6 = add i32 %5, 1
  store i32 %6, i32* @_ZZN4MARC25ThreadPoolForCMultiQueues15submitAndDetachEPFvPvES1_E12nextLocality, align 4, !tbaa !122
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC25ThreadPoolForCMultiQueues15submitAndDetachEPFvPvES1_i(%"class.MARC::ThreadPoolForCMultiQueues"*, void (i8*)*, i8*, i32) local_unnamed_addr #14 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %5 = bitcast %"class.MARC::ThreadPoolForCMultiQueues"* %0 to %"class.MARC::ThreadPoolForC"*
  %6 = tail call %"class.MARC::ThreadCTask"* @_ZN4MARC14ThreadPoolForC7getTaskEv(%"class.MARC::ThreadPoolForC"* %5)
  %7 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %6, i64 0, i32 1
  store void (i8*)* %1, void (i8*)** %7, align 8, !tbaa !63
  %8 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %6, i64 0, i32 2
  store i8* %2, i8** %8, align 8, !tbaa !64
  %9 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 0, i32 5
  %11 = load i8, i8* %10, align 8, !tbaa !106, !range !62
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 3
  %15 = tail call i32 @pthread_spin_lock(i32* nonnull %14) #10
  br label %16

16:                                               ; preds = %13, %4
  %17 = sext i32 %3 to i64
  %18 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %20 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"*** %19 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !176
  %22 = bitcast %"class.std::vector.35"* %18 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !173
  %24 = sub i64 %21, %23
  %25 = ashr exact i64 %24, 3
  %26 = urem i64 %17, %25
  %27 = inttoptr i64 %23 to %"class.MARC::ThreadSafeSpinLockQueue"**
  %28 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %27, i64 %26
  %29 = load %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %28, align 8, !tbaa !72
  %30 = ptrtoint %"class.MARC::ThreadCTask"* %6 to i64
  %31 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %29, i64 0, i32 1
  %32 = tail call i32 @pthread_spin_lock(i32* nonnull %31) #10
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %29, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::queue.30", %"class.std::queue.30"* %33, i64 0, i32 0
  %35 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %36 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %35, align 8, !tbaa !99
  %37 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 2
  %38 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %37, align 8, !tbaa !102
  %39 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %38, i64 -1
  %40 = icmp eq %"class.MARC::ThreadCTask"** %36, %39
  br i1 %40, label %45, label %41

41:                                               ; preds = %16
  %42 = bitcast %"class.MARC::ThreadCTask"** %36 to i64*
  store i64 %30, i64* %42, align 8, !tbaa !72
  %43 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %35, align 8, !tbaa !99
  %44 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %43, i64 1
  store %"class.MARC::ThreadCTask"** %44, %"class.MARC::ThreadCTask"*** %35, align 8, !tbaa !99
  br label %73

45:                                               ; preds = %16
  %46 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8, !tbaa !103
  %48 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %49 = bitcast %"class.MARC::ThreadCTask"**** %48 to i64*
  %50 = load i64, i64* %49, align 8, !tbaa !104
  %51 = bitcast %"class.std::queue.30"* %33 to i64*
  %52 = load i64, i64* %51, align 8, !tbaa !105
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 3
  %55 = sub i64 %47, %54
  %56 = icmp ult i64 %55, 2
  br i1 %56, label %57, label %58

57:                                               ; preds = %45
  tail call void @_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE17_M_reallocate_mapEmb(%"class.std::deque.31"* nonnull %34, i64 1, i1 zeroext false)
  br label %58

58:                                               ; preds = %57, %45
  %59 = tail call i8* @_Znwm(i64 512)
  %60 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %61 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %48, align 8, !tbaa !104
  %62 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %61, i64 1
  %63 = bitcast %"class.MARC::ThreadCTask"*** %62 to i8**
  store i8* %59, i8** %63, align 8, !tbaa !72
  %64 = bitcast %"struct.std::_Deque_iterator.33"* %60 to i64**
  %65 = load i64*, i64** %64, align 8, !tbaa !99
  store i64 %30, i64* %65, align 8, !tbaa !72
  %66 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %48, align 8, !tbaa !104
  %67 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %66, i64 1
  store %"class.MARC::ThreadCTask"*** %67, %"class.MARC::ThreadCTask"**** %48, align 8, !tbaa !87
  %68 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %67, align 8, !tbaa !72
  %69 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  store %"class.MARC::ThreadCTask"** %68, %"class.MARC::ThreadCTask"*** %69, align 8, !tbaa !90
  %70 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %68, i64 64
  store %"class.MARC::ThreadCTask"** %70, %"class.MARC::ThreadCTask"*** %37, align 8, !tbaa !91
  %71 = ptrtoint %"class.MARC::ThreadCTask"** %68 to i64
  %72 = bitcast %"struct.std::_Deque_iterator.33"* %60 to i64*
  store i64 %71, i64* %72, align 8, !tbaa !99
  br label %73

73:                                               ; preds = %41, %58
  %74 = tail call i32 @pthread_spin_unlock(i32* nonnull %31) #10
  %75 = load i8, i8* %10, align 8, !tbaa !106, !range !62
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 3
  %79 = tail call i32 @pthread_spin_unlock(i32* nonnull %78) #10
  br label %80

80:                                               ; preds = %73, %77
  tail call void @_ZN4MARC19ThreadPoolInterface10expandPoolEv(%"class.MARC::ThreadPoolInterface"* nonnull %9)
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @sched_getcpu() local_unnamed_addr #17

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) local_unnamed_addr #20

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopERS2_(%"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadCTask"** dereferenceable(8)) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %51, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %10

10:                                               ; preds = %7, %14
  %11 = load atomic i8, i8* %3 seq_cst, align 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %8, align 8, !tbaa !89
  %16 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %9, align 8, !tbaa !89
  %17 = icmp eq %"class.MARC::ThreadCTask"** %15, %16
  br i1 %17, label %10, label %18

18:                                               ; preds = %10, %14
  %19 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 1
  %20 = tail call i32 @pthread_spin_lock(i32* nonnull %19) #10
  %21 = load atomic i8, i8* %3 seq_cst, align 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.MARC::ThreadCTask"*** %9 to i64**
  %26 = load i64*, i64** %25, align 8, !tbaa !89, !noalias !177
  %27 = load i64, i64* %26, align 8, !tbaa !72
  %28 = bitcast %"class.MARC::ThreadCTask"** %1 to i64*
  store i64 %27, i64* %28, align 8, !tbaa !72
  %29 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %9, align 8, !tbaa !170
  %30 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %31 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %30, align 8, !tbaa !171
  %32 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %31, i64 -1
  %33 = icmp eq %"class.MARC::ThreadCTask"** %29, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %29, i64 1
  store %"class.MARC::ThreadCTask"** %35, %"class.MARC::ThreadCTask"*** %9, align 8, !tbaa !170
  br label %48

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %38 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %39 = bitcast %"class.MARC::ThreadCTask"*** %38 to i8**
  %40 = load i8*, i8** %39, align 8, !tbaa !172
  tail call void @_ZdlPv(i8* %40) #10
  %41 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %42 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %41, align 8, !tbaa !166
  %43 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %42, i64 1
  store %"class.MARC::ThreadCTask"*** %43, %"class.MARC::ThreadCTask"**** %41, align 8, !tbaa !87
  %44 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %43, align 8, !tbaa !72
  store %"class.MARC::ThreadCTask"** %44, %"class.MARC::ThreadCTask"*** %38, align 8, !tbaa !90
  %45 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %44, i64 64
  store %"class.MARC::ThreadCTask"** %45, %"class.MARC::ThreadCTask"*** %30, align 8, !tbaa !91
  %46 = ptrtoint %"class.MARC::ThreadCTask"** %44 to i64
  %47 = bitcast %"struct.std::_Deque_iterator.33"* %37 to i64*
  store i64 %46, i64* %47, align 8, !tbaa !170
  br label %48

48:                                               ; preds = %36, %34, %18
  %49 = phi i1 [ false, %18 ], [ true, %34 ], [ true, %36 ]
  %50 = tail call i32 @pthread_spin_unlock(i32* nonnull %19) #10
  br label %51

51:                                               ; preds = %48, %2
  %52 = phi i1 [ false, %2 ], [ %49, %48 ]
  ret i1 %52
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_Parallelizer_utils.cpp() #14 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"struct.std::__atomic_base"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"struct.std::__atomic_base"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"struct.std::__atomic_base", %"struct.std::__atomic_base"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  tail call void @_ZN13NoelleRuntimeC2Ev(%class.NoelleRuntime* nonnull @_ZL7runtime)
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.NoelleRuntime*)* @_ZN13NoelleRuntimeD2Ev to void (i8*)*), i8* bitcast (%class.NoelleRuntime* @_ZL7runtime to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"struct.std::__atomic_base"*) unnamed_addr #19

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"struct.std::__atomic_base"*) unnamed_addr #17

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #8

; Function Attrs: uwtable
define dso_local void @_ZN13NoelleRuntimeC2Ev(%class.NoelleRuntime*) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::function", align 8
  %3 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::vector.47", %"class.std::vector.47"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64* null, i64** %6, align 8, !tbaa !180
  %7 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %7, align 8, !tbaa !182
  %8 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast %"class.std::vector.42"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 36, i1 false)
  %10 = bitcast i64** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false)
  %11 = load i32, i32* @_ZZN13NoelleRuntime23getMaximumNumberOfCoresEvE5cores, align 4, !tbaa !122
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %24

13:                                               ; preds = %1
  %14 = tail call i8* @getenv(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0)) #10
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %13
  %17 = tail call i32 @_ZNSt6thread20hardware_concurrencyEv() #10
  %18 = lshr i32 %17, 1
  br label %22

19:                                               ; preds = %13
  %20 = tail call i64 @strtol(i8* nocapture nonnull %14, i8** null, i32 10) #10
  %21 = trunc i64 %20 to i32
  br label %22

22:                                               ; preds = %19, %16
  %23 = phi i32 [ %21, %19 ], [ %18, %16 ]
  store i32 %23, i32* @_ZZN13NoelleRuntime23getMaximumNumberOfCoresEvE5cores, align 4, !tbaa !122
  br label %24

24:                                               ; preds = %1, %22
  %25 = phi i32 [ %23, %22 ], [ %11, %1 ]
  %26 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 7
  store i32 %25, i32* %26, align 4, !tbaa !183
  %27 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 6
  store i32 %25, i32* %27, align 8, !tbaa !12
  %28 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 8
  %29 = tail call i32 @pthread_spin_init(i32* nonnull %28, i32 0) #10
  %30 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 1
  %31 = tail call i32 @pthread_spin_init(i32* nonnull %30, i32 0) #10
  %32 = invoke i8* @_Znwm(i64 608) #34
          to label %33 unwind label %48

33:                                               ; preds = %24
  %34 = bitcast i8* %32 to %"class.MARC::ThreadPoolForCSingleQueue"*
  %35 = load i32, i32* %26, align 4, !tbaa !183
  %36 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %36, align 8, !tbaa !184
  invoke void @_ZN4MARC25ThreadPoolForCSingleQueueC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolForCSingleQueue"* nonnull %34, i1 zeroext false, i32 %35, %"class.std::function"* nonnull %2)
          to label %37 unwind label %52

37:                                               ; preds = %33
  %38 = bitcast %class.NoelleRuntime* %0 to i8**
  store i8* %32, i8** %38, align 8, !tbaa !186
  %39 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %36, align 8, !tbaa !184
  %40 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %43 = invoke zeroext i1 %39(%"union.std::_Any_data"* nonnull dereferenceable(16) %42, %"union.std::_Any_data"* nonnull dereferenceable(16) %42, i32 3)
          to label %47 unwind label %44

44:                                               ; preds = %41
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  call void @__clang_call_terminate(i8* %46) #30
  unreachable

47:                                               ; preds = %37, %41
  ret void

48:                                               ; preds = %24
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  %51 = extractvalue { i8*, i32 } %49, 1
  br label %65

52:                                               ; preds = %33
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %36, align 8, !tbaa !184
  %55 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %58 = invoke zeroext i1 %54(%"union.std::_Any_data"* nonnull dereferenceable(16) %57, %"union.std::_Any_data"* nonnull dereferenceable(16) %57, i32 3)
          to label %62 unwind label %59

59:                                               ; preds = %56
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  call void @__clang_call_terminate(i8* %61) #30
  unreachable

62:                                               ; preds = %52, %56
  %63 = extractvalue { i8*, i32 } %53, 1
  %64 = extractvalue { i8*, i32 } %53, 0
  call void @_ZdlPv(i8* nonnull %32) #32
  br label %65

65:                                               ; preds = %62, %48
  %66 = phi i8* [ %64, %62 ], [ %50, %48 ]
  %67 = phi i32 [ %63, %62 ], [ %51, %48 ]
  %68 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %69 = load %struct.DOALL_args_t**, %struct.DOALL_args_t*** %68, align 8, !tbaa !187
  %70 = icmp eq %struct.DOALL_args_t** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %struct.DOALL_args_t** %69 to i8*
  call void @_ZdlPv(i8* nonnull %72) #10
  br label %73

73:                                               ; preds = %65, %71
  %74 = load i64*, i64** %5, align 8, !tbaa !180
  %75 = icmp eq i64* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = ptrtoint i64* %74 to i64
  %78 = bitcast i64** %8 to i64*
  %79 = load i64, i64* %78, align 8, !tbaa !190
  %80 = sub i64 %79, %77
  %81 = ashr exact i64 %80, 3
  %82 = inttoptr i64 %79 to i64*
  %83 = sub nsw i64 0, %81
  %84 = getelementptr inbounds i64, i64* %82, i64 %83
  %85 = bitcast i64* %84 to i8*
  call void @_ZdlPv(i8* %85) #10
  %86 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %87 = bitcast %"struct.std::_Bit_iterator"* %86 to i8*
  store i64* null, i64** %6, align 8
  store i32 0, i32* %7, align 8
  %88 = bitcast %"class.std::vector.47"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* nonnull align 8 %87, i64 12, i1 false) #10
  store i64* null, i64** %8, align 8, !tbaa !190
  br label %89

89:                                               ; preds = %73, %76
  %90 = getelementptr inbounds %"class.std::vector.42", %"class.std::vector.42"* %3, i64 0, i32 0, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8, !tbaa !193
  %92 = icmp eq i32* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  %94 = bitcast i32* %91 to i8*
  call void @_ZdlPv(i8* nonnull %94) #10
  br label %95

95:                                               ; preds = %89, %93
  %96 = insertvalue { i8*, i32 } undef, i8* %66, 0
  %97 = insertvalue { i8*, i32 } %96, i32 %67, 1
  resume { i8*, i32 } %97
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN13NoelleRuntimeD2Ev(%class.NoelleRuntime* nocapture) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 0
  %3 = load %"class.MARC::ThreadPoolForCSingleQueue"*, %"class.MARC::ThreadPoolForCSingleQueue"** %2, align 8, !tbaa !186
  %4 = icmp eq %"class.MARC::ThreadPoolForCSingleQueue"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4MARC25ThreadPoolForCSingleQueueD2Ev(%"class.MARC::ThreadPoolForCSingleQueue"* nonnull %3) #10
  %6 = bitcast %"class.MARC::ThreadPoolForCSingleQueue"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #32
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %struct.DOALL_args_t**, %struct.DOALL_args_t*** %8, align 8, !tbaa !187
  %10 = icmp eq %struct.DOALL_args_t** %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = bitcast %struct.DOALL_args_t** %9 to i8*
  tail call void @_ZdlPv(i8* nonnull %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0
  %15 = getelementptr inbounds %"struct.std::_Bvector_base", %"struct.std::_Bvector_base"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8, !tbaa !180
  %17 = icmp eq i64* %16, null
  br i1 %17, label %34, label %18

18:                                               ; preds = %13
  %19 = ptrtoint i64* %16 to i64
  %20 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %21 = bitcast i64** %20 to i64*
  %22 = load i64, i64* %21, align 8, !tbaa !190
  %23 = sub i64 %22, %19
  %24 = ashr exact i64 %23, 3
  %25 = inttoptr i64 %22 to i64*
  %26 = sub nsw i64 0, %24
  %27 = getelementptr inbounds i64, i64* %25, i64 %26
  %28 = bitcast i64* %27 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  %29 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %"struct.std::_Bit_iterator"* %29 to i8*
  %31 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64* null, i64** %31, align 8
  %32 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 0, i32* %32, align 8
  %33 = bitcast %"struct.std::_Bvector_base"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* nonnull align 8 %30, i64 12, i1 false) #10
  store i64* null, i64** %20, align 8, !tbaa !190
  br label %34

34:                                               ; preds = %13, %18
  %35 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8, !tbaa !193
  %37 = icmp eq i32* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = bitcast i32* %36 to i8*
  tail call void @_ZdlPv(i8* nonnull %39) #10
  br label %40

40:                                               ; preds = %34, %38
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN4MARC25ThreadPoolForCSingleQueueD2Ev(%"class.MARC::ThreadPoolForCSingleQueue"*) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC25ThreadPoolForCSingleQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store atomic i8 1, i8* %3 seq_cst, align 1
  %4 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %6, label %12

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %5, i64 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %7) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  invoke void @_ZSt20__throw_system_errori(i32 %8) #33
          to label %11 unwind label %64

11:                                               ; preds = %10
  unreachable

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %14 = load atomic i8, i8* %13 seq_cst, align 1
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  store atomic i8 0, i8* %13 seq_cst, align 1
  %18 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 2
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %18) #10
  %19 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 3
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %19) #10
  br label %20

20:                                               ; preds = %17, %12
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %21, label %24

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %5, i64 0, i32 0, i32 0
  %23 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %22) #10
  br label %24

24:                                               ; preds = %21, %20
  %25 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 0, i32 3
  %26 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 1
  %27 = bitcast %"struct.std::atomic"*** %26 to i64*
  %28 = load i64, i64* %27, align 8, !tbaa !124
  %29 = bitcast %"class.std::vector.0"* %25 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !119
  %31 = icmp eq i64 %28, %30
  br i1 %31, label %.loopexit4, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %25, i64 0, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %.loopexit, %32
  %35 = phi i64 [ %30, %32 ], [ %53, %.loopexit ]
  %36 = phi i64 [ 0, %32 ], [ %51, %.loopexit ]
  %37 = inttoptr i64 %35 to %"struct.std::atomic"**
  %38 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %37, i64 %36
  %39 = load %"struct.std::atomic"*, %"struct.std::atomic"** %38, align 8, !tbaa !72
  %40 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %39, i64 0, i32 0, i32 0
  %41 = load atomic i8, i8* %40 seq_cst, align 1
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %34, %.preheader
  %44 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %33, align 8, !tbaa !119
  %45 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %44, i64 %36
  %46 = load %"struct.std::atomic"*, %"struct.std::atomic"** %45, align 8, !tbaa !72
  %47 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %46, i64 0, i32 0, i32 0
  %48 = load atomic i8, i8* %47 seq_cst, align 1
  %49 = and i8 %48, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %.loopexit, label %.preheader

.loopexit:                                        ; preds = %.preheader, %34
  %51 = add nuw i64 %36, 1
  %52 = load i64, i64* %27, align 8, !tbaa !124
  %53 = load i64, i64* %29, align 8, !tbaa !119
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 3
  %56 = icmp ugt i64 %55, %51
  br i1 %56, label %34, label %.loopexit4

.loopexit4:                                       ; preds = %.loopexit, %24
  tail call void @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEED2Ev(%"class.MARC::ThreadSafeMutexQueue.28"* nonnull %4) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC14ThreadPoolForCE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %57 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %57, align 8, !tbaa !96
  %59 = icmp eq %"class.MARC::ThreadCTask"** %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %.loopexit4
  %61 = bitcast %"class.MARC::ThreadCTask"** %58 to i8*
  tail call void @_ZdlPv(i8* nonnull %61) #10
  br label %62

62:                                               ; preds = %.loopexit4, %60
  %63 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4MARC19ThreadPoolInterfaceD2Ev(%"class.MARC::ThreadPoolInterface"* %63) #10
  ret void

64:                                               ; preds = %10
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  tail call void @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEED2Ev(%"class.MARC::ThreadSafeMutexQueue.28"* nonnull %4) #10
  %67 = bitcast %"class.MARC::ThreadPoolForCSingleQueue"* %0 to %"class.MARC::ThreadPoolForC"*
  tail call void @_ZN4MARC14ThreadPoolForCD2Ev(%"class.MARC::ThreadPoolForC"* %67) #10
  tail call void @__clang_call_terminate(i8* %66) #30
  unreachable
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"*) local_unnamed_addr #17

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEED2Ev(%"class.MARC::ThreadSafeMutexQueue.28"*) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %4, label %10

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %5) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  invoke void @_ZSt20__throw_system_errori(i32 %6) #33
          to label %9 unwind label %48

9:                                                ; preds = %8
  unreachable

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load atomic i8, i8* %11 seq_cst, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  store atomic i8 0, i8* %11 seq_cst, align 1
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %16) #10
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %17) #10
  br label %18

18:                                               ; preds = %15, %10
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %19, label %22

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %21 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %20) #10
  br label %22

22:                                               ; preds = %19, %18
  %23 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %23) #10
  %24 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %24) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %25 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::queue.30", %"class.std::queue.30"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %26, align 8, !tbaa !105
  %28 = icmp eq %"class.MARC::ThreadCTask"*** %27, null
  br i1 %28, label %47, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.MARC::ThreadCTask"*** %27 to i8*
  %31 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %32 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %31, align 8, !tbaa !166
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %34 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %33, align 8, !tbaa !104
  %35 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %34, i64 1
  %36 = icmp ult %"class.MARC::ThreadCTask"*** %32, %35
  br i1 %36, label %.preheader, label %45

.preheader:                                       ; preds = %29, %.preheader
  %37 = phi %"class.MARC::ThreadCTask"*** [ %40, %.preheader ], [ %32, %29 ]
  %38 = bitcast %"class.MARC::ThreadCTask"*** %37 to i8**
  %39 = load i8*, i8** %38, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %39) #10
  %40 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %37, i64 1
  %41 = icmp ult %"class.MARC::ThreadCTask"*** %37, %34
  br i1 %41, label %.preheader, label %42

42:                                               ; preds = %.preheader
  %43 = bitcast %"class.std::queue.30"* %25 to i8**
  %44 = load i8*, i8** %43, align 8, !tbaa !105
  br label %45

45:                                               ; preds = %42, %29
  %46 = phi i8* [ %44, %42 ], [ %30, %29 ]
  tail call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %22, %45
  ret void

48:                                               ; preds = %8
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  %51 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %51) #10
  %52 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %52) #10
  %53 = bitcast %"class.MARC::ThreadSafeMutexQueue.28"* %0 to %"class.MARC::ThreadSafeQueue.29"*
  tail call void @_ZN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEED2Ev(%"class.MARC::ThreadSafeQueue.29"* %53) #10
  tail call void @__clang_call_terminate(i8* %50) #30
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN4MARC19ThreadPoolInterfaceD2Ev(%"class.MARC::ThreadPoolInterface"*) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::function", align 8
  %3 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4MARC19ThreadPoolInterfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !73
  %4 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load atomic i8, i8* %4 seq_cst, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %12 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %14 = bitcast %"class.std::function"*** %13 to i64*
  %15 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %16 = bitcast %"class.std::function"*** %15 to i64*
  %17 = bitcast %"struct.std::_Deque_iterator"* %11 to i64*
  %18 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %19 = bitcast %"class.std::function"** %18 to i64*
  %20 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %21 = bitcast %"class.std::function"** %20 to i64*
  %22 = bitcast %"struct.std::_Deque_iterator"* %12 to i64*
  %23 = bitcast %"class.std::function"* %2 to i8*
  %24 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 1
  %26 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  br label %28

27:                                               ; preds = %1
  tail call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.14, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2.12, i64 0, i64 0), i32 252, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__PRETTY_FUNCTION__._ZN4MARC19ThreadPoolInterfaceD2Ev, i64 0, i64 0)) #30
  unreachable

28:                                               ; preds = %8, %71
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %29, label %34

29:                                               ; preds = %28
  %30 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %10) #10
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  invoke void @_ZSt20__throw_system_errori(i32 %30) #33
          to label %33 unwind label %72

33:                                               ; preds = %32
  unreachable

34:                                               ; preds = %29, %28
  %35 = load i64, i64* %14, align 8, !tbaa !196
  %36 = load i64, i64* %16, align 8, !tbaa !196
  %37 = sub i64 %35, %36
  %38 = shl i64 %37, 1
  %39 = add i64 %38, -16
  %40 = load i64, i64* %17, align 8, !tbaa !198
  %41 = load i64, i64* %19, align 8, !tbaa !199
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 5
  %44 = add nsw i64 %39, %43
  %45 = load i64, i64* %21, align 8, !tbaa !200
  %46 = load i64, i64* %22, align 8, !tbaa !198
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 5
  %49 = add nsw i64 %44, %48
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %50, label %52

50:                                               ; preds = %34
  %51 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %10) #10
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp sgt i64 %49, 0
  br i1 %53, label %54, label %90

54:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #10
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %24, align 8, !tbaa !184
  %55 = invoke zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE7waitPopERS3_(%"class.MARC::ThreadSafeMutexQueue"* nonnull %9, %"class.std::function"* nonnull dereferenceable(32) %2)
          to label %56 unwind label %75

56:                                               ; preds = %54
  %57 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %24, align 8, !tbaa !184
  %58 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  invoke void @_ZSt25__throw_bad_function_callv() #33
          to label %60 unwind label %77

60:                                               ; preds = %59
  unreachable

61:                                               ; preds = %56
  %62 = load void (%"union.std::_Any_data"*)*, void (%"union.std::_Any_data"*)** %25, align 8, !tbaa !201
  invoke void %62(%"union.std::_Any_data"* nonnull dereferenceable(16) %26)
          to label %63 unwind label %75

63:                                               ; preds = %61
  %64 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %24, align 8, !tbaa !184
  %65 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %63
  %67 = invoke zeroext i1 %64(%"union.std::_Any_data"* nonnull dereferenceable(16) %26, %"union.std::_Any_data"* nonnull dereferenceable(16) %26, i32 3)
          to label %71 unwind label %68

68:                                               ; preds = %66
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  call void @__clang_call_terminate(i8* %70) #30
  unreachable

71:                                               ; preds = %63, %66
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #10
  br label %28

72:                                               ; preds = %32
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  br label %140

75:                                               ; preds = %54, %61
  %76 = landingpad { i8*, i32 }
          catch i8* null
  br label %79

77:                                               ; preds = %59
  %78 = landingpad { i8*, i32 }
          catch i8* null
  br label %79

79:                                               ; preds = %77, %75
  %80 = phi { i8*, i32 } [ %76, %75 ], [ %78, %77 ]
  %81 = extractvalue { i8*, i32 } %80, 0
  %82 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %24, align 8, !tbaa !184
  %83 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %79
  %85 = invoke zeroext i1 %82(%"union.std::_Any_data"* nonnull dereferenceable(16) %26, %"union.std::_Any_data"* nonnull dereferenceable(16) %26, i32 3)
          to label %89 unwind label %86

86:                                               ; preds = %84
  %87 = landingpad { i8*, i32 }
          catch i8* null
  %88 = extractvalue { i8*, i32 } %87, 0
  call void @__clang_call_terminate(i8* %88) #30
  unreachable

89:                                               ; preds = %79, %84
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #10
  br label %140

90:                                               ; preds = %52
  %91 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %92 = load %"class.std::thread"*, %"class.std::thread"** %91, align 8, !tbaa !72
  %93 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %94 = load %"class.std::thread"*, %"class.std::thread"** %93, align 8, !tbaa !72
  %95 = icmp eq %"class.std::thread"* %92, %94
  br i1 %95, label %.loopexit14, label %.preheader13

.loopexit14:                                      ; preds = %106, %90
  %96 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %96, align 8, !tbaa !72
  %98 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %99 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %98, align 8, !tbaa !72
  %100 = icmp eq %"struct.std::atomic"** %97, %99
  br i1 %100, label %.loopexit12, label %.preheader11

.preheader13:                                     ; preds = %90, %106
  %101 = phi %"class.std::thread"* [ %107, %106 ], [ %92, %90 ]
  %102 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %101, i64 0, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %106, label %105

105:                                              ; preds = %.preheader13
  invoke void @_ZNSt6thread4joinEv(%"class.std::thread"* nonnull %101)
          to label %106 unwind label %109

106:                                              ; preds = %.preheader13, %105
  %107 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %101, i64 1
  %108 = icmp eq %"class.std::thread"* %107, %94
  br i1 %108, label %.loopexit14, label %.preheader13

109:                                              ; preds = %105
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  br label %140

.loopexit12:                                      ; preds = %137, %.loopexit14
  call void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEED2Ev(%"class.MARC::ThreadSafeMutexQueue"* nonnull %9) #10
  %112 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %96, align 8, !tbaa !119
  %113 = icmp eq %"struct.std::atomic"** %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %.loopexit12
  %115 = bitcast %"struct.std::atomic"** %112 to i8*
  call void @_ZdlPv(i8* nonnull %115) #10
  br label %116

116:                                              ; preds = %.loopexit12, %114
  %117 = load %"class.std::thread"*, %"class.std::thread"** %91, align 8, !tbaa !118
  %118 = load %"class.std::thread"*, %"class.std::thread"** %93, align 8, !tbaa !115
  %119 = icmp eq %"class.std::thread"* %117, %118
  br i1 %119, label %.loopexit, label %.preheader

120:                                              ; preds = %.preheader
  %121 = icmp eq %"class.std::thread"* %126, %118
  br i1 %121, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %116, %120
  %122 = phi %"class.std::thread"* [ %126, %120 ], [ %117, %116 ]
  %123 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %122, i64 0, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = icmp eq i64 %124, 0
  %126 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %122, i64 1
  br i1 %125, label %120, label %127

127:                                              ; preds = %.preheader
  call void @_ZSt9terminatev() #30
  unreachable

.loopexit:                                        ; preds = %120, %116
  %128 = icmp eq %"class.std::thread"* %117, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %.loopexit
  %130 = bitcast %"class.std::thread"* %117 to i8*
  call void @_ZdlPv(i8* nonnull %130) #10
  br label %131

131:                                              ; preds = %.loopexit, %129
  ret void

.preheader11:                                     ; preds = %.loopexit14, %137
  %132 = phi %"struct.std::atomic"** [ %138, %137 ], [ %97, %.loopexit14 ]
  %133 = load %"struct.std::atomic"*, %"struct.std::atomic"** %132, align 8, !tbaa !72
  %134 = icmp eq %"struct.std::atomic"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %.preheader11
  %136 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %133, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %136) #32
  br label %137

137:                                              ; preds = %135, %.preheader11
  %138 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %132, i64 1
  %139 = icmp eq %"struct.std::atomic"** %138, %99
  br i1 %139, label %.loopexit12, label %.preheader11

140:                                              ; preds = %109, %89, %72
  %141 = phi i8* [ %81, %89 ], [ %111, %109 ], [ %74, %72 ]
  call void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEED2Ev(%"class.MARC::ThreadSafeMutexQueue"* nonnull %9) #10
  %142 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 3
  call void @_ZNSt6vectorIPSt6atomicIbESaIS2_EED2Ev(%"class.std::vector.0"* nonnull %142) #10
  %143 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 2
  call void @_ZNSt6vectorISt6threadSaIS0_EED2Ev(%"class.std::vector"* nonnull %143) #10
  call void @__clang_call_terminate(i8* %141) #30
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN4MARC14ThreadPoolForCD2Ev(%"class.MARC::ThreadPoolForC"*) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadPoolForC", %"class.MARC::ThreadPoolForC"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC14ThreadPoolForCE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadPoolForC", %"class.MARC::ThreadPoolForC"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %3, align 8, !tbaa !96
  %5 = icmp eq %"class.MARC::ThreadCTask"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.MARC::ThreadCTask"** %4 to i8*
  tail call void @_ZdlPv(i8* nonnull %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.MARC::ThreadPoolForC", %"class.MARC::ThreadPoolForC"* %0, i64 0, i32 0
  tail call void @_ZN4MARC19ThreadPoolInterfaceD2Ev(%"class.MARC::ThreadPoolInterface"* %9) #10
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE7waitPopERS3_(%"class.MARC::ThreadSafeMutexQueue"*, %"class.std::function"* dereferenceable(32)) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::unique_lock", align 8
  %4 = bitcast %"class.std::unique_lock"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %3, i64 0, i32 0
  store %"class.std::mutex"* %5, %"class.std::mutex"** %6, align 8, !tbaa !75
  %7 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %3, i64 0, i32 1
  store i8 0, i8* %7, align 8, !tbaa !77
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %5, i64 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %9) #10
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZSt20__throw_system_errori(i32 %10) #33
  unreachable

13:                                               ; preds = %2, %8
  store i8 1, i8* %7, align 8, !tbaa !77
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = load atomic i8, i8* %14 seq_cst, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %54, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %20 = load %"class.std::function"*, %"class.std::function"** %19, align 8, !tbaa !198
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %22 = load %"class.std::function"*, %"class.std::function"** %21, align 8, !tbaa !198
  %23 = icmp eq %"class.std::function"* %20, %22
  br i1 %23, label %24, label %.loopexit

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 2
  br label %26

26:                                               ; preds = %24, %30
  %27 = load atomic i8, i8* %14 seq_cst, align 1
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %.loopexit, label %30

30:                                               ; preds = %26
  call void @_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE(%"class.std::condition_variable"* nonnull %25, %"class.std::unique_lock"* nonnull dereferenceable(16) %3) #10
  %31 = load %"class.std::function"*, %"class.std::function"** %19, align 8, !tbaa !198
  %32 = load %"class.std::function"*, %"class.std::function"** %21, align 8, !tbaa !198
  %33 = icmp eq %"class.std::function"* %31, %32
  br i1 %33, label %26, label %.loopexit

34:                                               ; preds = %50
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = load i8, i8* %7, align 8, !tbaa !77, !range !62
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %34
  %39 = load %"class.std::mutex"*, %"class.std::mutex"** %6, align 8, !tbaa !75
  %40 = icmp eq %"class.std::mutex"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %42, label %45

42:                                               ; preds = %41
  %43 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %39, i64 0, i32 0, i32 0
  %44 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %43) #10
  br label %45

45:                                               ; preds = %42, %41
  store i8 0, i8* %7, align 8, !tbaa !77
  br label %46

46:                                               ; preds = %34, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  resume { i8*, i32 } %35

.loopexit:                                        ; preds = %30, %26, %18
  %47 = load atomic i8, i8* %14 seq_cst, align 1
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %.loopexit
  %51 = bitcast %"class.MARC::ThreadSafeMutexQueue"* %0 to %"class.MARC::ThreadSafeQueue"*
  invoke void @_ZN4MARC15ThreadSafeQueueISt8functionIFvvEEE12internal_popERS3_(%"class.MARC::ThreadSafeQueue"* %51, %"class.std::function"* nonnull dereferenceable(32) %1)
          to label %52 unwind label %34

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 3
  call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %53) #10
  br label %54

54:                                               ; preds = %.loopexit, %13, %52
  %55 = phi i1 [ false, %13 ], [ false, %.loopexit ], [ true, %52 ]
  %56 = load i8, i8* %7, align 8, !tbaa !77, !range !62
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %54
  %59 = load %"class.std::mutex"*, %"class.std::mutex"** %6, align 8, !tbaa !75
  %60 = icmp eq %"class.std::mutex"* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %62, label %65

62:                                               ; preds = %61
  %63 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %59, i64 0, i32 0, i32 0
  %64 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %63) #10
  br label %65

65:                                               ; preds = %62, %61
  store i8 0, i8* %7, align 8, !tbaa !77
  br label %66

66:                                               ; preds = %54, %58, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret i1 %55
}

; Function Attrs: noreturn
declare dso_local void @_ZSt25__throw_bad_function_callv() local_unnamed_addr #20

declare dso_local void @_ZNSt6thread4joinEv(%"class.std::thread"*) local_unnamed_addr #19

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEED2Ev(%"class.MARC::ThreadSafeMutexQueue"*) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %4, label %10

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %5) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  invoke void @_ZSt20__throw_system_errori(i32 %6) #33
          to label %9 unwind label %26

9:                                                ; preds = %8
  unreachable

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load atomic i8, i8* %11 seq_cst, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  store atomic i8 0, i8* %11 seq_cst, align 1
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %16) #10
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %17) #10
  br label %18

18:                                               ; preds = %15, %10
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %19, label %22

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %21 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %20) #10
  br label %22

22:                                               ; preds = %19, %18
  %23 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %23) #10
  %24 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %24) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueISt8functionIFvvEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %25 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt5dequeISt8functionIFvvEESaIS2_EED2Ev(%"class.std::deque"* nonnull %25) #10
  ret void

26:                                               ; preds = %8
  %27 = landingpad { i8*, i32 }
          catch i8* null
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %29) #10
  %30 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %30) #10
  %31 = bitcast %"class.MARC::ThreadSafeMutexQueue"* %0 to %"class.MARC::ThreadSafeQueue"*
  tail call void @_ZN4MARC15ThreadSafeQueueISt8functionIFvvEEED2Ev(%"class.MARC::ThreadSafeQueue"* %31) #10
  tail call void @__clang_call_terminate(i8* %28) #30
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPSt6atomicIbESaIS2_EED2Ev(%"class.std::vector.0"*) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %2, align 8, !tbaa !119
  %4 = icmp eq %"struct.std::atomic"** %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.std::atomic"** %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #10
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorISt6threadSaIS0_EED2Ev(%"class.std::vector"*) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::thread"*, %"class.std::thread"** %2, align 8, !tbaa !118
  %4 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.std::thread"*, %"class.std::thread"** %4, align 8, !tbaa !115
  %6 = icmp eq %"class.std::thread"* %3, %5
  br i1 %6, label %.loopexit, label %.preheader

7:                                                ; preds = %.preheader
  %8 = icmp eq %"class.std::thread"* %13, %5
  br i1 %8, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %1, %7
  %9 = phi %"class.std::thread"* [ %13, %7 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %9, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  %13 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %9, i64 1
  br i1 %12, label %7, label %14

14:                                               ; preds = %.preheader
  tail call void @_ZSt9terminatev() #30
  unreachable

.loopexit:                                        ; preds = %7, %1
  %15 = icmp eq %"class.std::thread"* %3, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %.loopexit
  %17 = bitcast %"class.std::thread"* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %17) #10
  br label %18

18:                                               ; preds = %.loopexit, %16
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"*) unnamed_addr #17

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt5dequeISt8functionIFvvEESaIS2_EED2Ev(%"class.std::deque"*) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Deque_iterator", align 16
  %3 = alloca %"struct.std::_Deque_iterator", align 16
  %4 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast %"struct.std::_Deque_iterator"* %4 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8, !tbaa !72, !noalias !203
  %7 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2, i32 2
  %8 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2, i32 3
  %9 = bitcast %"class.std::function"** %7 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8, !tbaa !72, !noalias !203
  %11 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %12 = bitcast %"struct.std::_Deque_iterator"* %11 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8, !tbaa !72, !noalias !206
  %14 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 2
  %15 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 3
  %16 = bitcast %"class.std::function"** %14 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8, !tbaa !72, !noalias !206
  %18 = bitcast %"struct.std::_Deque_iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18)
  %19 = bitcast %"struct.std::_Deque_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19)
  %20 = bitcast %"struct.std::_Deque_iterator"* %2 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %20, align 16, !tbaa !72
  %21 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %2, i64 0, i32 2
  %22 = bitcast %"class.std::function"** %21 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %22, align 16, !tbaa !72
  %23 = bitcast %"struct.std::_Deque_iterator"* %3 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %23, align 16, !tbaa !72
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i64 0, i32 2
  %25 = bitcast %"class.std::function"** %24 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %25, align 16, !tbaa !72
  invoke void @_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_(%"class.std::deque"* %0, %"struct.std::_Deque_iterator"* nonnull %2, %"struct.std::_Deque_iterator"* nonnull %3)
          to label %26 unwind label %47

26:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19)
  %27 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::function"**, %"class.std::function"*** %27, align 8, !tbaa !209
  %29 = icmp eq %"class.std::function"** %28, null
  br i1 %29, label %46, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.std::function"** %28 to i8*
  %32 = load %"class.std::function"**, %"class.std::function"*** %8, align 8, !tbaa !212
  %33 = load %"class.std::function"**, %"class.std::function"*** %15, align 8, !tbaa !213
  %34 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %33, i64 1
  %35 = icmp ult %"class.std::function"** %32, %34
  br i1 %35, label %.preheader, label %44

.preheader:                                       ; preds = %30, %.preheader
  %36 = phi %"class.std::function"** [ %39, %.preheader ], [ %32, %30 ]
  %37 = bitcast %"class.std::function"** %36 to i8**
  %38 = load i8*, i8** %37, align 8, !tbaa !72
  call void @_ZdlPv(i8* %38) #10
  %39 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %36, i64 1
  %40 = icmp ult %"class.std::function"** %36, %33
  br i1 %40, label %.preheader, label %41

41:                                               ; preds = %.preheader
  %42 = bitcast %"class.std::deque"* %0 to i8**
  %43 = load i8*, i8** %42, align 8, !tbaa !209
  br label %44

44:                                               ; preds = %41, %30
  %45 = phi i8* [ %43, %41 ], [ %31, %30 ]
  call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %26, %44
  ret void

47:                                               ; preds = %1
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0
  %50 = extractvalue { i8*, i32 } %48, 0
  call void @_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED2Ev(%"class.std::_Deque_base"* %49) #10
  call void @__clang_call_terminate(i8* %50) #30
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC15ThreadSafeQueueISt8functionIFvvEEED2Ev(%"class.MARC::ThreadSafeQueue"*) unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue", %"class.MARC::ThreadSafeQueue"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueISt8functionIFvvEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeQueue", %"class.MARC::ThreadSafeQueue"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt5dequeISt8functionIFvvEESaIS2_EED2Ev(%"class.std::deque"* nonnull %3) #10
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) local_unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %1, i64 0, i32 3
  %5 = load %"class.std::function"**, %"class.std::function"*** %4, align 8, !tbaa !196
  %6 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %5, i64 1
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %2, i64 0, i32 3
  %8 = load %"class.std::function"**, %"class.std::function"*** %7, align 8, !tbaa !196
  %9 = icmp ult %"class.std::function"** %6, %8
  br i1 %9, label %.preheader32, label %12

10:                                               ; preds = %186
  %11 = load %"class.std::function"**, %"class.std::function"*** %4, align 8, !tbaa !196
  br label %12

12:                                               ; preds = %10, %3
  %13 = phi %"class.std::function"** [ %5, %3 ], [ %11, %10 ]
  %14 = phi %"class.std::function"** [ %8, %3 ], [ %188, %10 ]
  %15 = icmp eq %"class.std::function"** %13, %14
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %1, i64 0, i32 0
  %17 = load %"class.std::function"*, %"class.std::function"** %16, align 8, !tbaa !198
  br i1 %15, label %68, label %33

.preheader32:                                     ; preds = %3, %186
  %18 = phi %"class.std::function"** [ %187, %186 ], [ %6, %3 ]
  %19 = load %"class.std::function"*, %"class.std::function"** %18, align 8, !tbaa !72
  %20 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 0, i32 0, i32 1
  %21 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %20, align 8, !tbaa !184
  %22 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %.preheader32
  %24 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 0, i32 0, i32 0
  %25 = invoke zeroext i1 %21(%"union.std::_Any_data"* dereferenceable(16) %24, %"union.std::_Any_data"* dereferenceable(16) %24, i32 3)
          to label %29 unwind label %26

26:                                               ; preds = %183, %176, %169, %162, %155, %148, %141, %134, %127, %120, %113, %106, %99, %92, %85, %23
  %27 = landingpad { i8*, i32 }
          catch i8* null
  %28 = extractvalue { i8*, i32 } %27, 0
  tail call void @__clang_call_terminate(i8* %28) #30
  unreachable

29:                                               ; preds = %23, %.preheader32
  %30 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 1, i32 0, i32 1
  %31 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %30, align 8, !tbaa !184
  %32 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %31, null
  br i1 %32, label %88, label %85

33:                                               ; preds = %12
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %1, i64 0, i32 2
  %35 = load %"class.std::function"*, %"class.std::function"** %34, align 8, !tbaa !200
  %36 = icmp eq %"class.std::function"* %17, %35
  br i1 %36, label %.loopexit31, label %.preheader30

.preheader30:                                     ; preds = %33, %47
  %37 = phi %"class.std::function"* [ %48, %47 ], [ %17, %33 ]
  %38 = getelementptr inbounds %"class.std::function", %"class.std::function"* %37, i64 0, i32 0, i32 1
  %39 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %38, align 8, !tbaa !184
  %40 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %.preheader30
  %42 = getelementptr inbounds %"class.std::function", %"class.std::function"* %37, i64 0, i32 0, i32 0
  %43 = invoke zeroext i1 %39(%"union.std::_Any_data"* dereferenceable(16) %42, %"union.std::_Any_data"* dereferenceable(16) %42, i32 3)
          to label %47 unwind label %44

44:                                               ; preds = %41
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  tail call void @__clang_call_terminate(i8* %46) #30
  unreachable

47:                                               ; preds = %41, %.preheader30
  %48 = getelementptr inbounds %"class.std::function", %"class.std::function"* %37, i64 1
  %49 = icmp eq %"class.std::function"* %48, %35
  br i1 %49, label %.loopexit31, label %.preheader30

.loopexit31:                                      ; preds = %47, %33
  %50 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %2, i64 0, i32 1
  %51 = load %"class.std::function"*, %"class.std::function"** %50, align 8, !tbaa !199
  %52 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %2, i64 0, i32 0
  %53 = load %"class.std::function"*, %"class.std::function"** %52, align 8, !tbaa !198
  %54 = icmp eq %"class.std::function"* %51, %53
  br i1 %54, label %.loopexit, label %.preheader28

.preheader28:                                     ; preds = %.loopexit31, %65
  %55 = phi %"class.std::function"* [ %66, %65 ], [ %51, %.loopexit31 ]
  %56 = getelementptr inbounds %"class.std::function", %"class.std::function"* %55, i64 0, i32 0, i32 1
  %57 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %56, align 8, !tbaa !184
  %58 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %.preheader28
  %60 = getelementptr inbounds %"class.std::function", %"class.std::function"* %55, i64 0, i32 0, i32 0
  %61 = invoke zeroext i1 %57(%"union.std::_Any_data"* dereferenceable(16) %60, %"union.std::_Any_data"* dereferenceable(16) %60, i32 3)
          to label %65 unwind label %62

62:                                               ; preds = %59
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  tail call void @__clang_call_terminate(i8* %64) #30
  unreachable

65:                                               ; preds = %59, %.preheader28
  %66 = getelementptr inbounds %"class.std::function", %"class.std::function"* %55, i64 1
  %67 = icmp eq %"class.std::function"* %66, %53
  br i1 %67, label %.loopexit, label %.preheader28

68:                                               ; preds = %12
  %69 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %2, i64 0, i32 0
  %70 = load %"class.std::function"*, %"class.std::function"** %69, align 8, !tbaa !198
  %71 = icmp eq %"class.std::function"* %17, %70
  br i1 %71, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %68, %82
  %72 = phi %"class.std::function"* [ %83, %82 ], [ %17, %68 ]
  %73 = getelementptr inbounds %"class.std::function", %"class.std::function"* %72, i64 0, i32 0, i32 1
  %74 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %73, align 8, !tbaa !184
  %75 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %.preheader
  %77 = getelementptr inbounds %"class.std::function", %"class.std::function"* %72, i64 0, i32 0, i32 0
  %78 = invoke zeroext i1 %74(%"union.std::_Any_data"* dereferenceable(16) %77, %"union.std::_Any_data"* dereferenceable(16) %77, i32 3)
          to label %82 unwind label %79

79:                                               ; preds = %76
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  tail call void @__clang_call_terminate(i8* %81) #30
  unreachable

82:                                               ; preds = %76, %.preheader
  %83 = getelementptr inbounds %"class.std::function", %"class.std::function"* %72, i64 1
  %84 = icmp eq %"class.std::function"* %83, %70
  br i1 %84, label %.loopexit, label %.preheader

.loopexit:                                        ; preds = %65, %82, %68, %.loopexit31
  ret void

85:                                               ; preds = %29
  %86 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 1, i32 0, i32 0
  %87 = invoke zeroext i1 %31(%"union.std::_Any_data"* nonnull dereferenceable(16) %86, %"union.std::_Any_data"* nonnull dereferenceable(16) %86, i32 3)
          to label %88 unwind label %26

88:                                               ; preds = %85, %29
  %89 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 2, i32 0, i32 1
  %90 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %89, align 8, !tbaa !184
  %91 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 2, i32 0, i32 0
  %94 = invoke zeroext i1 %90(%"union.std::_Any_data"* nonnull dereferenceable(16) %93, %"union.std::_Any_data"* nonnull dereferenceable(16) %93, i32 3)
          to label %95 unwind label %26

95:                                               ; preds = %92, %88
  %96 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 3, i32 0, i32 1
  %97 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %96, align 8, !tbaa !184
  %98 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 3, i32 0, i32 0
  %101 = invoke zeroext i1 %97(%"union.std::_Any_data"* nonnull dereferenceable(16) %100, %"union.std::_Any_data"* nonnull dereferenceable(16) %100, i32 3)
          to label %102 unwind label %26

102:                                              ; preds = %99, %95
  %103 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 4, i32 0, i32 1
  %104 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %103, align 8, !tbaa !184
  %105 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 4, i32 0, i32 0
  %108 = invoke zeroext i1 %104(%"union.std::_Any_data"* nonnull dereferenceable(16) %107, %"union.std::_Any_data"* nonnull dereferenceable(16) %107, i32 3)
          to label %109 unwind label %26

109:                                              ; preds = %106, %102
  %110 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 5, i32 0, i32 1
  %111 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %110, align 8, !tbaa !184
  %112 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %111, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 5, i32 0, i32 0
  %115 = invoke zeroext i1 %111(%"union.std::_Any_data"* nonnull dereferenceable(16) %114, %"union.std::_Any_data"* nonnull dereferenceable(16) %114, i32 3)
          to label %116 unwind label %26

116:                                              ; preds = %113, %109
  %117 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 6, i32 0, i32 1
  %118 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %117, align 8, !tbaa !184
  %119 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 6, i32 0, i32 0
  %122 = invoke zeroext i1 %118(%"union.std::_Any_data"* nonnull dereferenceable(16) %121, %"union.std::_Any_data"* nonnull dereferenceable(16) %121, i32 3)
          to label %123 unwind label %26

123:                                              ; preds = %120, %116
  %124 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 7, i32 0, i32 1
  %125 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %124, align 8, !tbaa !184
  %126 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 7, i32 0, i32 0
  %129 = invoke zeroext i1 %125(%"union.std::_Any_data"* nonnull dereferenceable(16) %128, %"union.std::_Any_data"* nonnull dereferenceable(16) %128, i32 3)
          to label %130 unwind label %26

130:                                              ; preds = %127, %123
  %131 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 8, i32 0, i32 1
  %132 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %131, align 8, !tbaa !184
  %133 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 8, i32 0, i32 0
  %136 = invoke zeroext i1 %132(%"union.std::_Any_data"* nonnull dereferenceable(16) %135, %"union.std::_Any_data"* nonnull dereferenceable(16) %135, i32 3)
          to label %137 unwind label %26

137:                                              ; preds = %134, %130
  %138 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 9, i32 0, i32 1
  %139 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %138, align 8, !tbaa !184
  %140 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %139, null
  br i1 %140, label %144, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 9, i32 0, i32 0
  %143 = invoke zeroext i1 %139(%"union.std::_Any_data"* nonnull dereferenceable(16) %142, %"union.std::_Any_data"* nonnull dereferenceable(16) %142, i32 3)
          to label %144 unwind label %26

144:                                              ; preds = %141, %137
  %145 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 10, i32 0, i32 1
  %146 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %145, align 8, !tbaa !184
  %147 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 10, i32 0, i32 0
  %150 = invoke zeroext i1 %146(%"union.std::_Any_data"* nonnull dereferenceable(16) %149, %"union.std::_Any_data"* nonnull dereferenceable(16) %149, i32 3)
          to label %151 unwind label %26

151:                                              ; preds = %148, %144
  %152 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 11, i32 0, i32 1
  %153 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %152, align 8, !tbaa !184
  %154 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %153, null
  br i1 %154, label %158, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 11, i32 0, i32 0
  %157 = invoke zeroext i1 %153(%"union.std::_Any_data"* nonnull dereferenceable(16) %156, %"union.std::_Any_data"* nonnull dereferenceable(16) %156, i32 3)
          to label %158 unwind label %26

158:                                              ; preds = %155, %151
  %159 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 12, i32 0, i32 1
  %160 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %159, align 8, !tbaa !184
  %161 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 12, i32 0, i32 0
  %164 = invoke zeroext i1 %160(%"union.std::_Any_data"* nonnull dereferenceable(16) %163, %"union.std::_Any_data"* nonnull dereferenceable(16) %163, i32 3)
          to label %165 unwind label %26

165:                                              ; preds = %162, %158
  %166 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 13, i32 0, i32 1
  %167 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %166, align 8, !tbaa !184
  %168 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %167, null
  br i1 %168, label %172, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 13, i32 0, i32 0
  %171 = invoke zeroext i1 %167(%"union.std::_Any_data"* nonnull dereferenceable(16) %170, %"union.std::_Any_data"* nonnull dereferenceable(16) %170, i32 3)
          to label %172 unwind label %26

172:                                              ; preds = %169, %165
  %173 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 14, i32 0, i32 1
  %174 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %173, align 8, !tbaa !184
  %175 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %174, null
  br i1 %175, label %179, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 14, i32 0, i32 0
  %178 = invoke zeroext i1 %174(%"union.std::_Any_data"* nonnull dereferenceable(16) %177, %"union.std::_Any_data"* nonnull dereferenceable(16) %177, i32 3)
          to label %179 unwind label %26

179:                                              ; preds = %176, %172
  %180 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 15, i32 0, i32 1
  %181 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %180, align 8, !tbaa !184
  %182 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %181, null
  br i1 %182, label %186, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.std::function", %"class.std::function"* %19, i64 15, i32 0, i32 0
  %185 = invoke zeroext i1 %181(%"union.std::_Any_data"* nonnull dereferenceable(16) %184, %"union.std::_Any_data"* nonnull dereferenceable(16) %184, i32 3)
          to label %186 unwind label %26

186:                                              ; preds = %183, %179
  %187 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %18, i64 1
  %188 = load %"class.std::function"**, %"class.std::function"*** %7, align 8, !tbaa !196
  %189 = icmp ult %"class.std::function"** %187, %188
  br i1 %189, label %.preheader32, label %10
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED2Ev(%"class.std::_Deque_base"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.std::function"**, %"class.std::function"*** %2, align 8, !tbaa !209
  %4 = icmp eq %"class.std::function"** %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.std::function"** %3 to i8*
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 2, i32 3
  %8 = load %"class.std::function"**, %"class.std::function"*** %7, align 8, !tbaa !212
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 3, i32 3
  %10 = load %"class.std::function"**, %"class.std::function"*** %9, align 8, !tbaa !213
  %11 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %10, i64 1
  %12 = icmp ult %"class.std::function"** %8, %11
  br i1 %12, label %.preheader, label %21

.preheader:                                       ; preds = %5, %.preheader
  %13 = phi %"class.std::function"** [ %16, %.preheader ], [ %8, %5 ]
  %14 = bitcast %"class.std::function"** %13 to i8**
  %15 = load i8*, i8** %14, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %15) #10
  %16 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %13, i64 1
  %17 = icmp ult %"class.std::function"** %13, %10
  br i1 %17, label %.preheader, label %18

18:                                               ; preds = %.preheader
  %19 = bitcast %"class.std::_Deque_base"* %0 to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !209
  br label %21

21:                                               ; preds = %5, %18
  %22 = phi i8* [ %20, %18 ], [ %6, %5 ]
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %1, %21
  ret void
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC15ThreadSafeQueueISt8functionIFvvEEE7isValidEv(%"class.MARC::ThreadSafeQueue"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue", %"class.MARC::ThreadSafeQueue"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC15ThreadSafeQueueISt8functionIFvvEEE10invalidateEv(%"class.MARC::ThreadSafeQueue"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue", %"class.MARC::ThreadSafeQueue"* %0, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %2 seq_cst, align 1
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE6tryPopERS3_(%"class.MARC::ThreadSafeMutexQueue"*, %"class.std::function"* dereferenceable(32)) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %4, label %9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %5) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZSt20__throw_system_errori(i32 %6) #33
  unreachable

9:                                                ; preds = %2, %4
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %11 = load %"class.std::function"*, %"class.std::function"** %10, align 8, !tbaa !198
  %12 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %13 = load %"class.std::function"*, %"class.std::function"** %12, align 8, !tbaa !198
  %14 = icmp eq %"class.std::function"* %11, %13
  br i1 %14, label %30, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load atomic i8, i8* %16 seq_cst, align 1
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %30, label %26

20:                                               ; preds = %26
  %21 = landingpad { i8*, i32 }
          cleanup
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %22, label %25

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %23) #10
  br label %25

25:                                               ; preds = %20, %22
  resume { i8*, i32 } %21

26:                                               ; preds = %15
  %27 = bitcast %"class.MARC::ThreadSafeMutexQueue"* %0 to %"class.MARC::ThreadSafeQueue"*
  invoke void @_ZN4MARC15ThreadSafeQueueISt8functionIFvvEEE12internal_popERS3_(%"class.MARC::ThreadSafeQueue"* %27, %"class.std::function"* nonnull dereferenceable(32) %1)
          to label %28 unwind label %20

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %29) #10
  br label %30

30:                                               ; preds = %15, %28, %9
  %31 = phi i1 [ false, %15 ], [ false, %9 ], [ true, %28 ]
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %32, label %35

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %34 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %33) #10
  br label %35

35:                                               ; preds = %30, %32
  ret i1 %31
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE7waitPopEv(%"class.MARC::ThreadSafeMutexQueue"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::unique_lock", align 8
  %3 = bitcast %"class.std::unique_lock"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %2, i64 0, i32 0
  store %"class.std::mutex"* %4, %"class.std::mutex"** %5, align 8, !tbaa !75
  %6 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %2, i64 0, i32 1
  store i8 0, i8* %6, align 8, !tbaa !77
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %7, label %12

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %4, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %8) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZSt20__throw_system_errori(i32 %9) #33
  unreachable

12:                                               ; preds = %1, %7
  store i8 1, i8* %6, align 8, !tbaa !77
  %13 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = load atomic i8, i8* %13 seq_cst, align 1
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %81, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %19 = load %"class.std::function"*, %"class.std::function"** %18, align 8, !tbaa !198
  %20 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %21 = load %"class.std::function"*, %"class.std::function"** %20, align 8, !tbaa !198
  %22 = icmp eq %"class.std::function"* %19, %21
  br i1 %22, label %23, label %.loopexit

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 2
  br label %25

25:                                               ; preds = %23, %29
  %26 = load atomic i8, i8* %13 seq_cst, align 1
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %.loopexit, label %29

29:                                               ; preds = %25
  call void @_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE(%"class.std::condition_variable"* nonnull %24, %"class.std::unique_lock"* nonnull dereferenceable(16) %2) #10
  %30 = load %"class.std::function"*, %"class.std::function"** %18, align 8, !tbaa !198
  %31 = load %"class.std::function"*, %"class.std::function"** %20, align 8, !tbaa !198
  %32 = icmp eq %"class.std::function"* %30, %31
  br i1 %32, label %25, label %.loopexit

.loopexit:                                        ; preds = %29, %25, %17
  %33 = load atomic i8, i8* %13 seq_cst, align 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %.loopexit
  %37 = load %"class.std::function"*, %"class.std::function"** %20, align 8, !tbaa !214
  %38 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %39 = load %"class.std::function"*, %"class.std::function"** %38, align 8, !tbaa !215
  %40 = getelementptr inbounds %"class.std::function", %"class.std::function"* %39, i64 -1
  %41 = icmp eq %"class.std::function"* %37, %40
  br i1 %41, label %57, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::function", %"class.std::function"* %37, i64 0, i32 0, i32 1
  %44 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %43, align 8, !tbaa !184
  %45 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %44, null
  br i1 %45, label %54, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::function", %"class.std::function"* %37, i64 0, i32 0, i32 0
  %48 = invoke zeroext i1 %44(%"union.std::_Any_data"* dereferenceable(16) %47, %"union.std::_Any_data"* dereferenceable(16) %47, i32 3)
          to label %49 unwind label %51

49:                                               ; preds = %46
  %50 = load %"class.std::function"*, %"class.std::function"** %20, align 8, !tbaa !214
  br label %54

51:                                               ; preds = %46
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  call void @__clang_call_terminate(i8* %53) #30
  unreachable

54:                                               ; preds = %49, %42
  %55 = phi %"class.std::function"* [ %50, %49 ], [ %37, %42 ]
  %56 = getelementptr inbounds %"class.std::function", %"class.std::function"* %55, i64 1
  store %"class.std::function"* %56, %"class.std::function"** %20, align 8, !tbaa !214
  br label %79

57:                                               ; preds = %36
  %58 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %59 = getelementptr inbounds %"class.std::function", %"class.std::function"* %37, i64 0, i32 0, i32 1
  %60 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %59, align 8, !tbaa !184
  %61 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::function", %"class.std::function"* %37, i64 0, i32 0, i32 0
  %64 = invoke zeroext i1 %60(%"union.std::_Any_data"* dereferenceable(16) %63, %"union.std::_Any_data"* dereferenceable(16) %63, i32 3)
          to label %68 unwind label %65

65:                                               ; preds = %62
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  call void @__clang_call_terminate(i8* %67) #30
  unreachable

68:                                               ; preds = %62, %57
  %69 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %70 = bitcast %"class.std::function"** %69 to i8**
  %71 = load i8*, i8** %70, align 8, !tbaa !216
  call void @_ZdlPv(i8* %71) #10
  %72 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %73 = load %"class.std::function"**, %"class.std::function"*** %72, align 8, !tbaa !212
  %74 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %73, i64 1
  store %"class.std::function"** %74, %"class.std::function"*** %72, align 8, !tbaa !196
  %75 = load %"class.std::function"*, %"class.std::function"** %74, align 8, !tbaa !72
  store %"class.std::function"* %75, %"class.std::function"** %69, align 8, !tbaa !199
  %76 = getelementptr inbounds %"class.std::function", %"class.std::function"* %75, i64 16
  store %"class.std::function"* %76, %"class.std::function"** %38, align 8, !tbaa !200
  %77 = ptrtoint %"class.std::function"* %75 to i64
  %78 = bitcast %"struct.std::_Deque_iterator"* %58 to i64*
  store i64 %77, i64* %78, align 8, !tbaa !214
  br label %79

79:                                               ; preds = %54, %68
  %80 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 3
  call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %80) #10
  br label %81

81:                                               ; preds = %.loopexit, %12, %79
  %82 = phi i1 [ true, %79 ], [ false, %12 ], [ false, %.loopexit ]
  %83 = load i8, i8* %6, align 8, !tbaa !77, !range !62
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = load %"class.std::mutex"*, %"class.std::mutex"** %5, align 8, !tbaa !75
  %87 = icmp eq %"class.std::mutex"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %85
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %89, label %92

89:                                               ; preds = %88
  %90 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %86, i64 0, i32 0, i32 0
  %91 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %90) #10
  br label %92

92:                                               ; preds = %89, %88
  store i8 0, i8* %6, align 8, !tbaa !77
  br label %93

93:                                               ; preds = %81, %85, %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  ret i1 %82
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE4pushES3_(%"class.MARC::ThreadSafeMutexQueue"*, %"class.std::function"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %4, label %9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %5) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZSt20__throw_system_errori(i32 %6) #33
  unreachable

9:                                                ; preds = %2, %4
  invoke void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE22internal_pushAndNotifyERS3_(%"class.MARC::ThreadSafeMutexQueue"* %0, %"class.std::function"* dereferenceable(32) %1)
          to label %10 unwind label %15

10:                                               ; preds = %9
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %11, label %14

11:                                               ; preds = %10
  %12 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %13 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %12) #10
  br label %14

14:                                               ; preds = %10, %11
  ret void

15:                                               ; preds = %9
  %16 = landingpad { i8*, i32 }
          cleanup
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %17, label %20

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %18) #10
  br label %20

20:                                               ; preds = %15, %17
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE8waitPushES3_l(%"class.MARC::ThreadSafeMutexQueue"*, %"class.std::function"*, i64) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::unique_lock", align 8
  %5 = bitcast %"class.std::unique_lock"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %4, i64 0, i32 0
  store %"class.std::mutex"* %6, %"class.std::mutex"** %7, align 8, !tbaa !75
  %8 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %4, i64 0, i32 1
  store i8 0, i8* %8, align 8, !tbaa !77
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %6, i64 0, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %10) #10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZSt20__throw_system_errori(i32 %11) #33
  unreachable

14:                                               ; preds = %3, %9
  store i8 1, i8* %8, align 8, !tbaa !77
  %15 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %20 = bitcast %"class.std::function"*** %19 to i64*
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %22 = bitcast %"class.std::function"*** %21 to i64*
  %23 = bitcast %"struct.std::_Deque_iterator"* %17 to i64*
  %24 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %25 = bitcast %"class.std::function"** %24 to i64*
  %26 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %27 = bitcast %"class.std::function"** %26 to i64*
  %28 = bitcast %"struct.std::_Deque_iterator"* %18 to i64*
  br label %29

29:                                               ; preds = %50, %14
  %30 = load i64, i64* %20, align 8, !tbaa !196
  %31 = load i64, i64* %22, align 8, !tbaa !196
  %32 = sub i64 %30, %31
  %33 = shl i64 %32, 1
  %34 = add i64 %33, -16
  %35 = load i64, i64* %23, align 8, !tbaa !198
  %36 = load i64, i64* %25, align 8, !tbaa !199
  %37 = sub i64 %35, %36
  %38 = ashr exact i64 %37, 5
  %39 = add nsw i64 %34, %38
  %40 = load i64, i64* %27, align 8, !tbaa !200
  %41 = load i64, i64* %28, align 8, !tbaa !198
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 5
  %44 = add nsw i64 %39, %43
  %45 = icmp ult i64 %44, %2
  br i1 %45, label %51, label %46

46:                                               ; preds = %29
  %47 = load atomic i8, i8* %16 seq_cst, align 1
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  call void @_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE(%"class.std::condition_variable"* nonnull %15, %"class.std::unique_lock"* nonnull dereferenceable(16) %4) #10
  br label %29

51:                                               ; preds = %46, %29
  %52 = load atomic i8, i8* %16 seq_cst, align 1
  %53 = and i8 %52, 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %69, label %68

55:                                               ; preds = %68
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = load i8, i8* %8, align 8, !tbaa !77, !range !62
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %55
  %60 = load %"class.std::mutex"*, %"class.std::mutex"** %7, align 8, !tbaa !75
  %61 = icmp eq %"class.std::mutex"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %59
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %63, label %66

63:                                               ; preds = %62
  %64 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %60, i64 0, i32 0, i32 0
  %65 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %64) #10
  br label %66

66:                                               ; preds = %63, %62
  store i8 0, i8* %8, align 8, !tbaa !77
  br label %67

67:                                               ; preds = %55, %59, %66
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  resume { i8*, i32 } %56

68:                                               ; preds = %51
  invoke void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE22internal_pushAndNotifyERS3_(%"class.MARC::ThreadSafeMutexQueue"* nonnull %0, %"class.std::function"* dereferenceable(32) %1)
          to label %69 unwind label %55

69:                                               ; preds = %51, %68
  %70 = phi i1 [ false, %51 ], [ true, %68 ]
  %71 = load i8, i8* %8, align 8, !tbaa !77, !range !62
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %69
  %74 = load %"class.std::mutex"*, %"class.std::mutex"** %7, align 8, !tbaa !75
  %75 = icmp eq %"class.std::mutex"* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %73
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %77, label %80

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %74, i64 0, i32 0, i32 0
  %79 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %78) #10
  br label %80

80:                                               ; preds = %77, %76
  store i8 0, i8* %8, align 8, !tbaa !77
  br label %81

81:                                               ; preds = %69, %73, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret i1 %70
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE5clearEv(%"class.MARC::ThreadSafeMutexQueue"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %10 = load %"class.std::function"*, %"class.std::function"** %9, align 8, !tbaa !198
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %12 = load %"class.std::function"*, %"class.std::function"** %11, align 8, !tbaa !198
  %13 = icmp eq %"class.std::function"* %10, %12
  br i1 %13, label %.loopexit, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %18 = bitcast %"class.std::function"** %17 to i8**
  %19 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %20 = bitcast %"struct.std::_Deque_iterator"* %16 to i64*
  br label %21

21:                                               ; preds = %14, %55
  %22 = phi %"class.std::function"* [ %12, %14 ], [ %56, %55 ]
  %23 = load %"class.std::function"*, %"class.std::function"** %15, align 8, !tbaa !215
  %24 = getelementptr inbounds %"class.std::function", %"class.std::function"* %23, i64 -1
  %25 = icmp eq %"class.std::function"* %22, %24
  %26 = getelementptr inbounds %"class.std::function", %"class.std::function"* %22, i64 0, i32 0, i32 1
  %27 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %26, align 8, !tbaa !184
  %28 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %27, null
  br i1 %25, label %41, label %29

29:                                               ; preds = %21
  br i1 %28, label %38, label %30

30:                                               ; preds = %29
  %31 = getelementptr inbounds %"class.std::function", %"class.std::function"* %22, i64 0, i32 0, i32 0
  %32 = invoke zeroext i1 %27(%"union.std::_Any_data"* dereferenceable(16) %31, %"union.std::_Any_data"* dereferenceable(16) %31, i32 3)
          to label %33 unwind label %35

33:                                               ; preds = %30
  %34 = load %"class.std::function"*, %"class.std::function"** %11, align 8, !tbaa !214
  br label %38

35:                                               ; preds = %30
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  tail call void @__clang_call_terminate(i8* %37) #30
  unreachable

38:                                               ; preds = %33, %29
  %39 = phi %"class.std::function"* [ %34, %33 ], [ %22, %29 ]
  %40 = getelementptr inbounds %"class.std::function", %"class.std::function"* %39, i64 1
  store %"class.std::function"* %40, %"class.std::function"** %11, align 8, !tbaa !214
  br label %55

41:                                               ; preds = %21
  br i1 %28, label %48, label %42

42:                                               ; preds = %41
  %43 = getelementptr inbounds %"class.std::function", %"class.std::function"* %22, i64 0, i32 0, i32 0
  %44 = invoke zeroext i1 %27(%"union.std::_Any_data"* dereferenceable(16) %43, %"union.std::_Any_data"* dereferenceable(16) %43, i32 3)
          to label %48 unwind label %45

45:                                               ; preds = %42
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  tail call void @__clang_call_terminate(i8* %47) #30
  unreachable

48:                                               ; preds = %42, %41
  %49 = load i8*, i8** %18, align 8, !tbaa !216
  tail call void @_ZdlPv(i8* %49) #10
  %50 = load %"class.std::function"**, %"class.std::function"*** %19, align 8, !tbaa !212
  %51 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %50, i64 1
  store %"class.std::function"** %51, %"class.std::function"*** %19, align 8, !tbaa !196
  %52 = load %"class.std::function"*, %"class.std::function"** %51, align 8, !tbaa !72
  store %"class.std::function"* %52, %"class.std::function"** %17, align 8, !tbaa !199
  %53 = getelementptr inbounds %"class.std::function", %"class.std::function"* %52, i64 16
  store %"class.std::function"* %53, %"class.std::function"** %15, align 8, !tbaa !200
  %54 = ptrtoint %"class.std::function"* %52 to i64
  store i64 %54, i64* %20, align 8, !tbaa !214
  br label %55

55:                                               ; preds = %38, %48
  %56 = phi %"class.std::function"* [ %40, %38 ], [ %52, %48 ]
  %57 = load %"class.std::function"*, %"class.std::function"** %9, align 8, !tbaa !198
  %58 = icmp eq %"class.std::function"* %57, %56
  br i1 %58, label %.loopexit, label %21

.loopexit:                                        ; preds = %55, %8
  %59 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %59) #10
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %60, label %63

60:                                               ; preds = %.loopexit
  %61 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %62 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %61) #10
  br label %63

63:                                               ; preds = %.loopexit, %60
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE5emptyEv(%"class.MARC::ThreadSafeMutexQueue"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %10 = load %"class.std::function"*, %"class.std::function"** %9, align 8, !tbaa !198
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %12 = load %"class.std::function"*, %"class.std::function"** %11, align 8, !tbaa !198
  %13 = icmp eq %"class.std::function"* %10, %12
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %14, label %17

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %15) #10
  br label %17

17:                                               ; preds = %8, %14
  ret i1 %13
}

; Function Attrs: uwtable
define linkonce_odr dso_local i64 @_ZNK4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE4sizeEv(%"class.MARC::ThreadSafeMutexQueue"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %12 = bitcast %"class.std::function"*** %11 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !196
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %15 = bitcast %"class.std::function"*** %14 to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !196
  %17 = sub i64 %13, %16
  %18 = shl i64 %17, 1
  %19 = add i64 %18, -16
  %20 = bitcast %"struct.std::_Deque_iterator"* %9 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !198
  %22 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %23 = bitcast %"class.std::function"** %22 to i64*
  %24 = load i64, i64* %23, align 8, !tbaa !199
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 5
  %27 = add nsw i64 %19, %26
  %28 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %29 = bitcast %"class.std::function"** %28 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !200
  %31 = bitcast %"struct.std::_Deque_iterator"* %10 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !198
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 5
  %35 = add nsw i64 %27, %34
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %36, label %39

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %37) #10
  br label %39

39:                                               ; preds = %8, %36
  ret i64 %35
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE10invalidateEv(%"class.MARC::ThreadSafeMutexQueue"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load atomic i8, i8* %9 seq_cst, align 1
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  store atomic i8 0, i8* %9 seq_cst, align 1
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %14) #10
  %15 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %15) #10
  br label %16

16:                                               ; preds = %8, %13
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %17, label %20

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %18) #10
  br label %20

20:                                               ; preds = %16, %17
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE22internal_pushAndNotifyERS3_(%"class.MARC::ThreadSafeMutexQueue"*, %"class.std::function"* dereferenceable(32)) local_unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %6 = load %"class.std::function"*, %"class.std::function"** %5, align 8, !tbaa !217
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 2
  %8 = load %"class.std::function"*, %"class.std::function"** %7, align 8, !tbaa !218
  %9 = getelementptr inbounds %"class.std::function", %"class.std::function"* %8, i64 -1
  %10 = icmp eq %"class.std::function"* %6, %9
  br i1 %10, label %29, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::function", %"class.std::function"* %6, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %12, align 8, !tbaa !184
  %13 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = bitcast %"class.std::function"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %14, i64 16, i1 false) #10
  %15 = bitcast %"class.std::function"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %15, i64 16, i1 false) #10, !tbaa.struct !219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %13, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  %16 = getelementptr inbounds %"class.std::function", %"class.std::function"* %1, i64 0, i32 0, i32 1
  %17 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %16 to i64*
  %18 = load i64, i64* %17, align 8, !tbaa !72
  %19 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %12 to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !72
  store i64 %20, i64* %17, align 8, !tbaa !72
  store i64 %18, i64* %19, align 8, !tbaa !72
  %21 = getelementptr inbounds %"class.std::function", %"class.std::function"* %1, i64 0, i32 1
  %22 = getelementptr inbounds %"class.std::function", %"class.std::function"* %6, i64 0, i32 1
  %23 = bitcast void (%"union.std::_Any_data"*)** %21 to i64*
  %24 = load i64, i64* %23, align 8, !tbaa !72
  %25 = bitcast void (%"union.std::_Any_data"*)** %22 to i64*
  %26 = load i64, i64* %25, align 8, !tbaa !72
  store i64 %26, i64* %23, align 8, !tbaa !72
  store i64 %24, i64* %25, align 8, !tbaa !72
  %27 = load %"class.std::function"*, %"class.std::function"** %5, align 8, !tbaa !217
  %28 = getelementptr inbounds %"class.std::function", %"class.std::function"* %27, i64 1
  store %"class.std::function"* %28, %"class.std::function"** %5, align 8, !tbaa !217
  br label %73

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8, !tbaa !221
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %34 = bitcast %"class.std::function"*** %33 to i64*
  %35 = load i64, i64* %34, align 8, !tbaa !213
  %36 = bitcast %"class.std::deque"* %30 to i64*
  %37 = load i64, i64* %36, align 8, !tbaa !209
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = sub i64 %32, %39
  %41 = icmp ult i64 %40, 2
  br i1 %41, label %42, label %43

42:                                               ; preds = %29
  tail call void @_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb(%"class.std::deque"* nonnull %30, i64 1, i1 zeroext false)
  br label %43

43:                                               ; preds = %29, %42
  %44 = tail call i8* @_Znwm(i64 512)
  %45 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %46 = load %"class.std::function"**, %"class.std::function"*** %33, align 8, !tbaa !213
  %47 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %46, i64 1
  %48 = bitcast %"class.std::function"** %47 to i8**
  store i8* %44, i8** %48, align 8, !tbaa !72
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %45, i64 0, i32 0
  %50 = load %"class.std::function"*, %"class.std::function"** %49, align 8, !tbaa !217
  %51 = getelementptr inbounds %"class.std::function", %"class.std::function"* %50, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %51, align 8, !tbaa !184
  %52 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::function"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* nonnull align 8 %53, i64 16, i1 false) #10
  %54 = bitcast %"class.std::function"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* nonnull align 8 %54, i64 16, i1 false) #10, !tbaa.struct !219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* nonnull align 8 %52, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  %55 = getelementptr inbounds %"class.std::function", %"class.std::function"* %1, i64 0, i32 0, i32 1
  %56 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %55 to i64*
  %57 = load i64, i64* %56, align 8, !tbaa !72
  %58 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %51 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !72
  store i64 %59, i64* %56, align 8, !tbaa !72
  store i64 %57, i64* %58, align 8, !tbaa !72
  %60 = getelementptr inbounds %"class.std::function", %"class.std::function"* %1, i64 0, i32 1
  %61 = getelementptr inbounds %"class.std::function", %"class.std::function"* %50, i64 0, i32 1
  %62 = bitcast void (%"union.std::_Any_data"*)** %60 to i64*
  %63 = load i64, i64* %62, align 8, !tbaa !72
  %64 = bitcast void (%"union.std::_Any_data"*)** %61 to i64*
  %65 = load i64, i64* %64, align 8, !tbaa !72
  store i64 %65, i64* %62, align 8, !tbaa !72
  store i64 %63, i64* %64, align 8, !tbaa !72
  %66 = load %"class.std::function"**, %"class.std::function"*** %33, align 8, !tbaa !213
  %67 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %66, i64 1
  store %"class.std::function"** %67, %"class.std::function"*** %33, align 8, !tbaa !196
  %68 = load %"class.std::function"*, %"class.std::function"** %67, align 8, !tbaa !72
  %69 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  store %"class.std::function"* %68, %"class.std::function"** %69, align 8, !tbaa !199
  %70 = getelementptr inbounds %"class.std::function", %"class.std::function"* %68, i64 16
  store %"class.std::function"* %70, %"class.std::function"** %7, align 8, !tbaa !200
  %71 = ptrtoint %"class.std::function"* %68 to i64
  %72 = bitcast %"struct.std::_Deque_iterator"* %45 to i64*
  store i64 %71, i64* %72, align 8, !tbaa !217
  br label %73

73:                                               ; preds = %11, %43
  %74 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %74) #10
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) local_unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 3
  %5 = load %"class.std::function"**, %"class.std::function"*** %4, align 8, !tbaa !213
  %6 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2, i32 3
  %7 = load %"class.std::function"**, %"class.std::function"*** %6, align 8, !tbaa !212
  %8 = ptrtoint %"class.std::function"** %5 to i64
  %9 = ptrtoint %"class.std::function"** %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 3
  %12 = add nsw i64 %11, 1
  %13 = add i64 %12, %1
  %14 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !tbaa !221
  %16 = shl i64 %13, 1
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %18, label %43

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::function"**, %"class.std::function"*** %19, align 8, !tbaa !209
  %21 = sub i64 %15, %13
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %20, i64 %22
  %24 = select i1 %2, i64 %1, i64 0
  %25 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %23, i64 %24
  %26 = icmp ult %"class.std::function"** %25, %7
  %27 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %5, i64 1
  %28 = ptrtoint %"class.std::function"** %27 to i64
  %29 = sub i64 %28, %9
  %30 = icmp eq i64 %29, 0
  br i1 %26, label %31, label %35

31:                                               ; preds = %18
  br i1 %30, label %72, label %32

32:                                               ; preds = %31
  %33 = bitcast %"class.std::function"** %25 to i8*
  %34 = bitcast %"class.std::function"** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 %29, i1 false) #10
  br label %72

35:                                               ; preds = %18
  br i1 %30, label %72, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %25, i64 %12
  %38 = ashr exact i64 %29, 3
  %39 = sub nsw i64 0, %38
  %40 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %37, i64 %39
  %41 = bitcast %"class.std::function"** %40 to i8*
  %42 = bitcast %"class.std::function"** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 %29, i1 false) #10
  br label %72

43:                                               ; preds = %3
  %44 = icmp ult i64 %15, %1
  %45 = select i1 %44, i64 %1, i64 %15
  %46 = add i64 %15, 2
  %47 = add i64 %46, %45
  %48 = icmp ugt i64 %47, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %43
  tail call void @_ZSt17__throw_bad_allocv() #33
  unreachable

50:                                               ; preds = %43
  %51 = shl i64 %47, 3
  %52 = tail call i8* @_Znwm(i64 %51)
  %53 = bitcast i8* %52 to %"class.std::function"**
  %54 = sub i64 %47, %13
  %55 = lshr i64 %54, 1
  %56 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %53, i64 %55
  %57 = select i1 %2, i64 %1, i64 0
  %58 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %56, i64 %57
  %59 = load %"class.std::function"**, %"class.std::function"*** %6, align 8, !tbaa !212
  %60 = load %"class.std::function"**, %"class.std::function"*** %4, align 8, !tbaa !213
  %61 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %60, i64 1
  %62 = ptrtoint %"class.std::function"** %61 to i64
  %63 = ptrtoint %"class.std::function"** %59 to i64
  %64 = sub i64 %62, %63
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %50
  %67 = bitcast %"class.std::function"** %58 to i8*
  %68 = bitcast %"class.std::function"** %59 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %68, i64 %64, i1 false) #10
  br label %69

69:                                               ; preds = %50, %66
  %70 = bitcast %"class.std::deque"* %0 to i8**
  %71 = load i8*, i8** %70, align 8, !tbaa !209
  tail call void @_ZdlPv(i8* %71) #10
  store i8* %52, i8** %70, align 8, !tbaa !209
  store i64 %47, i64* %14, align 8, !tbaa !221
  br label %72

72:                                               ; preds = %36, %35, %32, %31, %69
  %73 = phi %"class.std::function"** [ %58, %69 ], [ %25, %31 ], [ %25, %32 ], [ %25, %35 ], [ %25, %36 ]
  store %"class.std::function"** %73, %"class.std::function"*** %6, align 8, !tbaa !196
  %74 = load %"class.std::function"*, %"class.std::function"** %73, align 8, !tbaa !72
  %75 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  store %"class.std::function"* %74, %"class.std::function"** %75, align 8, !tbaa !199
  %76 = getelementptr inbounds %"class.std::function", %"class.std::function"* %74, i64 16
  %77 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 2, i32 2
  store %"class.std::function"* %76, %"class.std::function"** %77, align 8, !tbaa !200
  %78 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %73, i64 %11
  store %"class.std::function"** %78, %"class.std::function"*** %4, align 8, !tbaa !196
  %79 = load %"class.std::function"*, %"class.std::function"** %78, align 8, !tbaa !72
  %80 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1
  store %"class.std::function"* %79, %"class.std::function"** %80, align 8, !tbaa !199
  %81 = getelementptr inbounds %"class.std::function", %"class.std::function"* %79, i64 16
  %82 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 2
  store %"class.std::function"* %81, %"class.std::function"** %82, align 8, !tbaa !200
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC15ThreadSafeQueueISt8functionIFvvEEE12internal_popERS3_(%"class.MARC::ThreadSafeQueue"*, %"class.std::function"* dereferenceable(32)) local_unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca %"class.std::function", align 8
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeQueue", %"class.MARC::ThreadSafeQueue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %6 = load %"class.std::function"*, %"class.std::function"** %5, align 8, !tbaa !198, !noalias !222
  %7 = bitcast %"class.std::function"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.std::function", %"class.std::function"* %4, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::function"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %9, i64 16, i1 false) #10
  %10 = getelementptr inbounds %"class.std::function", %"class.std::function"* %6, i64 0, i32 0, i32 1
  %11 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %10 to i64*
  %12 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %10 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8, !tbaa !72
  store i64 0, i64* %11, align 8, !tbaa !72
  %14 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %9, i64 16, i1 false) #10
  %15 = bitcast %"class.std::function"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* nonnull align 8 %15, i64 16, i1 false) #10, !tbaa.struct !219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %14, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  %16 = getelementptr inbounds %"class.std::function", %"class.std::function"* %1, i64 0, i32 0, i32 1
  %17 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %16 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8, !tbaa !72
  %19 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %8 to <2 x i64>*
  store <2 x i64> %18, <2 x i64>* %19, align 8, !tbaa !72
  store <2 x i64> %13, <2 x i64>* %17, align 8, !tbaa !72
  %20 = extractelement <2 x i64> %18, i32 0
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %2
  %23 = inttoptr i64 %20 to i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*
  %24 = getelementptr inbounds %"class.std::function", %"class.std::function"* %4, i64 0, i32 0, i32 0
  %25 = invoke zeroext i1 %23(%"union.std::_Any_data"* nonnull dereferenceable(16) %24, %"union.std::_Any_data"* nonnull dereferenceable(16) %24, i32 3)
          to label %29 unwind label %26

26:                                               ; preds = %22
  %27 = landingpad { i8*, i32 }
          catch i8* null
  %28 = extractvalue { i8*, i32 } %27, 0
  call void @__clang_call_terminate(i8* %28) #30
  unreachable

29:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  %30 = load %"class.std::function"*, %"class.std::function"** %5, align 8, !tbaa !214
  %31 = getelementptr inbounds %"class.MARC::ThreadSafeQueue", %"class.MARC::ThreadSafeQueue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %32 = load %"class.std::function"*, %"class.std::function"** %31, align 8, !tbaa !215
  %33 = getelementptr inbounds %"class.std::function", %"class.std::function"* %32, i64 -1
  %34 = icmp eq %"class.std::function"* %30, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::function", %"class.std::function"* %30, i64 0, i32 0, i32 1
  %37 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %36, align 8, !tbaa !184
  %38 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %37, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::function", %"class.std::function"* %30, i64 0, i32 0, i32 0
  %41 = invoke zeroext i1 %37(%"union.std::_Any_data"* dereferenceable(16) %40, %"union.std::_Any_data"* dereferenceable(16) %40, i32 3)
          to label %42 unwind label %44

42:                                               ; preds = %39
  %43 = load %"class.std::function"*, %"class.std::function"** %5, align 8, !tbaa !214
  br label %47

44:                                               ; preds = %39
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  call void @__clang_call_terminate(i8* %46) #30
  unreachable

47:                                               ; preds = %42, %35
  %48 = phi %"class.std::function"* [ %43, %42 ], [ %30, %35 ]
  %49 = getelementptr inbounds %"class.std::function", %"class.std::function"* %48, i64 1
  store %"class.std::function"* %49, %"class.std::function"** %5, align 8, !tbaa !214
  br label %72

50:                                               ; preds = %29
  %51 = getelementptr inbounds %"class.MARC::ThreadSafeQueue", %"class.MARC::ThreadSafeQueue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %52 = getelementptr inbounds %"class.std::function", %"class.std::function"* %30, i64 0, i32 0, i32 1
  %53 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %52, align 8, !tbaa !184
  %54 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.std::function", %"class.std::function"* %30, i64 0, i32 0, i32 0
  %57 = invoke zeroext i1 %53(%"union.std::_Any_data"* dereferenceable(16) %56, %"union.std::_Any_data"* dereferenceable(16) %56, i32 3)
          to label %61 unwind label %58

58:                                               ; preds = %55
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  call void @__clang_call_terminate(i8* %60) #30
  unreachable

61:                                               ; preds = %55, %50
  %62 = getelementptr inbounds %"class.MARC::ThreadSafeQueue", %"class.MARC::ThreadSafeQueue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %63 = bitcast %"class.std::function"** %62 to i8**
  %64 = load i8*, i8** %63, align 8, !tbaa !216
  call void @_ZdlPv(i8* %64) #10
  %65 = getelementptr inbounds %"class.MARC::ThreadSafeQueue", %"class.MARC::ThreadSafeQueue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %66 = load %"class.std::function"**, %"class.std::function"*** %65, align 8, !tbaa !212
  %67 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %66, i64 1
  store %"class.std::function"** %67, %"class.std::function"*** %65, align 8, !tbaa !196
  %68 = load %"class.std::function"*, %"class.std::function"** %67, align 8, !tbaa !72
  store %"class.std::function"* %68, %"class.std::function"** %62, align 8, !tbaa !199
  %69 = getelementptr inbounds %"class.std::function", %"class.std::function"* %68, i64 16
  store %"class.std::function"* %69, %"class.std::function"** %31, align 8, !tbaa !200
  %70 = ptrtoint %"class.std::function"* %68 to i64
  %71 = bitcast %"struct.std::_Deque_iterator"* %51 to i64*
  store i64 %70, i64* %71, align 8, !tbaa !214
  br label %72

72:                                               ; preds = %47, %61
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEED2Ev(%"class.MARC::ThreadSafeQueue.29"*) unnamed_addr #23 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::queue.30", %"class.std::queue.30"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %4, align 8, !tbaa !105
  %6 = icmp eq %"class.MARC::ThreadCTask"*** %5, null
  br i1 %6, label %25, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.MARC::ThreadCTask"*** %5 to i8*
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %10 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %9, align 8, !tbaa !166
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %12 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %11, align 8, !tbaa !104
  %13 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %12, i64 1
  %14 = icmp ult %"class.MARC::ThreadCTask"*** %10, %13
  br i1 %14, label %.preheader, label %23

.preheader:                                       ; preds = %7, %.preheader
  %15 = phi %"class.MARC::ThreadCTask"*** [ %18, %.preheader ], [ %10, %7 ]
  %16 = bitcast %"class.MARC::ThreadCTask"*** %15 to i8**
  %17 = load i8*, i8** %16, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %17) #10
  %18 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %15, i64 1
  %19 = icmp ult %"class.MARC::ThreadCTask"*** %15, %12
  br i1 %19, label %.preheader, label %20

20:                                               ; preds = %.preheader
  %21 = bitcast %"class.std::queue.30"* %3 to i8**
  %22 = load i8*, i8** %21, align 8, !tbaa !105
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i8* [ %22, %20 ], [ %8, %7 ]
  tail call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEE7isValidEv(%"class.MARC::ThreadSafeQueue.29"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEE10invalidateEv(%"class.MARC::ThreadSafeQueue.29"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %0, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %2 seq_cst, align 1
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE6tryPopERS2_(%"class.MARC::ThreadSafeMutexQueue.28"*, %"class.MARC::ThreadCTask"** dereferenceable(8)) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %4, label %9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %5) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZSt20__throw_system_errori(i32 %6) #33
  unreachable

9:                                                ; preds = %2, %4
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %11 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %10, align 8, !tbaa !89
  %12 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %13 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %12, align 8, !tbaa !89
  %14 = icmp eq %"class.MARC::ThreadCTask"** %11, %13
  br i1 %14, label %46, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load atomic i8, i8* %16 seq_cst, align 1
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %46, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.MARC::ThreadCTask"*** %12 to i64**
  %22 = load i64*, i64** %21, align 8, !tbaa !89, !noalias !225
  %23 = load i64, i64* %22, align 8, !tbaa !72
  %24 = bitcast %"class.MARC::ThreadCTask"** %1 to i64*
  store i64 %23, i64* %24, align 8, !tbaa !72
  %25 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %12, align 8, !tbaa !170
  %26 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %27 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %26, align 8, !tbaa !171
  %28 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %27, i64 -1
  %29 = icmp eq %"class.MARC::ThreadCTask"** %25, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %25, i64 1
  store %"class.MARC::ThreadCTask"** %31, %"class.MARC::ThreadCTask"*** %12, align 8, !tbaa !170
  br label %44

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %35 = bitcast %"class.MARC::ThreadCTask"*** %34 to i8**
  %36 = load i8*, i8** %35, align 8, !tbaa !172
  tail call void @_ZdlPv(i8* %36) #10
  %37 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %38 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %37, align 8, !tbaa !166
  %39 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %38, i64 1
  store %"class.MARC::ThreadCTask"*** %39, %"class.MARC::ThreadCTask"**** %37, align 8, !tbaa !87
  %40 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %39, align 8, !tbaa !72
  store %"class.MARC::ThreadCTask"** %40, %"class.MARC::ThreadCTask"*** %34, align 8, !tbaa !90
  %41 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %40, i64 64
  store %"class.MARC::ThreadCTask"** %41, %"class.MARC::ThreadCTask"*** %26, align 8, !tbaa !91
  %42 = ptrtoint %"class.MARC::ThreadCTask"** %40 to i64
  %43 = bitcast %"struct.std::_Deque_iterator.33"* %33 to i64*
  store i64 %42, i64* %43, align 8, !tbaa !170
  br label %44

44:                                               ; preds = %30, %32
  %45 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %45) #10
  br label %46

46:                                               ; preds = %15, %44, %9
  %47 = phi i1 [ false, %15 ], [ false, %9 ], [ true, %44 ]
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %48, label %51

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %49) #10
  br label %51

51:                                               ; preds = %46, %48
  ret i1 %47
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE7waitPopEv(%"class.MARC::ThreadSafeMutexQueue.28"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::unique_lock", align 8
  %3 = bitcast %"class.std::unique_lock"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %2, i64 0, i32 0
  store %"class.std::mutex"* %4, %"class.std::mutex"** %5, align 8, !tbaa !75
  %6 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %2, i64 0, i32 1
  store i8 0, i8* %6, align 8, !tbaa !77
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %7, label %12

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %4, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %8) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZSt20__throw_system_errori(i32 %9) #33
  unreachable

12:                                               ; preds = %1, %7
  store i8 1, i8* %6, align 8, !tbaa !77
  %13 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = load atomic i8, i8* %13 seq_cst, align 1
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %58, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %19 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %18, align 8, !tbaa !89
  %20 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %21 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %20, align 8, !tbaa !89
  %22 = icmp eq %"class.MARC::ThreadCTask"** %19, %21
  br i1 %22, label %23, label %.loopexit

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 2
  br label %25

25:                                               ; preds = %23, %29
  %26 = load atomic i8, i8* %13 seq_cst, align 1
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %.loopexit, label %29

29:                                               ; preds = %25
  call void @_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE(%"class.std::condition_variable"* nonnull %24, %"class.std::unique_lock"* nonnull dereferenceable(16) %2) #10
  %30 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %18, align 8, !tbaa !89
  %31 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %20, align 8, !tbaa !89
  %32 = icmp eq %"class.MARC::ThreadCTask"** %30, %31
  br i1 %32, label %25, label %.loopexit

.loopexit:                                        ; preds = %29, %25, %17
  %33 = load atomic i8, i8* %13 seq_cst, align 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %58, label %36

36:                                               ; preds = %.loopexit
  %37 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %20, align 8, !tbaa !170
  %38 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %39 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %38, align 8, !tbaa !171
  %40 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %39, i64 -1
  %41 = icmp eq %"class.MARC::ThreadCTask"** %37, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %37, i64 1
  store %"class.MARC::ThreadCTask"** %43, %"class.MARC::ThreadCTask"*** %20, align 8, !tbaa !170
  br label %56

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %47 = bitcast %"class.MARC::ThreadCTask"*** %46 to i8**
  %48 = load i8*, i8** %47, align 8, !tbaa !172
  call void @_ZdlPv(i8* %48) #10
  %49 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %50 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %49, align 8, !tbaa !166
  %51 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %50, i64 1
  store %"class.MARC::ThreadCTask"*** %51, %"class.MARC::ThreadCTask"**** %49, align 8, !tbaa !87
  %52 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %51, align 8, !tbaa !72
  store %"class.MARC::ThreadCTask"** %52, %"class.MARC::ThreadCTask"*** %46, align 8, !tbaa !90
  %53 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %52, i64 64
  store %"class.MARC::ThreadCTask"** %53, %"class.MARC::ThreadCTask"*** %38, align 8, !tbaa !91
  %54 = ptrtoint %"class.MARC::ThreadCTask"** %52 to i64
  %55 = bitcast %"struct.std::_Deque_iterator.33"* %45 to i64*
  store i64 %54, i64* %55, align 8, !tbaa !170
  br label %56

56:                                               ; preds = %42, %44
  %57 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 3
  call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %57) #10
  br label %58

58:                                               ; preds = %.loopexit, %12, %56
  %59 = phi i1 [ true, %56 ], [ false, %12 ], [ false, %.loopexit ]
  %60 = load i8, i8* %6, align 8, !tbaa !77, !range !62
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %58
  %63 = load %"class.std::mutex"*, %"class.std::mutex"** %5, align 8, !tbaa !75
  %64 = icmp eq %"class.std::mutex"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %66, label %69

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %63, i64 0, i32 0, i32 0
  %68 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %67) #10
  br label %69

69:                                               ; preds = %66, %65
  store i8 0, i8* %6, align 8, !tbaa !77
  br label %70

70:                                               ; preds = %58, %62, %69
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  ret i1 %59
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE8waitPushES2_l(%"class.MARC::ThreadSafeMutexQueue.28"*, %"class.MARC::ThreadCTask"*, i64) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::unique_lock", align 8
  %5 = ptrtoint %"class.MARC::ThreadCTask"* %1 to i64
  %6 = bitcast %"class.std::unique_lock"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %4, i64 0, i32 0
  store %"class.std::mutex"* %7, %"class.std::mutex"** %8, align 8, !tbaa !75
  %9 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %4, i64 0, i32 1
  store i8 0, i8* %9, align 8, !tbaa !77
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %10, label %15

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %7, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %11) #10
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @_ZSt20__throw_system_errori(i32 %12) #33
  unreachable

15:                                               ; preds = %3, %10
  store i8 1, i8* %9, align 8, !tbaa !77
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %19 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %20 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %21 = bitcast %"class.MARC::ThreadCTask"**** %20 to i64*
  %22 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %23 = bitcast %"class.MARC::ThreadCTask"**** %22 to i64*
  %24 = bitcast %"struct.std::_Deque_iterator.33"* %18 to i64*
  %25 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %26 = bitcast %"class.MARC::ThreadCTask"*** %25 to i64*
  %27 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %28 = bitcast %"class.MARC::ThreadCTask"*** %27 to i64*
  %29 = bitcast %"struct.std::_Deque_iterator.33"* %19 to i64*
  br label %30

30:                                               ; preds = %51, %15
  %31 = load i64, i64* %21, align 8, !tbaa !87
  %32 = load i64, i64* %23, align 8, !tbaa !87
  %33 = sub i64 %31, %32
  %34 = shl i64 %33, 3
  %35 = add i64 %34, -64
  %36 = load i64, i64* %24, align 8, !tbaa !89
  %37 = load i64, i64* %26, align 8, !tbaa !90
  %38 = sub i64 %36, %37
  %39 = ashr exact i64 %38, 3
  %40 = add nsw i64 %35, %39
  %41 = load i64, i64* %28, align 8, !tbaa !91
  %42 = load i64, i64* %29, align 8, !tbaa !89
  %43 = sub i64 %41, %42
  %44 = ashr exact i64 %43, 3
  %45 = add nsw i64 %40, %44
  %46 = icmp ult i64 %45, %2
  br i1 %46, label %52, label %47

47:                                               ; preds = %30
  %48 = load atomic i8, i8* %17 seq_cst, align 1
  %49 = and i8 %48, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  call void @_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE(%"class.std::condition_variable"* nonnull %16, %"class.std::unique_lock"* nonnull dereferenceable(16) %4) #10
  br label %30

52:                                               ; preds = %47, %30
  %53 = load atomic i8, i8* %17 seq_cst, align 1
  %54 = and i8 %53, 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %108, label %69

56:                                               ; preds = %93, %92
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = load i8, i8* %9, align 8, !tbaa !77, !range !62
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %56
  %61 = load %"class.std::mutex"*, %"class.std::mutex"** %8, align 8, !tbaa !75
  %62 = icmp eq %"class.std::mutex"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %60
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %64, label %67

64:                                               ; preds = %63
  %65 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %61, i64 0, i32 0, i32 0
  %66 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %65) #10
  br label %67

67:                                               ; preds = %64, %63
  store i8 0, i8* %9, align 8, !tbaa !77
  br label %68

68:                                               ; preds = %56, %60, %67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  resume { i8*, i32 } %57

69:                                               ; preds = %52
  %70 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.std::queue.30", %"class.std::queue.30"* %70, i64 0, i32 0
  %72 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %73 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %72, align 8, !tbaa !99
  %74 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 2
  %75 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %74, align 8, !tbaa !102
  %76 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %75, i64 -1
  %77 = icmp eq %"class.MARC::ThreadCTask"** %73, %76
  br i1 %77, label %82, label %78

78:                                               ; preds = %69
  %79 = bitcast %"class.MARC::ThreadCTask"** %73 to i64*
  store i64 %5, i64* %79, align 8, !tbaa !72
  %80 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %72, align 8, !tbaa !99
  %81 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %80, i64 1
  store %"class.MARC::ThreadCTask"** %81, %"class.MARC::ThreadCTask"*** %72, align 8, !tbaa !99
  br label %106

82:                                               ; preds = %69
  %83 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8, !tbaa !103
  %85 = load i64, i64* %21, align 8, !tbaa !104
  %86 = bitcast %"class.std::queue.30"* %70 to i64*
  %87 = load i64, i64* %86, align 8, !tbaa !105
  %88 = sub i64 %85, %87
  %89 = ashr exact i64 %88, 3
  %90 = sub i64 %84, %89
  %91 = icmp ult i64 %90, 2
  br i1 %91, label %92, label %93

92:                                               ; preds = %82
  invoke void @_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE17_M_reallocate_mapEmb(%"class.std::deque.31"* nonnull %71, i64 1, i1 zeroext false)
          to label %93 unwind label %56

93:                                               ; preds = %92, %82
  %94 = invoke i8* @_Znwm(i64 512)
          to label %95 unwind label %56

95:                                               ; preds = %93
  %96 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %20, align 8, !tbaa !104
  %97 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %96, i64 1
  %98 = bitcast %"class.MARC::ThreadCTask"*** %97 to i8**
  store i8* %94, i8** %98, align 8, !tbaa !72
  %99 = bitcast %"struct.std::_Deque_iterator.33"* %18 to i64**
  %100 = load i64*, i64** %99, align 8, !tbaa !99
  store i64 %5, i64* %100, align 8, !tbaa !72
  %101 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %20, align 8, !tbaa !104
  %102 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %101, i64 1
  store %"class.MARC::ThreadCTask"*** %102, %"class.MARC::ThreadCTask"**** %20, align 8, !tbaa !87
  %103 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %102, align 8, !tbaa !72
  store %"class.MARC::ThreadCTask"** %103, %"class.MARC::ThreadCTask"*** %25, align 8, !tbaa !90
  %104 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %103, i64 64
  store %"class.MARC::ThreadCTask"** %104, %"class.MARC::ThreadCTask"*** %74, align 8, !tbaa !91
  %105 = ptrtoint %"class.MARC::ThreadCTask"** %103 to i64
  store i64 %105, i64* %24, align 8, !tbaa !99
  br label %106

106:                                              ; preds = %78, %95
  %107 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 2
  call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %107) #10
  br label %108

108:                                              ; preds = %52, %106
  %109 = phi i1 [ false, %52 ], [ true, %106 ]
  %110 = load i8, i8* %9, align 8, !tbaa !77, !range !62
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %120, label %112

112:                                              ; preds = %108
  %113 = load %"class.std::mutex"*, %"class.std::mutex"** %8, align 8, !tbaa !75
  %114 = icmp eq %"class.std::mutex"* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %116, label %119

116:                                              ; preds = %115
  %117 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %113, i64 0, i32 0, i32 0
  %118 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %117) #10
  br label %119

119:                                              ; preds = %116, %115
  store i8 0, i8* %9, align 8, !tbaa !77
  br label %120

120:                                              ; preds = %108, %112, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret i1 %109
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE5clearEv(%"class.MARC::ThreadSafeMutexQueue.28"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %10 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %9, align 8, !tbaa !89
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %12 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %11, align 8, !tbaa !89
  %13 = icmp eq %"class.MARC::ThreadCTask"** %10, %12
  br i1 %13, label %.loopexit, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %18 = bitcast %"class.MARC::ThreadCTask"*** %17 to i8**
  %19 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %20 = bitcast %"struct.std::_Deque_iterator.33"* %16 to i64*
  %21 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %15, align 8, !tbaa !171
  br label %22

22:                                               ; preds = %14, %38
  %23 = phi %"class.MARC::ThreadCTask"** [ %10, %14 ], [ %40, %38 ]
  %24 = phi %"class.MARC::ThreadCTask"** [ %21, %14 ], [ %41, %38 ]
  %25 = phi %"class.MARC::ThreadCTask"** [ %12, %14 ], [ %39, %38 ]
  %26 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %24, i64 -1
  %27 = icmp eq %"class.MARC::ThreadCTask"** %25, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %25, i64 1
  store %"class.MARC::ThreadCTask"** %29, %"class.MARC::ThreadCTask"*** %11, align 8, !tbaa !170
  br label %38

30:                                               ; preds = %22
  %31 = load i8*, i8** %18, align 8, !tbaa !172
  tail call void @_ZdlPv(i8* %31) #10
  %32 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %19, align 8, !tbaa !166
  %33 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %32, i64 1
  store %"class.MARC::ThreadCTask"*** %33, %"class.MARC::ThreadCTask"**** %19, align 8, !tbaa !87
  %34 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %33, align 8, !tbaa !72
  store %"class.MARC::ThreadCTask"** %34, %"class.MARC::ThreadCTask"*** %17, align 8, !tbaa !90
  %35 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %34, i64 64
  store %"class.MARC::ThreadCTask"** %35, %"class.MARC::ThreadCTask"*** %15, align 8, !tbaa !91
  %36 = ptrtoint %"class.MARC::ThreadCTask"** %34 to i64
  store i64 %36, i64* %20, align 8, !tbaa !170
  %37 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %9, align 8, !tbaa !89
  br label %38

38:                                               ; preds = %28, %30
  %39 = phi %"class.MARC::ThreadCTask"** [ %29, %28 ], [ %34, %30 ]
  %40 = phi %"class.MARC::ThreadCTask"** [ %23, %28 ], [ %37, %30 ]
  %41 = phi %"class.MARC::ThreadCTask"** [ %24, %28 ], [ %35, %30 ]
  %42 = icmp eq %"class.MARC::ThreadCTask"** %40, %39
  br i1 %42, label %.loopexit, label %22

.loopexit:                                        ; preds = %38, %8
  %43 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %43) #10
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %44, label %47

44:                                               ; preds = %.loopexit
  %45 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %46 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %45) #10
  br label %47

47:                                               ; preds = %.loopexit, %44
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE5emptyEv(%"class.MARC::ThreadSafeMutexQueue.28"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %10 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %9, align 8, !tbaa !89
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %12 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %11, align 8, !tbaa !89
  %13 = icmp eq %"class.MARC::ThreadCTask"** %10, %12
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %14, label %17

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %15) #10
  br label %17

17:                                               ; preds = %8, %14
  ret i1 %13
}

; Function Attrs: uwtable
define linkonce_odr dso_local i64 @_ZNK4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE4sizeEv(%"class.MARC::ThreadSafeMutexQueue.28"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %12 = bitcast %"class.MARC::ThreadCTask"**** %11 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !87
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %15 = bitcast %"class.MARC::ThreadCTask"**** %14 to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !87
  %17 = sub i64 %13, %16
  %18 = shl i64 %17, 3
  %19 = add i64 %18, -64
  %20 = bitcast %"struct.std::_Deque_iterator.33"* %9 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !89
  %22 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %23 = bitcast %"class.MARC::ThreadCTask"*** %22 to i64*
  %24 = load i64, i64* %23, align 8, !tbaa !90
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %19, %26
  %28 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %29 = bitcast %"class.MARC::ThreadCTask"*** %28 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !91
  %31 = bitcast %"struct.std::_Deque_iterator.33"* %10 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !89
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  %35 = add nsw i64 %27, %34
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %36, label %39

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %37) #10
  br label %39

39:                                               ; preds = %8, %36
  ret i64 %35
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEE10invalidateEv(%"class.MARC::ThreadSafeMutexQueue.28"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load atomic i8, i8* %9 seq_cst, align 1
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  store atomic i8 0, i8* %9 seq_cst, align 1
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %14) #10
  %15 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %15) #10
  br label %16

16:                                               ; preds = %8, %13
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %17, label %20

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %18) #10
  br label %20

20:                                               ; preds = %16, %17
  ret void
}

; Function Attrs: nofree nounwind readonly
declare dso_local i8* @getenv(i8* nocapture) local_unnamed_addr #24

; Function Attrs: nounwind
declare dso_local i32 @_ZNSt6thread20hardware_concurrencyEv() local_unnamed_addr #17

; Function Attrs: nofree nounwind
declare dso_local i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #6

; Function Attrs: uwtable
define dso_local void @_ZN4MARC25ThreadPoolForCSingleQueueC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolForCSingleQueue"*, i1 zeroext, i32, %"class.std::function"*) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::function", align 8
  %6 = bitcast %"class.MARC::ThreadPoolForCSingleQueue"* %0 to %"class.MARC::ThreadPoolForC"*
  %7 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %8 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 1
  %9 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %8, align 8, !tbaa !184
  %10 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %9, null
  br i1 %10, label %29, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 0
  %14 = invoke zeroext i1 %9(%"union.std::_Any_data"* nonnull dereferenceable(16) %12, %"union.std::_Any_data"* nonnull dereferenceable(16) %13, i32 2)
          to label %15 unwind label %19

15:                                               ; preds = %11
  %16 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %8 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8, !tbaa !72
  %18 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 8, !tbaa !72
  br label %29

19:                                               ; preds = %11
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %22 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = invoke zeroext i1 %21(%"union.std::_Any_data"* nonnull dereferenceable(16) %12, %"union.std::_Any_data"* nonnull dereferenceable(16) %12, i32 3)
          to label %28 unwind label %25

25:                                               ; preds = %23
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  call void @__clang_call_terminate(i8* %27) #30
  unreachable

28:                                               ; preds = %23, %19
  resume { i8*, i32 } %20

29:                                               ; preds = %4, %15
  invoke void @_ZN4MARC14ThreadPoolForCC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolForC"* %6, i1 zeroext %1, i32 undef, %"class.std::function"* nonnull %5)
          to label %30 unwind label %53

30:                                               ; preds = %29
  %31 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %32 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %35 = invoke zeroext i1 %31(%"union.std::_Any_data"* nonnull dereferenceable(16) %34, %"union.std::_Any_data"* nonnull dereferenceable(16) %34, i32 3)
          to label %39 unwind label %36

36:                                               ; preds = %33
  %37 = landingpad { i8*, i32 }
          catch i8* null
  %38 = extractvalue { i8*, i32 } %37, 0
  call void @__clang_call_terminate(i8* %38) #30
  unreachable

39:                                               ; preds = %30, %33
  %40 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC25ThreadPoolForCSingleQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8, !tbaa !73
  %41 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.28", %"class.MARC::ThreadSafeMutexQueue.28"* %41, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8, !tbaa !73
  %43 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::queue.30", %"class.std::queue.30"* %43, i64 0, i32 0, i32 0
  %45 = bitcast %"class.std::queue.30"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 80, i1 false) #10
  invoke void @_ZNSt11_Deque_baseIPN4MARC11ThreadCTaskESaIS2_EE17_M_initialize_mapEm(%"class.std::_Deque_base.32"* nonnull %44, i64 0)
          to label %46 unwind label %65

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i8 1, i8* %47, align 1, !tbaa !123
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8, !tbaa !73
  %48 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 1
  %49 = bitcast %"class.std::mutex"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 40, i1 false) #10
  %50 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 2
  call void @_ZNSt18condition_variableC1Ev(%"class.std::condition_variable"* nonnull %50) #10
  %51 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 1, i32 3
  call void @_ZNSt18condition_variableC1Ev(%"class.std::condition_variable"* nonnull %51) #10
  %52 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 0
  invoke void @_ZN4MARC19ThreadPoolInterface10newThreadsEj(%"class.MARC::ThreadPoolInterface"* %52, i32 %2)
          to label %78 unwind label %69

53:                                               ; preds = %29
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  %56 = extractvalue { i8*, i32 } %54, 1
  %57 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %58 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %57, null
  br i1 %58, label %89, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %61 = invoke zeroext i1 %57(%"union.std::_Any_data"* nonnull dereferenceable(16) %60, %"union.std::_Any_data"* nonnull dereferenceable(16) %60, i32 3)
          to label %89 unwind label %62

62:                                               ; preds = %59
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #30
  unreachable

65:                                               ; preds = %39
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  %68 = extractvalue { i8*, i32 } %66, 1
  br label %79

69:                                               ; preds = %46
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  %72 = call i8* @__cxa_begin_catch(i8* %71) #10
  invoke void @__cxa_rethrow() #33
          to label %97 unwind label %73

73:                                               ; preds = %69
  %74 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %75 unwind label %94

75:                                               ; preds = %73
  %76 = extractvalue { i8*, i32 } %74, 1
  %77 = extractvalue { i8*, i32 } %74, 0
  call void @_ZN4MARC20ThreadSafeMutexQueueIPNS_11ThreadCTaskEED2Ev(%"class.MARC::ThreadSafeMutexQueue.28"* nonnull %41) #10
  br label %79

78:                                               ; preds = %46
  ret void

79:                                               ; preds = %75, %65
  %80 = phi i8* [ %77, %75 ], [ %67, %65 ]
  %81 = phi i32 [ %76, %75 ], [ %68, %65 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC14ThreadPoolForCE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8, !tbaa !73
  %82 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %82, align 8, !tbaa !96
  %84 = icmp eq %"class.MARC::ThreadCTask"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.MARC::ThreadCTask"** %83 to i8*
  call void @_ZdlPv(i8* nonnull %86) #10
  br label %87

87:                                               ; preds = %79, %85
  %88 = getelementptr inbounds %"class.MARC::ThreadPoolForCSingleQueue", %"class.MARC::ThreadPoolForCSingleQueue"* %0, i64 0, i32 0, i32 0
  call void @_ZN4MARC19ThreadPoolInterfaceD2Ev(%"class.MARC::ThreadPoolInterface"* %88) #10
  br label %89

89:                                               ; preds = %59, %53, %87
  %90 = phi i8* [ %80, %87 ], [ %55, %53 ], [ %55, %59 ]
  %91 = phi i32 [ %81, %87 ], [ %56, %53 ], [ %56, %59 ]
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  resume { i8*, i32 } %93

94:                                               ; preds = %73
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #30
  unreachable

97:                                               ; preds = %69
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC14ThreadPoolForCC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolForC"*, i1 zeroext, i32, %"class.std::function"*) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::function", align 8
  %6 = getelementptr inbounds %"class.MARC::ThreadPoolForC", %"class.MARC::ThreadPoolForC"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %8 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 1
  %9 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %8, align 8, !tbaa !184
  %10 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %9, null
  br i1 %10, label %29, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 0
  %14 = invoke zeroext i1 %9(%"union.std::_Any_data"* nonnull dereferenceable(16) %12, %"union.std::_Any_data"* nonnull dereferenceable(16) %13, i32 2)
          to label %15 unwind label %19

15:                                               ; preds = %11
  %16 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %8 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8, !tbaa !72
  %18 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 8, !tbaa !72
  br label %29

19:                                               ; preds = %11
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %22 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = invoke zeroext i1 %21(%"union.std::_Any_data"* nonnull dereferenceable(16) %12, %"union.std::_Any_data"* nonnull dereferenceable(16) %12, i32 3)
          to label %28 unwind label %25

25:                                               ; preds = %23
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  call void @__clang_call_terminate(i8* %27) #30
  unreachable

28:                                               ; preds = %23, %19
  resume { i8*, i32 } %20

29:                                               ; preds = %4, %15
  invoke void @_ZN4MARC19ThreadPoolInterfaceC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolInterface"* %6, i1 zeroext %1, i32 undef, %"class.std::function"* nonnull %5)
          to label %30 unwind label %45

30:                                               ; preds = %29
  %31 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %32 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %35 = invoke zeroext i1 %31(%"union.std::_Any_data"* nonnull dereferenceable(16) %34, %"union.std::_Any_data"* nonnull dereferenceable(16) %34, i32 3)
          to label %39 unwind label %36

36:                                               ; preds = %33
  %37 = landingpad { i8*, i32 }
          catch i8* null
  %38 = extractvalue { i8*, i32 } %37, 0
  call void @__clang_call_terminate(i8* %38) #30
  unreachable

39:                                               ; preds = %30, %33
  %40 = getelementptr inbounds %"class.MARC::ThreadPoolForC", %"class.MARC::ThreadPoolForC"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC14ThreadPoolForCE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8, !tbaa !73
  %41 = getelementptr inbounds %"class.MARC::ThreadPoolForC", %"class.MARC::ThreadPoolForC"* %0, i64 0, i32 1
  %42 = bitcast %"class.std::vector.23"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #10
  %43 = getelementptr inbounds %"class.MARC::ThreadPoolForC", %"class.MARC::ThreadPoolForC"* %0, i64 0, i32 2
  %44 = call i32 @pthread_spin_init(i32* nonnull %43, i32 0) #10
  ret void

45:                                               ; preds = %29
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %48 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %51 = invoke zeroext i1 %47(%"union.std::_Any_data"* nonnull dereferenceable(16) %50, %"union.std::_Any_data"* nonnull dereferenceable(16) %50, i32 3)
          to label %55 unwind label %52

52:                                               ; preds = %49
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  call void @__clang_call_terminate(i8* %54) #30
  unreachable

55:                                               ; preds = %45, %49
  resume { i8*, i32 } %46
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt11_Deque_baseIPN4MARC11ThreadCTaskESaIS2_EE17_M_initialize_mapEm(%"class.std::_Deque_base.32"*, i64) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = lshr i64 %1, 6
  %4 = add nuw nsw i64 %3, 1
  %5 = icmp ugt i64 %3, 5
  %6 = select i1 %5, i64 %3, i64 5
  %7 = add nuw nsw i64 %6, 3
  %8 = getelementptr inbounds %"class.std::_Deque_base.32", %"class.std::_Deque_base.32"* %0, i64 0, i32 0, i32 1
  store i64 %7, i64* %8, align 8, !tbaa !103
  %9 = icmp ugt i64 %7, 2305843009213693951
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZSt17__throw_bad_allocv() #33
  unreachable

11:                                               ; preds = %2
  %12 = shl nuw nsw i64 %7, 3
  %13 = tail call i8* @_Znwm(i64 %12)
  %14 = bitcast i8* %13 to %"class.MARC::ThreadCTask"***
  %15 = bitcast %"class.std::_Deque_base.32"* %0 to i8**
  store i8* %13, i8** %15, align 8, !tbaa !105
  %16 = load i64, i64* %8, align 8, !tbaa !103
  %17 = sub i64 %16, %4
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %14, i64 %18
  %20 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %19, i64 %4
  br label %21

21:                                               ; preds = %11, %24
  %22 = phi %"class.MARC::ThreadCTask"*** [ %26, %24 ], [ %19, %11 ]
  %23 = invoke i8* @_Znwm(i64 512)
          to label %24 unwind label %28

24:                                               ; preds = %21
  %25 = bitcast %"class.MARC::ThreadCTask"*** %22 to i8**
  store i8* %23, i8** %25, align 8, !tbaa !72
  %26 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %22, i64 1
  %27 = icmp ult %"class.MARC::ThreadCTask"*** %26, %20
  br i1 %27, label %21, label %52

28:                                               ; preds = %21
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = tail call i8* @__cxa_begin_catch(i8* %30) #10
  %32 = icmp ugt %"class.MARC::ThreadCTask"*** %22, %19
  br i1 %32, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %28, %.preheader
  %33 = phi %"class.MARC::ThreadCTask"*** [ %36, %.preheader ], [ %19, %28 ]
  %34 = bitcast %"class.MARC::ThreadCTask"*** %33 to i8**
  %35 = load i8*, i8** %34, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %35) #10
  %36 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %33, i64 1
  %37 = icmp ult %"class.MARC::ThreadCTask"*** %36, %22
  br i1 %37, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %.preheader, %28
  invoke void @__cxa_rethrow() #33
          to label %43 unwind label %38

38:                                               ; preds = %.loopexit
  %39 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @__cxa_end_catch()
          to label %44 unwind label %40

40:                                               ; preds = %38
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  tail call void @__clang_call_terminate(i8* %42) #30
  unreachable

43:                                               ; preds = %.loopexit
  unreachable

44:                                               ; preds = %38
  %45 = extractvalue { i8*, i32 } %39, 0
  %46 = tail call i8* @__cxa_begin_catch(i8* %45) #10
  %47 = load i8*, i8** %15, align 8, !tbaa !105
  tail call void @_ZdlPv(i8* %47) #10
  %48 = bitcast %"class.std::_Deque_base.32"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #33
          to label %73 unwind label %49

49:                                               ; preds = %44
  %50 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %51 unwind label %70

51:                                               ; preds = %49
  resume { i8*, i32 } %50

52:                                               ; preds = %24
  %53 = getelementptr inbounds %"class.std::_Deque_base.32", %"class.std::_Deque_base.32"* %0, i64 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.std::_Deque_base.32", %"class.std::_Deque_base.32"* %0, i64 0, i32 0, i32 2, i32 3
  store %"class.MARC::ThreadCTask"*** %19, %"class.MARC::ThreadCTask"**** %54, align 8, !tbaa !87
  %55 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %19, align 8, !tbaa !72
  %56 = getelementptr inbounds %"class.std::_Deque_base.32", %"class.std::_Deque_base.32"* %0, i64 0, i32 0, i32 2, i32 1
  store %"class.MARC::ThreadCTask"** %55, %"class.MARC::ThreadCTask"*** %56, align 8, !tbaa !90
  %57 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %55, i64 64
  %58 = getelementptr inbounds %"class.std::_Deque_base.32", %"class.std::_Deque_base.32"* %0, i64 0, i32 0, i32 2, i32 2
  store %"class.MARC::ThreadCTask"** %57, %"class.MARC::ThreadCTask"*** %58, align 8, !tbaa !91
  %59 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %20, i64 -1
  %60 = getelementptr inbounds %"class.std::_Deque_base.32", %"class.std::_Deque_base.32"* %0, i64 0, i32 0, i32 3, i32 3
  store %"class.MARC::ThreadCTask"*** %59, %"class.MARC::ThreadCTask"**** %60, align 8, !tbaa !87
  %61 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %59, align 8, !tbaa !72
  %62 = getelementptr inbounds %"class.std::_Deque_base.32", %"class.std::_Deque_base.32"* %0, i64 0, i32 0, i32 3, i32 1
  store %"class.MARC::ThreadCTask"** %61, %"class.MARC::ThreadCTask"*** %62, align 8, !tbaa !90
  %63 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %61, i64 64
  %64 = getelementptr inbounds %"class.std::_Deque_base.32", %"class.std::_Deque_base.32"* %0, i64 0, i32 0, i32 3, i32 2
  store %"class.MARC::ThreadCTask"** %63, %"class.MARC::ThreadCTask"*** %64, align 8, !tbaa !91
  %65 = ptrtoint %"class.MARC::ThreadCTask"** %55 to i64
  %66 = bitcast %"struct.std::_Deque_iterator.33"* %53 to i64*
  store i64 %65, i64* %66, align 8, !tbaa !170
  %67 = and i64 %1, 63
  %68 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %61, i64 %67
  %69 = getelementptr inbounds %"class.std::_Deque_base.32", %"class.std::_Deque_base.32"* %0, i64 0, i32 0, i32 3, i32 0
  store %"class.MARC::ThreadCTask"** %68, %"class.MARC::ThreadCTask"*** %69, align 8, !tbaa !99
  ret void

70:                                               ; preds = %49
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  tail call void @__clang_call_terminate(i8* %72) #30
  unreachable

73:                                               ; preds = %44
  unreachable
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt18condition_variableC1Ev(%"class.std::condition_variable"*) unnamed_addr #17

; Function Attrs: uwtable
define dso_local void @_ZN4MARC19ThreadPoolInterfaceC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolInterface"*, i1 zeroext, i32, %"class.std::function"*) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::function", align 8
  %6 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4MARC19ThreadPoolInterfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !73
  %7 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 1, i32 0, i32 0
  store i8 0, i8* %7, align 1, !tbaa !123
  %8 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue", %"class.MARC::ThreadSafeMutexQueue"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.std::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 48, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueISt8functionIFvvEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8, !tbaa !73
  %12 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %12, i64 0, i32 0, i32 0
  %14 = bitcast %"class.std::queue"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 80, i1 false) #10
  invoke void @_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* nonnull %13, i64 0)
          to label %15 unwind label %70

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i8 1, i8* %16, align 1, !tbaa !123
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8, !tbaa !73
  %17 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 1
  %18 = bitcast %"class.std::mutex"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 40, i1 false) #10
  %19 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 2
  tail call void @_ZNSt18condition_variableC1Ev(%"class.std::condition_variable"* nonnull %19) #10
  %20 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 3
  tail call void @_ZNSt18condition_variableC1Ev(%"class.std::condition_variable"* nonnull %20) #10
  %21 = zext i1 %1 to i8
  %22 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 6
  %23 = bitcast %"class.std::mutex"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 40, i1 false) #10
  %24 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 5
  store i8 %21, i8* %24, align 8, !tbaa !106
  %25 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 1
  %26 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %25, align 8, !tbaa !184
  %27 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %26, null
  br i1 %27, label %90, label %28

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %29, align 8, !tbaa !184
  %30 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 0
  %32 = invoke zeroext i1 %26(%"union.std::_Any_data"* nonnull dereferenceable(16) %30, %"union.std::_Any_data"* nonnull dereferenceable(16) %31, i32 2)
          to label %42 unwind label %33

33:                                               ; preds = %28
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %29, align 8, !tbaa !184
  %36 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %35, null
  br i1 %36, label %74, label %37

37:                                               ; preds = %33
  %38 = invoke zeroext i1 %35(%"union.std::_Any_data"* nonnull dereferenceable(16) %30, %"union.std::_Any_data"* nonnull dereferenceable(16) %30, i32 3)
          to label %74 unwind label %39

39:                                               ; preds = %37
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  call void @__clang_call_terminate(i8* %41) #30
  unreachable

42:                                               ; preds = %28
  %43 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %25 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8, !tbaa !72
  %45 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %29 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %45, align 8, !tbaa !72
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %46, label %52

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %17, i64 0, i32 0, i32 0
  %48 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %47) #10
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  invoke void @_ZSt20__throw_system_errori(i32 %48) #33
          to label %51 unwind label %77

51:                                               ; preds = %50
  unreachable

52:                                               ; preds = %46, %42
  invoke void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE22internal_pushAndNotifyERS3_(%"class.MARC::ThreadSafeMutexQueue"* nonnull %9, %"class.std::function"* nonnull dereferenceable(32) %5)
          to label %53 unwind label %57

53:                                               ; preds = %52
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %54, label %62

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %17, i64 0, i32 0, i32 0
  %56 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %55) #10
  br label %62

57:                                               ; preds = %52
  %58 = landingpad { i8*, i32 }
          cleanup
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %59, label %79

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %17, i64 0, i32 0, i32 0
  %61 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %60) #10
  br label %79

62:                                               ; preds = %54, %53
  %63 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %29, align 8, !tbaa !184
  %64 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %63, null
  br i1 %64, label %90, label %65

65:                                               ; preds = %62
  %66 = invoke zeroext i1 %63(%"union.std::_Any_data"* nonnull dereferenceable(16) %30, %"union.std::_Any_data"* nonnull dereferenceable(16) %30, i32 3)
          to label %90 unwind label %67

67:                                               ; preds = %65
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  call void @__clang_call_terminate(i8* %69) #30
  unreachable

70:                                               ; preds = %4
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  %73 = extractvalue { i8*, i32 } %71, 1
  br label %94

74:                                               ; preds = %33, %37
  %75 = extractvalue { i8*, i32 } %34, 0
  %76 = extractvalue { i8*, i32 } %34, 1
  br label %91

77:                                               ; preds = %50
  %78 = landingpad { i8*, i32 }
          cleanup
  br label %79

79:                                               ; preds = %57, %59, %77
  %80 = phi { i8*, i32 } [ %78, %77 ], [ %58, %59 ], [ %58, %57 ]
  %81 = extractvalue { i8*, i32 } %80, 0
  %82 = extractvalue { i8*, i32 } %80, 1
  %83 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %29, align 8, !tbaa !184
  %84 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %79
  %86 = invoke zeroext i1 %83(%"union.std::_Any_data"* nonnull dereferenceable(16) %30, %"union.std::_Any_data"* nonnull dereferenceable(16) %30, i32 3)
          to label %91 unwind label %87

87:                                               ; preds = %85
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  call void @__clang_call_terminate(i8* %89) #30
  unreachable

90:                                               ; preds = %15, %65, %62
  ret void

91:                                               ; preds = %85, %79, %74
  %92 = phi i8* [ %75, %74 ], [ %81, %79 ], [ %81, %85 ]
  %93 = phi i32 [ %76, %74 ], [ %82, %79 ], [ %82, %85 ]
  call void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEED2Ev(%"class.MARC::ThreadSafeMutexQueue"* nonnull %9) #10
  br label %94

94:                                               ; preds = %91, %70
  %95 = phi i8* [ %92, %91 ], [ %72, %70 ]
  %96 = phi i32 [ %93, %91 ], [ %73, %70 ]
  %97 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %98 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %97, align 8, !tbaa !119
  %99 = icmp eq %"struct.std::atomic"** %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %94
  %101 = bitcast %"struct.std::atomic"** %98 to i8*
  call void @_ZdlPv(i8* nonnull %101) #10
  br label %102

102:                                              ; preds = %94, %100
  %103 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %8, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.std::thread"*, %"class.std::thread"** %103, align 8, !tbaa !118
  %105 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %106 = load %"class.std::thread"*, %"class.std::thread"** %105, align 8, !tbaa !115
  %107 = icmp eq %"class.std::thread"* %104, %106
  br i1 %107, label %.loopexit, label %.preheader

108:                                              ; preds = %.preheader
  %109 = icmp eq %"class.std::thread"* %114, %106
  br i1 %109, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %102, %108
  %110 = phi %"class.std::thread"* [ %114, %108 ], [ %104, %102 ]
  %111 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %110, i64 0, i32 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, 0
  %114 = getelementptr inbounds %"class.std::thread", %"class.std::thread"* %110, i64 1
  br i1 %113, label %108, label %115

115:                                              ; preds = %.preheader
  call void @_ZSt9terminatev() #30
  unreachable

.loopexit:                                        ; preds = %108, %102
  %116 = icmp eq %"class.std::thread"* %104, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %.loopexit
  %118 = bitcast %"class.std::thread"* %104 to i8*
  call void @_ZdlPv(i8* nonnull %118) #10
  br label %119

119:                                              ; preds = %.loopexit, %117
  %120 = insertvalue { i8*, i32 } undef, i8* %95, 0
  %121 = insertvalue { i8*, i32 } %120, i32 %96, 1
  resume { i8*, i32 } %121
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = lshr i64 %1, 4
  %4 = add nuw nsw i64 %3, 1
  %5 = icmp ugt i64 %3, 5
  %6 = select i1 %5, i64 %3, i64 5
  %7 = add nuw nsw i64 %6, 3
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 1
  store i64 %7, i64* %8, align 8, !tbaa !221
  %9 = icmp ugt i64 %7, 2305843009213693951
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZSt17__throw_bad_allocv() #33
  unreachable

11:                                               ; preds = %2
  %12 = shl nuw i64 %7, 3
  %13 = tail call i8* @_Znwm(i64 %12)
  %14 = bitcast i8* %13 to %"class.std::function"**
  %15 = bitcast %"class.std::_Deque_base"* %0 to i8**
  store i8* %13, i8** %15, align 8, !tbaa !209
  %16 = load i64, i64* %8, align 8, !tbaa !221
  %17 = sub i64 %16, %4
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %14, i64 %18
  %20 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %19, i64 %4
  br label %21

21:                                               ; preds = %11, %24
  %22 = phi %"class.std::function"** [ %26, %24 ], [ %19, %11 ]
  %23 = invoke i8* @_Znwm(i64 512)
          to label %24 unwind label %28

24:                                               ; preds = %21
  %25 = bitcast %"class.std::function"** %22 to i8**
  store i8* %23, i8** %25, align 8, !tbaa !72
  %26 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %22, i64 1
  %27 = icmp ult %"class.std::function"** %26, %20
  br i1 %27, label %21, label %52

28:                                               ; preds = %21
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = tail call i8* @__cxa_begin_catch(i8* %30) #10
  %32 = icmp ugt %"class.std::function"** %22, %19
  br i1 %32, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %28, %.preheader
  %33 = phi %"class.std::function"** [ %36, %.preheader ], [ %19, %28 ]
  %34 = bitcast %"class.std::function"** %33 to i8**
  %35 = load i8*, i8** %34, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %35) #10
  %36 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %33, i64 1
  %37 = icmp ult %"class.std::function"** %36, %22
  br i1 %37, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %.preheader, %28
  invoke void @__cxa_rethrow() #33
          to label %43 unwind label %38

38:                                               ; preds = %.loopexit
  %39 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @__cxa_end_catch()
          to label %44 unwind label %40

40:                                               ; preds = %38
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  tail call void @__clang_call_terminate(i8* %42) #30
  unreachable

43:                                               ; preds = %.loopexit
  unreachable

44:                                               ; preds = %38
  %45 = extractvalue { i8*, i32 } %39, 0
  %46 = tail call i8* @__cxa_begin_catch(i8* %45) #10
  %47 = load i8*, i8** %15, align 8, !tbaa !209
  tail call void @_ZdlPv(i8* %47) #10
  %48 = bitcast %"class.std::_Deque_base"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #33
          to label %73 unwind label %49

49:                                               ; preds = %44
  %50 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %51 unwind label %70

51:                                               ; preds = %49
  resume { i8*, i32 } %50

52:                                               ; preds = %24
  %53 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 2, i32 3
  store %"class.std::function"** %19, %"class.std::function"*** %54, align 8, !tbaa !196
  %55 = load %"class.std::function"*, %"class.std::function"** %19, align 8, !tbaa !72
  %56 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 2, i32 1
  store %"class.std::function"* %55, %"class.std::function"** %56, align 8, !tbaa !199
  %57 = getelementptr inbounds %"class.std::function", %"class.std::function"* %55, i64 16
  %58 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 2, i32 2
  store %"class.std::function"* %57, %"class.std::function"** %58, align 8, !tbaa !200
  %59 = getelementptr inbounds %"class.std::function"*, %"class.std::function"** %20, i64 -1
  %60 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 3, i32 3
  store %"class.std::function"** %59, %"class.std::function"*** %60, align 8, !tbaa !196
  %61 = load %"class.std::function"*, %"class.std::function"** %59, align 8, !tbaa !72
  %62 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 3, i32 1
  store %"class.std::function"* %61, %"class.std::function"** %62, align 8, !tbaa !199
  %63 = getelementptr inbounds %"class.std::function", %"class.std::function"* %61, i64 16
  %64 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 3, i32 2
  store %"class.std::function"* %63, %"class.std::function"** %64, align 8, !tbaa !200
  %65 = ptrtoint %"class.std::function"* %55 to i64
  %66 = bitcast %"struct.std::_Deque_iterator"* %53 to i64*
  store i64 %65, i64* %66, align 8, !tbaa !214
  %67 = and i64 %1, 15
  %68 = getelementptr inbounds %"class.std::function", %"class.std::function"* %61, i64 %67
  %69 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %0, i64 0, i32 0, i32 3, i32 0
  store %"class.std::function"* %68, %"class.std::function"** %69, align 8, !tbaa !217
  ret void

70:                                               ; preds = %49
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  tail call void @__clang_call_terminate(i8* %72) #30
  unreachable

73:                                               ; preds = %44
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN4MARC11ThreadCTaskC2Em(%"class.MARC::ThreadCTask"*, i64) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC11ThreadCTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8, !tbaa !73
  %4 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 4
  store i8 0, i8* %4, align 8, !tbaa !57
  %5 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 5
  store i8 0, i8* %5, align 1, !tbaa !92
  %6 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 7
  store i64 %1, i64* %6, align 8, !tbaa !97
  %7 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 8
  %8 = tail call i32 @pthread_spin_init(i32* nonnull %7, i32 0) #10
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN4MARC11ThreadCTaskC2EmPFvPvES1_(%"class.MARC::ThreadCTask"*, i64, void (i8*)*, i8*) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC11ThreadCTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !73
  %6 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 1
  store void (i8*)* %2, void (i8*)** %6, align 8, !tbaa !63
  %7 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 2
  store i8* %3, i8** %7, align 8, !tbaa !64
  %8 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 4
  store i8 0, i8* %8, align 8, !tbaa !57
  %9 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 5
  store i8 0, i8* %9, align 1, !tbaa !92
  %10 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 7
  store i64 %1, i64* %10, align 8, !tbaa !97
  %11 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 8
  %12 = tail call i32 @pthread_spin_init(i32* nonnull %11, i32 0) #10
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN4MARC11ThreadCTaskC2Em9cpu_set_tPFvPvES2_(%"class.MARC::ThreadCTask"*, i64, %struct.cpu_set_t* nocapture readonly byval(%struct.cpu_set_t) align 8, void (i8*)*, i8*) unnamed_addr #3 align 2 {
  %6 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC11ThreadCTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !73
  %7 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 1
  store void (i8*)* %3, void (i8*)** %7, align 8, !tbaa !63
  %8 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 2
  store i8* %4, i8** %8, align 8, !tbaa !64
  %9 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 3
  %10 = bitcast %struct.cpu_set_t* %9 to i8*
  %11 = bitcast %struct.cpu_set_t* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %11, i64 128, i1 false), !tbaa.struct !228
  %12 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 4
  store i8 1, i8* %12, align 8, !tbaa !57
  %13 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 5
  store i8 0, i8* %13, align 1, !tbaa !92
  %14 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 7
  store i64 %1, i64* %14, align 8, !tbaa !97
  %15 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 8
  %16 = tail call i32 @pthread_spin_init(i32* nonnull %15, i32 0) #10
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i1 @_ZN4MARC11ThreadCTask15getAvailabilityEv(%"class.MARC::ThreadCTask"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 1, !tbaa !92, !range !62
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 8
  %7 = tail call i32 @pthread_spin_lock(i32* nonnull %6) #10
  %8 = load i8, i8* %2, align 1, !tbaa !92, !range !62
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  store i8 0, i8* %2, align 1, !tbaa !92
  br label %11

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ]
  %13 = tail call i32 @pthread_spin_unlock(i32* nonnull %6) #10
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i1 [ %12, %11 ], [ false, %1 ]
  ret i1 %15
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN4MARC11ThreadCTask12setAvailableEv(%"class.MARC::ThreadCTask"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 8
  %3 = tail call i32 @pthread_spin_lock(i32* nonnull %2) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 5
  store i8 1, i8* %4, align 1, !tbaa !92
  %5 = tail call i32 @pthread_spin_unlock(i32* nonnull %2) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i64 @_ZNK4MARC11ThreadCTask5getIDEv(%"class.MARC::ThreadCTask"* nocapture readonly) local_unnamed_addr #25 align 2 {
  %2 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8, !tbaa !97
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define dso_local void @_ZN4MARC11ThreadCTask11setFunctionEPFvPvES1_(%"class.MARC::ThreadCTask"* nocapture, void (i8*)*, i8*) local_unnamed_addr #26 align 2 {
  %4 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 1
  store void (i8*)* %1, void (i8*)** %4, align 8, !tbaa !63
  %5 = getelementptr inbounds %"class.MARC::ThreadCTask", %"class.MARC::ThreadCTask"* %0, i64 0, i32 2
  store i8* %2, i8** %5, align 8, !tbaa !64
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC19ThreadPoolInterfaceC2Ev(%"class.MARC::ThreadPoolInterface"*) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::function", align 8
  %3 = tail call i32 @_ZNSt6thread20hardware_concurrencyEv() #10
  %4 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %4, align 8, !tbaa !184
  invoke void @_ZN4MARC19ThreadPoolInterfaceC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolInterface"* %0, i1 zeroext false, i32 undef, %"class.std::function"* nonnull %2)
          to label %5 unwind label %15

5:                                                ; preds = %1
  %6 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %4, align 8, !tbaa !184
  %7 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %10 = invoke zeroext i1 %6(%"union.std::_Any_data"* nonnull dereferenceable(16) %9, %"union.std::_Any_data"* nonnull dereferenceable(16) %9, i32 3)
          to label %14 unwind label %11

11:                                               ; preds = %8
  %12 = landingpad { i8*, i32 }
          catch i8* null
  %13 = extractvalue { i8*, i32 } %12, 0
  call void @__clang_call_terminate(i8* %13) #30
  unreachable

14:                                               ; preds = %5, %8
  ret void

15:                                               ; preds = %1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %4, align 8, !tbaa !184
  %18 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %21 = invoke zeroext i1 %17(%"union.std::_Any_data"* nonnull dereferenceable(16) %20, %"union.std::_Any_data"* nonnull dereferenceable(16) %20, i32 3)
          to label %25 unwind label %22

22:                                               ; preds = %19
  %23 = landingpad { i8*, i32 }
          catch i8* null
  %24 = extractvalue { i8*, i32 } %23, 0
  call void @__clang_call_terminate(i8* %24) #30
  unreachable

25:                                               ; preds = %15, %19
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC19ThreadPoolInterface25appendCodeToDeconstructorESt8functionIFvvEE(%"class.MARC::ThreadPoolInterface"*, %"class.std::function"*) local_unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::function", align 8
  %4 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %5, align 8, !tbaa !184
  %6 = getelementptr inbounds %"class.std::function", %"class.std::function"* %1, i64 0, i32 0, i32 1
  %7 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %6, align 8, !tbaa !184
  %8 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::function", %"class.std::function"* %1, i64 0, i32 0, i32 0
  %12 = invoke zeroext i1 %7(%"union.std::_Any_data"* nonnull dereferenceable(16) %10, %"union.std::_Any_data"* nonnull dereferenceable(16) %11, i32 2)
          to label %13 unwind label %17

13:                                               ; preds = %9
  %14 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %6 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 8, !tbaa !72
  %16 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %5 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %16, align 8, !tbaa !72
  br label %27

17:                                               ; preds = %9
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %5, align 8, !tbaa !184
  %20 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = invoke zeroext i1 %19(%"union.std::_Any_data"* nonnull dereferenceable(16) %10, %"union.std::_Any_data"* nonnull dereferenceable(16) %10, i32 3)
          to label %26 unwind label %23

23:                                               ; preds = %21
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  call void @__clang_call_terminate(i8* %25) #30
  unreachable

26:                                               ; preds = %21, %17
  resume { i8*, i32 } %18

27:                                               ; preds = %2, %13
  %28 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 4, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %29, label %35

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %28, i64 0, i32 0, i32 0
  %31 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %30) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  invoke void @_ZSt20__throw_system_errori(i32 %31) #33
          to label %34 unwind label %55

34:                                               ; preds = %33
  unreachable

35:                                               ; preds = %29, %27
  invoke void @_ZN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEE22internal_pushAndNotifyERS3_(%"class.MARC::ThreadSafeMutexQueue"* nonnull %4, %"class.std::function"* nonnull dereferenceable(32) %3)
          to label %36 unwind label %40

36:                                               ; preds = %35
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %37, label %45

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %28, i64 0, i32 0, i32 0
  %39 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %38) #10
  br label %45

40:                                               ; preds = %35
  %41 = landingpad { i8*, i32 }
          cleanup
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %42, label %57

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %28, i64 0, i32 0, i32 0
  %44 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %43) #10
  br label %57

45:                                               ; preds = %37, %36
  %46 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %5, align 8, !tbaa !184
  %47 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 0
  %50 = invoke zeroext i1 %46(%"union.std::_Any_data"* nonnull dereferenceable(16) %49, %"union.std::_Any_data"* nonnull dereferenceable(16) %49, i32 3)
          to label %54 unwind label %51

51:                                               ; preds = %48
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  call void @__clang_call_terminate(i8* %53) #30
  unreachable

54:                                               ; preds = %45, %48
  ret void

55:                                               ; preds = %33
  %56 = landingpad { i8*, i32 }
          cleanup
  br label %57

57:                                               ; preds = %40, %42, %55
  %58 = phi { i8*, i32 } [ %56, %55 ], [ %41, %42 ], [ %41, %40 ]
  %59 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %5, align 8, !tbaa !184
  %60 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 0
  %63 = invoke zeroext i1 %59(%"union.std::_Any_data"* nonnull dereferenceable(16) %62, %"union.std::_Any_data"* nonnull dereferenceable(16) %62, i32 3)
          to label %67 unwind label %64

64:                                               ; preds = %61
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  call void @__clang_call_terminate(i8* %66) #30
  unreachable

67:                                               ; preds = %57, %61
  resume { i8*, i32 } %58
}

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local i32 @_ZNK4MARC19ThreadPoolInterface19numberOfIdleThreadsEv(%"class.MARC::ThreadPoolInterface"* nocapture readonly) local_unnamed_addr #27 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %4 = bitcast %"class.std::thread"** %3 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !115
  %6 = bitcast %"class.std::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !118
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %.loopexit, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %12

.loopexit:                                        ; preds = %12, %1
  %11 = phi i32 [ 0, %1 ], [ %22, %12 ]
  ret i32 %11

12:                                               ; preds = %9, %12
  %13 = phi i64 [ 0, %9 ], [ %23, %12 ]
  %14 = phi i32 [ 0, %9 ], [ %22, %12 ]
  %15 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %10, align 8, !tbaa !119
  %16 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %15, i64 %13
  %17 = load %"struct.std::atomic"*, %"struct.std::atomic"** %16, align 8, !tbaa !72
  %18 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %17, i64 0, i32 0, i32 0
  %19 = load atomic i8, i8* %18 seq_cst, align 1
  %20 = and i8 %19, 1
  %21 = zext i8 %20 to i32
  %22 = add i32 %14, %21
  %23 = add nuw i64 %13, 1
  %24 = load i64, i64* %4, align 8, !tbaa !115
  %25 = load i64, i64* %6, align 8, !tbaa !118
  %26 = sub i64 %24, %25
  %27 = ashr exact i64 %26, 3
  %28 = icmp ugt i64 %27, %23
  br i1 %28, label %12, label %.loopexit
}

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_ZN4MARC19ThreadPoolInterface29waitAllThreadsToBeUnavailableEv(%"class.MARC::ThreadPoolInterface"* nocapture readonly) local_unnamed_addr #27 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.MARC::ThreadPoolInterface", %"class.MARC::ThreadPoolInterface"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %4 = bitcast %"struct.std::atomic"*** %3 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !124
  %6 = bitcast %"class.std::vector.0"* %2 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !119
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %.loopexit2, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %2, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %9, %.loopexit
  %12 = phi i64 [ %7, %9 ], [ %30, %.loopexit ]
  %13 = phi i64 [ 0, %9 ], [ %28, %.loopexit ]
  %14 = inttoptr i64 %12 to %"struct.std::atomic"**
  %15 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %14, i64 %13
  %16 = load %"struct.std::atomic"*, %"struct.std::atomic"** %15, align 8, !tbaa !72
  %17 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %16, i64 0, i32 0, i32 0
  %18 = load atomic i8, i8* %17 seq_cst, align 1
  %19 = and i8 %18, 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %.loopexit, label %.preheader

.loopexit2:                                       ; preds = %.loopexit, %1
  ret void

.preheader:                                       ; preds = %11, %.preheader
  %21 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %10, align 8, !tbaa !119
  %22 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %21, i64 %13
  %23 = load %"struct.std::atomic"*, %"struct.std::atomic"** %22, align 8, !tbaa !72
  %24 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %23, i64 0, i32 0, i32 0
  %25 = load atomic i8, i8* %24 seq_cst, align 1
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %.loopexit, label %.preheader

.loopexit:                                        ; preds = %.preheader, %11
  %28 = add nuw i64 %13, 1
  %29 = load i64, i64* %4, align 8, !tbaa !124
  %30 = load i64, i64* %6, align 8, !tbaa !119
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, %28
  br i1 %33, label %11, label %.loopexit2
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC10ThreadPoolC2Ev(%"class.MARC::ThreadPool"*) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::function", align 8
  %3 = tail call i32 @_ZNSt6thread20hardware_concurrencyEv() #10
  %4 = icmp ugt i32 %3, 2
  %5 = select i1 %4, i32 %3, i32 2
  %6 = add i32 %5, -1
  %7 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  invoke void @_ZN4MARC10ThreadPoolC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPool"* %0, i1 zeroext undef, i32 %6, %"class.std::function"* undef)
          to label %8 unwind label %18

8:                                                ; preds = %1
  %9 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %10 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %13 = invoke zeroext i1 %9(%"union.std::_Any_data"* nonnull dereferenceable(16) %12, %"union.std::_Any_data"* nonnull dereferenceable(16) %12, i32 3)
          to label %17 unwind label %14

14:                                               ; preds = %11
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  call void @__clang_call_terminate(i8* %16) #30
  unreachable

17:                                               ; preds = %8, %11
  ret void

18:                                               ; preds = %1
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %21 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %24 = invoke zeroext i1 %20(%"union.std::_Any_data"* nonnull dereferenceable(16) %23, %"union.std::_Any_data"* nonnull dereferenceable(16) %23, i32 3)
          to label %28 unwind label %25

25:                                               ; preds = %22
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  call void @__clang_call_terminate(i8* %27) #30
  unreachable

28:                                               ; preds = %18, %22
  resume { i8*, i32 } %19
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC10ThreadPoolC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPool"*, i1 zeroext, i32, %"class.std::function"* nocapture readnone) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::function", align 8
  %6 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 0
  %7 = bitcast %"class.std::function"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7)
  %8 = tail call i32 @_ZNSt6thread20hardware_concurrencyEv() #10
  %9 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %9, align 8, !tbaa !184
  invoke void @_ZN4MARC19ThreadPoolInterfaceC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolInterface"* %6, i1 zeroext false, i32 undef, %"class.std::function"* nonnull %5)
          to label %10 unwind label %19

10:                                               ; preds = %4
  %11 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %9, align 8, !tbaa !184
  %12 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %15 = invoke zeroext i1 %11(%"union.std::_Any_data"* nonnull dereferenceable(16) %14, %"union.std::_Any_data"* nonnull dereferenceable(16) %14, i32 3)
          to label %30 unwind label %16

16:                                               ; preds = %13
  %17 = landingpad { i8*, i32 }
          catch i8* null
  %18 = extractvalue { i8*, i32 } %17, 0
  call void @__clang_call_terminate(i8* %18) #30
  unreachable

19:                                               ; preds = %4
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %9, align 8, !tbaa !184
  %22 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %25 = invoke zeroext i1 %21(%"union.std::_Any_data"* nonnull dereferenceable(16) %24, %"union.std::_Any_data"* nonnull dereferenceable(16) %24, i32 3)
          to label %29 unwind label %26

26:                                               ; preds = %23
  %27 = landingpad { i8*, i32 }
          catch i8* null
  %28 = extractvalue { i8*, i32 } %27, 0
  call void @__clang_call_terminate(i8* %28) #30
  unreachable

29:                                               ; preds = %23, %19
  resume { i8*, i32 } %20

30:                                               ; preds = %10, %13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7)
  %31 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4MARC10ThreadPoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8, !tbaa !73
  %32 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %32, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8, !tbaa !73
  %34 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::queue.13", %"class.std::queue.13"* %34, i64 0, i32 0, i32 0
  %36 = bitcast %"class.std::queue.13"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 80, i1 false) #10
  invoke void @_ZNSt11_Deque_baseISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE17_M_initialize_mapEm(%"class.std::_Deque_base.15"* nonnull %35, i64 0)
          to label %37 unwind label %43

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i8 1, i8* %38, align 1, !tbaa !123
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8, !tbaa !73
  %39 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 1
  %40 = bitcast %"class.std::mutex"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 40, i1 false) #10
  %41 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 2
  call void @_ZNSt18condition_variableC1Ev(%"class.std::condition_variable"* nonnull %41) #10
  %42 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 3
  call void @_ZNSt18condition_variableC1Ev(%"class.std::condition_variable"* nonnull %42) #10
  invoke void @_ZN4MARC19ThreadPoolInterface10newThreadsEj(%"class.MARC::ThreadPoolInterface"* nonnull %6, i32 %2)
          to label %56 unwind label %47

43:                                               ; preds = %30
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  %46 = extractvalue { i8*, i32 } %44, 1
  br label %57

47:                                               ; preds = %37
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  %50 = call i8* @__cxa_begin_catch(i8* %49) #10
  invoke void @__cxa_rethrow() #33
          to label %65 unwind label %51

51:                                               ; preds = %47
  %52 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %53 unwind label %62

53:                                               ; preds = %51
  %54 = extractvalue { i8*, i32 } %52, 1
  %55 = extractvalue { i8*, i32 } %52, 0
  call void @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEED2Ev(%"class.MARC::ThreadSafeMutexQueue.11"* nonnull %32) #10
  br label %57

56:                                               ; preds = %37
  ret void

57:                                               ; preds = %53, %43
  %58 = phi i8* [ %55, %53 ], [ %45, %43 ]
  %59 = phi i32 [ %54, %53 ], [ %46, %43 ]
  call void @_ZN4MARC19ThreadPoolInterfaceD2Ev(%"class.MARC::ThreadPoolInterface"* nonnull %6) #10
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  resume { i8*, i32 } %61

62:                                               ; preds = %51
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #30
  unreachable

65:                                               ; preds = %47
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt11_Deque_baseISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE17_M_initialize_mapEm(%"class.std::_Deque_base.15"*, i64) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = lshr i64 %1, 6
  %4 = add nuw nsw i64 %3, 1
  %5 = icmp ugt i64 %3, 5
  %6 = select i1 %5, i64 %3, i64 5
  %7 = add nuw nsw i64 %6, 3
  %8 = getelementptr inbounds %"class.std::_Deque_base.15", %"class.std::_Deque_base.15"* %0, i64 0, i32 0, i32 1
  store i64 %7, i64* %8, align 8, !tbaa !229
  %9 = icmp ugt i64 %7, 2305843009213693951
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZSt17__throw_bad_allocv() #33
  unreachable

11:                                               ; preds = %2
  %12 = shl nuw nsw i64 %7, 3
  %13 = tail call i8* @_Znwm(i64 %12)
  %14 = bitcast i8* %13 to %"class.std::unique_ptr"**
  %15 = bitcast %"class.std::_Deque_base.15"* %0 to i8**
  store i8* %13, i8** %15, align 8, !tbaa !230
  %16 = load i64, i64* %8, align 8, !tbaa !229
  %17 = sub i64 %16, %4
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %14, i64 %18
  %20 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %19, i64 %4
  br label %21

21:                                               ; preds = %11, %24
  %22 = phi %"class.std::unique_ptr"** [ %26, %24 ], [ %19, %11 ]
  %23 = invoke i8* @_Znwm(i64 512)
          to label %24 unwind label %28

24:                                               ; preds = %21
  %25 = bitcast %"class.std::unique_ptr"** %22 to i8**
  store i8* %23, i8** %25, align 8, !tbaa !72
  %26 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %22, i64 1
  %27 = icmp ult %"class.std::unique_ptr"** %26, %20
  br i1 %27, label %21, label %52

28:                                               ; preds = %21
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = tail call i8* @__cxa_begin_catch(i8* %30) #10
  %32 = icmp ugt %"class.std::unique_ptr"** %22, %19
  br i1 %32, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %28, %.preheader
  %33 = phi %"class.std::unique_ptr"** [ %36, %.preheader ], [ %19, %28 ]
  %34 = bitcast %"class.std::unique_ptr"** %33 to i8**
  %35 = load i8*, i8** %34, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %35) #10
  %36 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %33, i64 1
  %37 = icmp ult %"class.std::unique_ptr"** %36, %22
  br i1 %37, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %.preheader, %28
  invoke void @__cxa_rethrow() #33
          to label %43 unwind label %38

38:                                               ; preds = %.loopexit
  %39 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @__cxa_end_catch()
          to label %44 unwind label %40

40:                                               ; preds = %38
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  tail call void @__clang_call_terminate(i8* %42) #30
  unreachable

43:                                               ; preds = %.loopexit
  unreachable

44:                                               ; preds = %38
  %45 = extractvalue { i8*, i32 } %39, 0
  %46 = tail call i8* @__cxa_begin_catch(i8* %45) #10
  %47 = load i8*, i8** %15, align 8, !tbaa !230
  tail call void @_ZdlPv(i8* %47) #10
  %48 = bitcast %"class.std::_Deque_base.15"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #33
          to label %73 unwind label %49

49:                                               ; preds = %44
  %50 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %51 unwind label %70

51:                                               ; preds = %49
  resume { i8*, i32 } %50

52:                                               ; preds = %24
  %53 = getelementptr inbounds %"class.std::_Deque_base.15", %"class.std::_Deque_base.15"* %0, i64 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.std::_Deque_base.15", %"class.std::_Deque_base.15"* %0, i64 0, i32 0, i32 2, i32 3
  store %"class.std::unique_ptr"** %19, %"class.std::unique_ptr"*** %54, align 8, !tbaa !65
  %55 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %19, align 8, !tbaa !72
  %56 = getelementptr inbounds %"class.std::_Deque_base.15", %"class.std::_Deque_base.15"* %0, i64 0, i32 0, i32 2, i32 1
  store %"class.std::unique_ptr"* %55, %"class.std::unique_ptr"** %56, align 8, !tbaa !68
  %57 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %55, i64 64
  %58 = getelementptr inbounds %"class.std::_Deque_base.15", %"class.std::_Deque_base.15"* %0, i64 0, i32 0, i32 2, i32 2
  store %"class.std::unique_ptr"* %57, %"class.std::unique_ptr"** %58, align 8, !tbaa !69
  %59 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %20, i64 -1
  %60 = getelementptr inbounds %"class.std::_Deque_base.15", %"class.std::_Deque_base.15"* %0, i64 0, i32 0, i32 3, i32 3
  store %"class.std::unique_ptr"** %59, %"class.std::unique_ptr"*** %60, align 8, !tbaa !65
  %61 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %59, align 8, !tbaa !72
  %62 = getelementptr inbounds %"class.std::_Deque_base.15", %"class.std::_Deque_base.15"* %0, i64 0, i32 0, i32 3, i32 1
  store %"class.std::unique_ptr"* %61, %"class.std::unique_ptr"** %62, align 8, !tbaa !68
  %63 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %61, i64 64
  %64 = getelementptr inbounds %"class.std::_Deque_base.15", %"class.std::_Deque_base.15"* %0, i64 0, i32 0, i32 3, i32 2
  store %"class.std::unique_ptr"* %63, %"class.std::unique_ptr"** %64, align 8, !tbaa !69
  %65 = ptrtoint %"class.std::unique_ptr"* %55 to i64
  %66 = bitcast %"struct.std::_Deque_iterator.19"* %53 to i64*
  store i64 %65, i64* %66, align 8, !tbaa !81
  %67 = and i64 %1, 63
  %68 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %61, i64 %67
  %69 = getelementptr inbounds %"class.std::_Deque_base.15", %"class.std::_Deque_base.15"* %0, i64 0, i32 0, i32 3, i32 0
  store %"class.std::unique_ptr"* %68, %"class.std::unique_ptr"** %69, align 8, !tbaa !231
  ret void

70:                                               ; preds = %49
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  tail call void @__clang_call_terminate(i8* %72) #30
  unreachable

73:                                               ; preds = %44
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEED2Ev(%"class.MARC::ThreadSafeMutexQueue.11"*) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %4, label %10

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %5) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  invoke void @_ZSt20__throw_system_errori(i32 %6) #33
          to label %9 unwind label %26

9:                                                ; preds = %8
  unreachable

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load atomic i8, i8* %11 seq_cst, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  store atomic i8 0, i8* %11 seq_cst, align 1
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %16) #10
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %17) #10
  br label %18

18:                                               ; preds = %15, %10
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %19, label %22

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %21 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %20) #10
  br label %22

22:                                               ; preds = %19, %18
  %23 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %23) #10
  %24 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %24) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %25 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EED2Ev(%"class.std::deque.14"* nonnull %25) #10
  ret void

26:                                               ; preds = %8
  %27 = landingpad { i8*, i32 }
          catch i8* null
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %29) #10
  %30 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variableD1Ev(%"class.std::condition_variable"* nonnull %30) #10
  %31 = bitcast %"class.MARC::ThreadSafeMutexQueue.11"* %0 to %"class.MARC::ThreadSafeQueue.12"*
  tail call void @_ZN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEED2Ev(%"class.MARC::ThreadSafeQueue.12"* %31) #10
  tail call void @__clang_call_terminate(i8* %28) #30
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EED2Ev(%"class.std::deque.14"*) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %3 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %2, align 8, !tbaa !67, !noalias !232
  %4 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 2, i32 2
  %5 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %4, align 8, !tbaa !69, !noalias !232
  %6 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 2, i32 3
  %7 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %6, align 8, !tbaa !65, !noalias !232
  %8 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 3
  %9 = bitcast %"struct.std::_Deque_iterator.19"* %8 to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !67, !noalias !235
  %11 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 3, i32 1
  %12 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %11, align 8, !tbaa !68, !noalias !235
  %13 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 3, i32 3
  %14 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %13, align 8, !tbaa !65, !noalias !235
  %15 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %7, i64 1
  %16 = icmp ult %"class.std::unique_ptr"** %15, %14
  br i1 %16, label %.preheader19, label %.loopexit20

17:                                               ; preds = %33
  %18 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %21, i64 1
  %19 = icmp ult %"class.std::unique_ptr"** %18, %14
  br i1 %19, label %.preheader19, label %.loopexit20

.loopexit20:                                      ; preds = %17, %1
  %20 = icmp eq %"class.std::unique_ptr"** %7, %14
  br i1 %20, label %64, label %36

.preheader19:                                     ; preds = %1, %17
  %21 = phi %"class.std::unique_ptr"** [ %18, %17 ], [ %15, %1 ]
  %22 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %21, align 8, !tbaa !72
  br label %23

23:                                               ; preds = %33, %.preheader19
  %24 = phi i64 [ %34, %33 ], [ 0, %.preheader19 ]
  %25 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %22, i64 %24, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %25, align 8, !tbaa !72
  %27 = icmp eq %"class.MARC::IThreadTask"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.MARC::IThreadTask"* %26 to void (%"class.MARC::IThreadTask"*)***
  %30 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %29, align 8, !tbaa !73
  %31 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %30, i64 2
  %32 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %31, align 8
  tail call void %32(%"class.MARC::IThreadTask"* nonnull %26) #10
  br label %33

33:                                               ; preds = %28, %23
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %25, align 8, !tbaa !72
  %34 = add nuw nsw i64 %24, 1
  %35 = icmp eq i64 %34, 64
  br i1 %35, label %17, label %23

36:                                               ; preds = %.loopexit20
  %37 = icmp eq %"class.std::unique_ptr"* %3, %5
  br i1 %37, label %.loopexit18, label %.preheader17

.preheader17:                                     ; preds = %36, %47
  %38 = phi %"class.std::unique_ptr"* [ %48, %47 ], [ %3, %36 ]
  %39 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %39, align 8, !tbaa !72
  %41 = icmp eq %"class.MARC::IThreadTask"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %.preheader17
  %43 = bitcast %"class.MARC::IThreadTask"* %40 to void (%"class.MARC::IThreadTask"*)***
  %44 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %43, align 8, !tbaa !73
  %45 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %44, i64 2
  %46 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %45, align 8
  tail call void %46(%"class.MARC::IThreadTask"* nonnull %40) #10
  br label %47

47:                                               ; preds = %42, %.preheader17
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %39, align 8, !tbaa !72
  %48 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %38, i64 1
  %49 = icmp eq %"class.std::unique_ptr"* %48, %5
  br i1 %49, label %.loopexit18, label %.preheader17

.loopexit18:                                      ; preds = %47, %36
  %50 = inttoptr i64 %10 to %"class.std::unique_ptr"*
  %51 = icmp eq %"class.std::unique_ptr"* %12, %50
  br i1 %51, label %.loopexit, label %.preheader15

.preheader15:                                     ; preds = %.loopexit18, %61
  %52 = phi %"class.std::unique_ptr"* [ %62, %61 ], [ %12, %.loopexit18 ]
  %53 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %53, align 8, !tbaa !72
  %55 = icmp eq %"class.MARC::IThreadTask"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %.preheader15
  %57 = bitcast %"class.MARC::IThreadTask"* %54 to void (%"class.MARC::IThreadTask"*)***
  %58 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %57, align 8, !tbaa !73
  %59 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %58, i64 2
  %60 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %59, align 8
  tail call void %60(%"class.MARC::IThreadTask"* nonnull %54) #10
  br label %61

61:                                               ; preds = %56, %.preheader15
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %53, align 8, !tbaa !72
  %62 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %52, i64 1
  %63 = icmp eq %"class.std::unique_ptr"* %62, %50
  br i1 %63, label %.loopexit, label %.preheader15

64:                                               ; preds = %.loopexit20
  %65 = inttoptr i64 %10 to %"class.std::unique_ptr"*
  %66 = icmp eq %"class.std::unique_ptr"* %3, %65
  br i1 %66, label %.loopexit, label %.preheader14

.preheader14:                                     ; preds = %64, %76
  %67 = phi %"class.std::unique_ptr"* [ %77, %76 ], [ %3, %64 ]
  %68 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %68, align 8, !tbaa !72
  %70 = icmp eq %"class.MARC::IThreadTask"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %.preheader14
  %72 = bitcast %"class.MARC::IThreadTask"* %69 to void (%"class.MARC::IThreadTask"*)***
  %73 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %72, align 8, !tbaa !73
  %74 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %73, i64 2
  %75 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %74, align 8
  tail call void %75(%"class.MARC::IThreadTask"* nonnull %69) #10
  br label %76

76:                                               ; preds = %71, %.preheader14
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %68, align 8, !tbaa !72
  %77 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %67, i64 1
  %78 = icmp eq %"class.std::unique_ptr"* %77, %65
  br i1 %78, label %.loopexit, label %.preheader14

.loopexit:                                        ; preds = %61, %76, %64, %.loopexit18
  %79 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %79, align 8, !tbaa !230
  %81 = icmp eq %"class.std::unique_ptr"** %80, null
  br i1 %81, label %98, label %82

82:                                               ; preds = %.loopexit
  %83 = bitcast %"class.std::unique_ptr"** %80 to i8*
  %84 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %6, align 8, !tbaa !86
  %85 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %13, align 8, !tbaa !238
  %86 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %85, i64 1
  %87 = icmp ult %"class.std::unique_ptr"** %84, %86
  br i1 %87, label %.preheader, label %96

.preheader:                                       ; preds = %82, %.preheader
  %88 = phi %"class.std::unique_ptr"** [ %91, %.preheader ], [ %84, %82 ]
  %89 = bitcast %"class.std::unique_ptr"** %88 to i8**
  %90 = load i8*, i8** %89, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %90) #10
  %91 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %88, i64 1
  %92 = icmp ult %"class.std::unique_ptr"** %88, %85
  br i1 %92, label %.preheader, label %93

93:                                               ; preds = %.preheader
  %94 = bitcast %"class.std::deque.14"* %0 to i8**
  %95 = load i8*, i8** %94, align 8, !tbaa !230
  br label %96

96:                                               ; preds = %93, %82
  %97 = phi i8* [ %95, %93 ], [ %83, %82 ]
  tail call void @_ZdlPv(i8* %97) #10
  br label %98

98:                                               ; preds = %.loopexit, %96
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEED2Ev(%"class.MARC::ThreadSafeQueue.12"*) unnamed_addr #23 comdat align 2 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.12", %"class.MARC::ThreadSafeQueue.12"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.12", %"class.MARC::ThreadSafeQueue.12"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EED2Ev(%"class.std::deque.14"* nonnull %3) #10
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE6tryPopERS5_(%"class.MARC::ThreadSafeMutexQueue.11"*, %"class.std::unique_ptr"* dereferenceable(8)) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %4, label %9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %5) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZSt20__throw_system_errori(i32 %6) #33
  unreachable

9:                                                ; preds = %2, %4
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %11 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %10, align 8, !tbaa !67
  %12 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %13 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %12, align 8, !tbaa !67
  %14 = icmp eq %"class.std::unique_ptr"* %11, %13
  br i1 %14, label %75, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load atomic i8, i8* %16 seq_cst, align 1
  %18 = and i8 %17, 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %75, label %20

20:                                               ; preds = %15
  %21 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %12, align 8, !tbaa !67, !noalias !239
  %22 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::unique_ptr"* %21 to i64*
  %24 = load i64, i64* %23, align 8, !tbaa !72
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %22, align 8, !tbaa !72
  %25 = bitcast %"class.std::unique_ptr"* %1 to i64*
  %26 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %26, align 8, !tbaa !72
  store i64 %24, i64* %25, align 8, !tbaa !72
  %28 = icmp eq %"class.MARC::IThreadTask"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %20
  %30 = bitcast %"class.MARC::IThreadTask"* %27 to void (%"class.MARC::IThreadTask"*)***
  %31 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %30, align 8, !tbaa !73
  %32 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %31, i64 2
  %33 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %32, align 8
  tail call void %33(%"class.MARC::IThreadTask"* nonnull %27) #10
  br label %34

34:                                               ; preds = %29, %20
  %35 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %12, align 8, !tbaa !81
  %36 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %37 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %36, align 8, !tbaa !84
  %38 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %37, i64 -1
  %39 = icmp eq %"class.std::unique_ptr"* %35, %38
  br i1 %39, label %52, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %41, align 8, !tbaa !72
  %43 = icmp eq %"class.MARC::IThreadTask"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = bitcast %"class.MARC::IThreadTask"* %42 to void (%"class.MARC::IThreadTask"*)***
  %46 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %45, align 8, !tbaa !73
  %47 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %46, i64 2
  %48 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %47, align 8
  tail call void %48(%"class.MARC::IThreadTask"* nonnull %42) #10
  br label %49

49:                                               ; preds = %44, %40
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %41, align 8, !tbaa !72
  %50 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %12, align 8, !tbaa !81
  %51 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %50, i64 1
  store %"class.std::unique_ptr"* %51, %"class.std::unique_ptr"** %12, align 8, !tbaa !81
  br label %73

52:                                               ; preds = %34
  %53 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %54, align 8, !tbaa !72
  %56 = icmp eq %"class.MARC::IThreadTask"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = bitcast %"class.MARC::IThreadTask"* %55 to void (%"class.MARC::IThreadTask"*)***
  %59 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %58, align 8, !tbaa !73
  %60 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %59, i64 2
  %61 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %60, align 8
  tail call void %61(%"class.MARC::IThreadTask"* nonnull %55) #10
  br label %62

62:                                               ; preds = %57, %52
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %54, align 8, !tbaa !72
  %63 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %64 = bitcast %"class.std::unique_ptr"** %63 to i8**
  %65 = load i8*, i8** %64, align 8, !tbaa !85
  tail call void @_ZdlPv(i8* %65) #10
  %66 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %67 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %66, align 8, !tbaa !86
  %68 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %67, i64 1
  store %"class.std::unique_ptr"** %68, %"class.std::unique_ptr"*** %66, align 8, !tbaa !65
  %69 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %68, align 8, !tbaa !72
  store %"class.std::unique_ptr"* %69, %"class.std::unique_ptr"** %63, align 8, !tbaa !68
  %70 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %69, i64 64
  store %"class.std::unique_ptr"* %70, %"class.std::unique_ptr"** %36, align 8, !tbaa !69
  %71 = ptrtoint %"class.std::unique_ptr"* %69 to i64
  %72 = bitcast %"struct.std::_Deque_iterator.19"* %53 to i64*
  store i64 %71, i64* %72, align 8, !tbaa !81
  br label %73

73:                                               ; preds = %49, %62
  %74 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %74) #10
  br label %75

75:                                               ; preds = %15, %73, %9
  %76 = phi i1 [ false, %15 ], [ false, %9 ], [ true, %73 ]
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %77, label %80

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %79 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %78) #10
  br label %80

80:                                               ; preds = %75, %77
  ret i1 %76
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE7waitPopEv(%"class.MARC::ThreadSafeMutexQueue.11"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::unique_lock", align 8
  %3 = bitcast %"class.std::unique_lock"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %2, i64 0, i32 0
  store %"class.std::mutex"* %4, %"class.std::mutex"** %5, align 8, !tbaa !75
  %6 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %2, i64 0, i32 1
  store i8 0, i8* %6, align 8, !tbaa !77
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %7, label %12

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %4, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %8) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZSt20__throw_system_errori(i32 %9) #33
  unreachable

12:                                               ; preds = %1, %7
  store i8 1, i8* %6, align 8, !tbaa !77
  %13 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = load atomic i8, i8* %13 seq_cst, align 1
  %15 = and i8 %14, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %77, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %19 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %18, align 8, !tbaa !67
  %20 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %21 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %20, align 8, !tbaa !67
  %22 = icmp eq %"class.std::unique_ptr"* %19, %21
  br i1 %22, label %23, label %.loopexit

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 2
  br label %25

25:                                               ; preds = %23, %29
  %26 = load atomic i8, i8* %13 seq_cst, align 1
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %.loopexit, label %29

29:                                               ; preds = %25
  call void @_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE(%"class.std::condition_variable"* nonnull %24, %"class.std::unique_lock"* nonnull dereferenceable(16) %2) #10
  %30 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %18, align 8, !tbaa !67
  %31 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %20, align 8, !tbaa !67
  %32 = icmp eq %"class.std::unique_ptr"* %30, %31
  br i1 %32, label %25, label %.loopexit

.loopexit:                                        ; preds = %29, %25, %17
  %33 = load atomic i8, i8* %13 seq_cst, align 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %77, label %36

36:                                               ; preds = %.loopexit
  %37 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %20, align 8, !tbaa !81
  %38 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %39 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %38, align 8, !tbaa !84
  %40 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %39, i64 -1
  %41 = icmp eq %"class.std::unique_ptr"* %37, %40
  br i1 %41, label %54, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %43, align 8, !tbaa !72
  %45 = icmp eq %"class.MARC::IThreadTask"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.MARC::IThreadTask"* %44 to void (%"class.MARC::IThreadTask"*)***
  %48 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %47, align 8, !tbaa !73
  %49 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %48, i64 2
  %50 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %49, align 8
  call void %50(%"class.MARC::IThreadTask"* nonnull %44) #10
  br label %51

51:                                               ; preds = %46, %42
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %43, align 8, !tbaa !72
  %52 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %20, align 8, !tbaa !81
  %53 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %52, i64 1
  store %"class.std::unique_ptr"* %53, %"class.std::unique_ptr"** %20, align 8, !tbaa !81
  br label %75

54:                                               ; preds = %36
  %55 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %56 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %56, align 8, !tbaa !72
  %58 = icmp eq %"class.MARC::IThreadTask"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.MARC::IThreadTask"* %57 to void (%"class.MARC::IThreadTask"*)***
  %61 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %60, align 8, !tbaa !73
  %62 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %61, i64 2
  %63 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %62, align 8
  call void %63(%"class.MARC::IThreadTask"* nonnull %57) #10
  br label %64

64:                                               ; preds = %59, %54
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %56, align 8, !tbaa !72
  %65 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %66 = bitcast %"class.std::unique_ptr"** %65 to i8**
  %67 = load i8*, i8** %66, align 8, !tbaa !85
  call void @_ZdlPv(i8* %67) #10
  %68 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %69 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %68, align 8, !tbaa !86
  %70 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %69, i64 1
  store %"class.std::unique_ptr"** %70, %"class.std::unique_ptr"*** %68, align 8, !tbaa !65
  %71 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %70, align 8, !tbaa !72
  store %"class.std::unique_ptr"* %71, %"class.std::unique_ptr"** %65, align 8, !tbaa !68
  %72 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %71, i64 64
  store %"class.std::unique_ptr"* %72, %"class.std::unique_ptr"** %38, align 8, !tbaa !69
  %73 = ptrtoint %"class.std::unique_ptr"* %71 to i64
  %74 = bitcast %"struct.std::_Deque_iterator.19"* %55 to i64*
  store i64 %73, i64* %74, align 8, !tbaa !81
  br label %75

75:                                               ; preds = %51, %64
  %76 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 3
  call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %76) #10
  br label %77

77:                                               ; preds = %.loopexit, %12, %75
  %78 = phi i1 [ true, %75 ], [ false, %12 ], [ false, %.loopexit ]
  %79 = load i8, i8* %6, align 8, !tbaa !77, !range !62
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %77
  %82 = load %"class.std::mutex"*, %"class.std::mutex"** %5, align 8, !tbaa !75
  %83 = icmp eq %"class.std::mutex"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %85, label %88

85:                                               ; preds = %84
  %86 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %82, i64 0, i32 0, i32 0
  %87 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %86) #10
  br label %88

88:                                               ; preds = %85, %84
  store i8 0, i8* %6, align 8, !tbaa !77
  br label %89

89:                                               ; preds = %77, %81, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #10
  ret i1 %78
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE4pushES5_(%"class.MARC::ThreadSafeMutexQueue.11"*, %"class.std::unique_ptr"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %4, label %9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %5) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZSt20__throw_system_errori(i32 %6) #33
  unreachable

9:                                                ; preds = %2, %4
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::queue.13", %"class.std::queue.13"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %13 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %12, align 8, !tbaa !231
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 2
  %15 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %14, align 8, !tbaa !242
  %16 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %15, i64 -1
  %17 = icmp eq %"class.std::unique_ptr"* %13, %16
  br i1 %17, label %25, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::unique_ptr"* %1 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !72
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %19, align 8, !tbaa !72
  %22 = bitcast %"class.std::unique_ptr"* %13 to i64*
  store i64 %21, i64* %22, align 8, !tbaa !70
  %23 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %12, align 8, !tbaa !231
  %24 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %23, i64 1
  store %"class.std::unique_ptr"* %24, %"class.std::unique_ptr"** %12, align 8, !tbaa !231
  br label %57

25:                                               ; preds = %9
  %26 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !tbaa !229
  %28 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %29 = bitcast %"class.std::unique_ptr"*** %28 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !238
  %31 = bitcast %"class.std::queue.13"* %10 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !230
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  %35 = sub i64 %27, %34
  %36 = icmp ult i64 %35, 2
  br i1 %36, label %37, label %38

37:                                               ; preds = %25
  invoke void @_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE17_M_reallocate_mapEmb(%"class.std::deque.14"* nonnull %11, i64 1, i1 zeroext false)
          to label %38 unwind label %63

38:                                               ; preds = %37, %25
  %39 = invoke i8* @_Znwm(i64 512)
          to label %40 unwind label %63

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %42 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %28, align 8, !tbaa !238
  %43 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %42, i64 1
  %44 = bitcast %"class.std::unique_ptr"** %43 to i8**
  store i8* %39, i8** %44, align 8, !tbaa !72
  %45 = bitcast %"struct.std::_Deque_iterator.19"* %41 to i64**
  %46 = load i64*, i64** %45, align 8, !tbaa !231
  %47 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::unique_ptr"* %1 to i64*
  %49 = load i64, i64* %48, align 8, !tbaa !72
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %47, align 8, !tbaa !72
  store i64 %49, i64* %46, align 8, !tbaa !70
  %50 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %28, align 8, !tbaa !238
  %51 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %50, i64 1
  store %"class.std::unique_ptr"** %51, %"class.std::unique_ptr"*** %28, align 8, !tbaa !65
  %52 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %51, align 8, !tbaa !72
  %53 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  store %"class.std::unique_ptr"* %52, %"class.std::unique_ptr"** %53, align 8, !tbaa !68
  %54 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %52, i64 64
  store %"class.std::unique_ptr"* %54, %"class.std::unique_ptr"** %14, align 8, !tbaa !69
  %55 = ptrtoint %"class.std::unique_ptr"* %52 to i64
  %56 = bitcast %"struct.std::_Deque_iterator.19"* %41 to i64*
  store i64 %55, i64* %56, align 8, !tbaa !231
  br label %57

57:                                               ; preds = %40, %18
  %58 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %58) #10
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %59, label %62

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %61 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %60) #10
  br label %62

62:                                               ; preds = %57, %59
  ret void

63:                                               ; preds = %38, %37
  %64 = landingpad { i8*, i32 }
          cleanup
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %65, label %68

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %3, i64 0, i32 0, i32 0
  %67 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %66) #10
  br label %68

68:                                               ; preds = %63, %65
  resume { i8*, i32 } %64
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE8waitPushES5_l(%"class.MARC::ThreadSafeMutexQueue.11"*, %"class.std::unique_ptr"*, i64) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::unique_lock", align 8
  %5 = bitcast %"class.std::unique_lock"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %4, i64 0, i32 0
  store %"class.std::mutex"* %6, %"class.std::mutex"** %7, align 8, !tbaa !75
  %8 = getelementptr inbounds %"class.std::unique_lock", %"class.std::unique_lock"* %4, i64 0, i32 1
  store i8 0, i8* %8, align 8, !tbaa !77
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %6, i64 0, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %10) #10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZSt20__throw_system_errori(i32 %11) #33
  unreachable

14:                                               ; preds = %3, %9
  store i8 1, i8* %8, align 8, !tbaa !77
  %15 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %20 = bitcast %"class.std::unique_ptr"*** %19 to i64*
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %22 = bitcast %"class.std::unique_ptr"*** %21 to i64*
  %23 = bitcast %"struct.std::_Deque_iterator.19"* %17 to i64*
  %24 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %25 = bitcast %"class.std::unique_ptr"** %24 to i64*
  %26 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %27 = bitcast %"class.std::unique_ptr"** %26 to i64*
  %28 = bitcast %"struct.std::_Deque_iterator.19"* %18 to i64*
  br label %29

29:                                               ; preds = %50, %14
  %30 = load i64, i64* %20, align 8, !tbaa !65
  %31 = load i64, i64* %22, align 8, !tbaa !65
  %32 = sub i64 %30, %31
  %33 = shl i64 %32, 3
  %34 = add i64 %33, -64
  %35 = load i64, i64* %23, align 8, !tbaa !67
  %36 = load i64, i64* %25, align 8, !tbaa !68
  %37 = sub i64 %35, %36
  %38 = ashr exact i64 %37, 3
  %39 = add nsw i64 %34, %38
  %40 = load i64, i64* %27, align 8, !tbaa !69
  %41 = load i64, i64* %28, align 8, !tbaa !67
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 3
  %44 = add nsw i64 %39, %43
  %45 = icmp ult i64 %44, %2
  br i1 %45, label %51, label %46

46:                                               ; preds = %29
  %47 = load atomic i8, i8* %16 seq_cst, align 1
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  call void @_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE(%"class.std::condition_variable"* nonnull %15, %"class.std::unique_lock"* nonnull dereferenceable(16) %4) #10
  br label %29

51:                                               ; preds = %46, %29
  %52 = load atomic i8, i8* %16 seq_cst, align 1
  %53 = and i8 %52, 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %113, label %68

55:                                               ; preds = %95, %94
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = load i8, i8* %8, align 8, !tbaa !77, !range !62
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %55
  %60 = load %"class.std::mutex"*, %"class.std::mutex"** %7, align 8, !tbaa !75
  %61 = icmp eq %"class.std::mutex"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %59
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %63, label %66

63:                                               ; preds = %62
  %64 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %60, i64 0, i32 0, i32 0
  %65 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %64) #10
  br label %66

66:                                               ; preds = %63, %62
  store i8 0, i8* %8, align 8, !tbaa !77
  br label %67

67:                                               ; preds = %55, %59, %66
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  resume { i8*, i32 } %56

68:                                               ; preds = %51
  %69 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.std::queue.13", %"class.std::queue.13"* %69, i64 0, i32 0
  %71 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %72 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %71, align 8, !tbaa !231
  %73 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 2
  %74 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %73, align 8, !tbaa !242
  %75 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %74, i64 -1
  %76 = icmp eq %"class.std::unique_ptr"* %72, %75
  br i1 %76, label %84, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.std::unique_ptr"* %1 to i64*
  %80 = load i64, i64* %79, align 8, !tbaa !72
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %78, align 8, !tbaa !72
  %81 = bitcast %"class.std::unique_ptr"* %72 to i64*
  store i64 %80, i64* %81, align 8, !tbaa !70
  %82 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %71, align 8, !tbaa !231
  %83 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %82, i64 1
  store %"class.std::unique_ptr"* %83, %"class.std::unique_ptr"** %71, align 8, !tbaa !231
  br label %111

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8, !tbaa !229
  %87 = load i64, i64* %20, align 8, !tbaa !238
  %88 = bitcast %"class.std::queue.13"* %69 to i64*
  %89 = load i64, i64* %88, align 8, !tbaa !230
  %90 = sub i64 %87, %89
  %91 = ashr exact i64 %90, 3
  %92 = sub i64 %86, %91
  %93 = icmp ult i64 %92, 2
  br i1 %93, label %94, label %95

94:                                               ; preds = %84
  invoke void @_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE17_M_reallocate_mapEmb(%"class.std::deque.14"* nonnull %70, i64 1, i1 zeroext false)
          to label %95 unwind label %55

95:                                               ; preds = %94, %84
  %96 = invoke i8* @_Znwm(i64 512)
          to label %97 unwind label %55

97:                                               ; preds = %95
  %98 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %19, align 8, !tbaa !238
  %99 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %98, i64 1
  %100 = bitcast %"class.std::unique_ptr"** %99 to i8**
  store i8* %96, i8** %100, align 8, !tbaa !72
  %101 = bitcast %"struct.std::_Deque_iterator.19"* %17 to i64**
  %102 = load i64*, i64** %101, align 8, !tbaa !231
  %103 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::unique_ptr"* %1 to i64*
  %105 = load i64, i64* %104, align 8, !tbaa !72
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %103, align 8, !tbaa !72
  store i64 %105, i64* %102, align 8, !tbaa !70
  %106 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %19, align 8, !tbaa !238
  %107 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %106, i64 1
  store %"class.std::unique_ptr"** %107, %"class.std::unique_ptr"*** %19, align 8, !tbaa !65
  %108 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %107, align 8, !tbaa !72
  store %"class.std::unique_ptr"* %108, %"class.std::unique_ptr"** %24, align 8, !tbaa !68
  %109 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %108, i64 64
  store %"class.std::unique_ptr"* %109, %"class.std::unique_ptr"** %73, align 8, !tbaa !69
  %110 = ptrtoint %"class.std::unique_ptr"* %108 to i64
  store i64 %110, i64* %23, align 8, !tbaa !231
  br label %111

111:                                              ; preds = %77, %97
  %112 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 2
  call void @_ZNSt18condition_variable10notify_oneEv(%"class.std::condition_variable"* nonnull %112) #10
  br label %113

113:                                              ; preds = %51, %111
  %114 = phi i1 [ false, %51 ], [ true, %111 ]
  %115 = load i8, i8* %8, align 8, !tbaa !77, !range !62
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %113
  %118 = load %"class.std::mutex"*, %"class.std::mutex"** %7, align 8, !tbaa !75
  %119 = icmp eq %"class.std::mutex"* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %117
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %121, label %124

121:                                              ; preds = %120
  %122 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %118, i64 0, i32 0, i32 0
  %123 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %122) #10
  br label %124

124:                                              ; preds = %121, %120
  store i8 0, i8* %8, align 8, !tbaa !77
  br label %125

125:                                              ; preds = %113, %117, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret i1 %114
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE5clearEv(%"class.MARC::ThreadSafeMutexQueue.11"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %10 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %9, align 8, !tbaa !67
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %12 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %11, align 8, !tbaa !67
  %13 = icmp eq %"class.std::unique_ptr"* %10, %12
  br i1 %13, label %.loopexit, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %16 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %18 = bitcast %"class.std::unique_ptr"** %17 to i8**
  %19 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %20 = bitcast %"struct.std::_Deque_iterator.19"* %16 to i64*
  br label %21

21:                                               ; preds = %14, %51
  %22 = phi %"class.std::unique_ptr"* [ %12, %14 ], [ %52, %51 ]
  %23 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %15, align 8, !tbaa !84
  %24 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %23, i64 -1
  %25 = icmp eq %"class.std::unique_ptr"* %22, %24
  %26 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.MARC::IThreadTask"*, %"class.MARC::IThreadTask"** %26, align 8, !tbaa !72
  %28 = icmp eq %"class.MARC::IThreadTask"* %27, null
  br i1 %25, label %38, label %29

29:                                               ; preds = %21
  br i1 %28, label %35, label %30

30:                                               ; preds = %29
  %31 = bitcast %"class.MARC::IThreadTask"* %27 to void (%"class.MARC::IThreadTask"*)***
  %32 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %31, align 8, !tbaa !73
  %33 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %32, i64 2
  %34 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %33, align 8
  tail call void %34(%"class.MARC::IThreadTask"* nonnull %27) #10
  br label %35

35:                                               ; preds = %30, %29
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %26, align 8, !tbaa !72
  %36 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %11, align 8, !tbaa !81
  %37 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %36, i64 1
  store %"class.std::unique_ptr"* %37, %"class.std::unique_ptr"** %11, align 8, !tbaa !81
  br label %51

38:                                               ; preds = %21
  br i1 %28, label %44, label %39

39:                                               ; preds = %38
  %40 = bitcast %"class.MARC::IThreadTask"* %27 to void (%"class.MARC::IThreadTask"*)***
  %41 = load void (%"class.MARC::IThreadTask"*)**, void (%"class.MARC::IThreadTask"*)*** %40, align 8, !tbaa !73
  %42 = getelementptr inbounds void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %41, i64 2
  %43 = load void (%"class.MARC::IThreadTask"*)*, void (%"class.MARC::IThreadTask"*)** %42, align 8
  tail call void %43(%"class.MARC::IThreadTask"* nonnull %27) #10
  br label %44

44:                                               ; preds = %39, %38
  store %"class.MARC::IThreadTask"* null, %"class.MARC::IThreadTask"** %26, align 8, !tbaa !72
  %45 = load i8*, i8** %18, align 8, !tbaa !85
  tail call void @_ZdlPv(i8* %45) #10
  %46 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %19, align 8, !tbaa !86
  %47 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %46, i64 1
  store %"class.std::unique_ptr"** %47, %"class.std::unique_ptr"*** %19, align 8, !tbaa !65
  %48 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %47, align 8, !tbaa !72
  store %"class.std::unique_ptr"* %48, %"class.std::unique_ptr"** %17, align 8, !tbaa !68
  %49 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %48, i64 64
  store %"class.std::unique_ptr"* %49, %"class.std::unique_ptr"** %15, align 8, !tbaa !69
  %50 = ptrtoint %"class.std::unique_ptr"* %48 to i64
  store i64 %50, i64* %20, align 8, !tbaa !81
  br label %51

51:                                               ; preds = %35, %44
  %52 = phi %"class.std::unique_ptr"* [ %37, %35 ], [ %48, %44 ]
  %53 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %9, align 8, !tbaa !67
  %54 = icmp eq %"class.std::unique_ptr"* %53, %52
  br i1 %54, label %.loopexit, label %21

.loopexit:                                        ; preds = %51, %8
  %55 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %55) #10
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %56, label %59

56:                                               ; preds = %.loopexit
  %57 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %58 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %57) #10
  br label %59

59:                                               ; preds = %.loopexit, %56
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE5emptyEv(%"class.MARC::ThreadSafeMutexQueue.11"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %10 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %9, align 8, !tbaa !67
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %12 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %11, align 8, !tbaa !67
  %13 = icmp eq %"class.std::unique_ptr"* %10, %12
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %14, label %17

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %15) #10
  br label %17

17:                                               ; preds = %8, %14
  ret i1 %13
}

; Function Attrs: uwtable
define linkonce_odr dso_local i64 @_ZNK4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE4sizeEv(%"class.MARC::ThreadSafeMutexQueue.11"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %12 = bitcast %"class.std::unique_ptr"*** %11 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !65
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %15 = bitcast %"class.std::unique_ptr"*** %14 to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !65
  %17 = sub i64 %13, %16
  %18 = shl i64 %17, 3
  %19 = add i64 %18, -64
  %20 = bitcast %"struct.std::_Deque_iterator.19"* %9 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !67
  %22 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %23 = bitcast %"class.std::unique_ptr"** %22 to i64*
  %24 = load i64, i64* %23, align 8, !tbaa !68
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %19, %26
  %28 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %29 = bitcast %"class.std::unique_ptr"** %28 to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !69
  %31 = bitcast %"struct.std::_Deque_iterator.19"* %10 to i64*
  %32 = load i64, i64* %31, align 8, !tbaa !67
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  %35 = add nsw i64 %27, %34
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %36, label %39

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %37) #10
  br label %39

39:                                               ; preds = %8, %36
  ret i64 %35
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE7isValidEv(%"class.MARC::ThreadSafeQueue.12"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.12", %"class.MARC::ThreadSafeQueue.12"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE10invalidateEv(%"class.MARC::ThreadSafeMutexQueue.11"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %3, label %8

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZSt20__throw_system_errori(i32 %5) #33
  unreachable

8:                                                ; preds = %1, %3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load atomic i8, i8* %9 seq_cst, align 1
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  store atomic i8 0, i8* %9 seq_cst, align 1
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 2
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %14) #10
  %15 = getelementptr inbounds %"class.MARC::ThreadSafeMutexQueue.11", %"class.MARC::ThreadSafeMutexQueue.11"* %0, i64 0, i32 3
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %15) #10
  br label %16

16:                                               ; preds = %8, %13
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %17, label %20

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %2, i64 0, i32 0, i32 0
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %18) #10
  br label %20

20:                                               ; preds = %16, %17
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE17_M_reallocate_mapEmb(%"class.std::deque.14"*, i64, i1 zeroext) local_unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 3, i32 3
  %5 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %4, align 8, !tbaa !238
  %6 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 2, i32 3
  %7 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %6, align 8, !tbaa !86
  %8 = ptrtoint %"class.std::unique_ptr"** %5 to i64
  %9 = ptrtoint %"class.std::unique_ptr"** %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 3
  %12 = add nsw i64 %11, 1
  %13 = add i64 %12, %1
  %14 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !tbaa !229
  %16 = shl i64 %13, 1
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %18, label %43

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %19, align 8, !tbaa !230
  %21 = sub i64 %15, %13
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %20, i64 %22
  %24 = select i1 %2, i64 %1, i64 0
  %25 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %23, i64 %24
  %26 = icmp ult %"class.std::unique_ptr"** %25, %7
  %27 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %5, i64 1
  %28 = ptrtoint %"class.std::unique_ptr"** %27 to i64
  %29 = sub i64 %28, %9
  %30 = icmp eq i64 %29, 0
  br i1 %26, label %31, label %35

31:                                               ; preds = %18
  br i1 %30, label %72, label %32

32:                                               ; preds = %31
  %33 = bitcast %"class.std::unique_ptr"** %25 to i8*
  %34 = bitcast %"class.std::unique_ptr"** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 %29, i1 false) #10
  br label %72

35:                                               ; preds = %18
  br i1 %30, label %72, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %25, i64 %12
  %38 = ashr exact i64 %29, 3
  %39 = sub nsw i64 0, %38
  %40 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %37, i64 %39
  %41 = bitcast %"class.std::unique_ptr"** %40 to i8*
  %42 = bitcast %"class.std::unique_ptr"** %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 %29, i1 false) #10
  br label %72

43:                                               ; preds = %3
  %44 = icmp ult i64 %15, %1
  %45 = select i1 %44, i64 %1, i64 %15
  %46 = add i64 %15, 2
  %47 = add i64 %46, %45
  %48 = icmp ugt i64 %47, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %43
  tail call void @_ZSt17__throw_bad_allocv() #33
  unreachable

50:                                               ; preds = %43
  %51 = shl i64 %47, 3
  %52 = tail call i8* @_Znwm(i64 %51)
  %53 = bitcast i8* %52 to %"class.std::unique_ptr"**
  %54 = sub i64 %47, %13
  %55 = lshr i64 %54, 1
  %56 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %53, i64 %55
  %57 = select i1 %2, i64 %1, i64 0
  %58 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %56, i64 %57
  %59 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %6, align 8, !tbaa !86
  %60 = load %"class.std::unique_ptr"**, %"class.std::unique_ptr"*** %4, align 8, !tbaa !238
  %61 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %60, i64 1
  %62 = ptrtoint %"class.std::unique_ptr"** %61 to i64
  %63 = ptrtoint %"class.std::unique_ptr"** %59 to i64
  %64 = sub i64 %62, %63
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %50
  %67 = bitcast %"class.std::unique_ptr"** %58 to i8*
  %68 = bitcast %"class.std::unique_ptr"** %59 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 %68, i64 %64, i1 false) #10
  br label %69

69:                                               ; preds = %50, %66
  %70 = bitcast %"class.std::deque.14"* %0 to i8**
  %71 = load i8*, i8** %70, align 8, !tbaa !230
  tail call void @_ZdlPv(i8* %71) #10
  store i8* %52, i8** %70, align 8, !tbaa !230
  store i64 %47, i64* %14, align 8, !tbaa !229
  br label %72

72:                                               ; preds = %36, %35, %32, %31, %69
  %73 = phi %"class.std::unique_ptr"** [ %58, %69 ], [ %25, %31 ], [ %25, %32 ], [ %25, %35 ], [ %25, %36 ]
  store %"class.std::unique_ptr"** %73, %"class.std::unique_ptr"*** %6, align 8, !tbaa !65
  %74 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %73, align 8, !tbaa !72
  %75 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 2, i32 1
  store %"class.std::unique_ptr"* %74, %"class.std::unique_ptr"** %75, align 8, !tbaa !68
  %76 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %74, i64 64
  %77 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 2, i32 2
  store %"class.std::unique_ptr"* %76, %"class.std::unique_ptr"** %77, align 8, !tbaa !69
  %78 = getelementptr inbounds %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %73, i64 %11
  store %"class.std::unique_ptr"** %78, %"class.std::unique_ptr"*** %4, align 8, !tbaa !65
  %79 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %78, align 8, !tbaa !72
  %80 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 3, i32 1
  store %"class.std::unique_ptr"* %79, %"class.std::unique_ptr"** %80, align 8, !tbaa !68
  %81 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %79, i64 64
  %82 = getelementptr inbounds %"class.std::deque.14", %"class.std::deque.14"* %0, i64 0, i32 0, i32 0, i32 3, i32 2
  store %"class.std::unique_ptr"* %81, %"class.std::unique_ptr"** %82, align 8, !tbaa !69
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC15ThreadSafeQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEE10invalidateEv(%"class.MARC::ThreadSafeQueue.12"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.12", %"class.MARC::ThreadSafeQueue.12"* %0, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %2 seq_cst, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN4MARC10ThreadPoolD2Ev(%"class.MARC::ThreadPool"*) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4MARC10ThreadPoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store atomic i8 1, i8* %4 seq_cst, align 1
  %5 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 1
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %7, label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %6, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %8) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  invoke void @_ZSt20__throw_system_errori(i32 %9) #33
          to label %12 unwind label %58

12:                                               ; preds = %11
  unreachable

13:                                               ; preds = %7, %1
  %14 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %15 = load atomic i8, i8* %14 seq_cst, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  store atomic i8 0, i8* %14 seq_cst, align 1
  %19 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 2
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %19) #10
  %20 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 1, i32 3
  tail call void @_ZNSt18condition_variable10notify_allEv(%"class.std::condition_variable"* nonnull %20) #10
  br label %21

21:                                               ; preds = %18, %13
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %22, label %25

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.std::mutex", %"class.std::mutex"* %6, i64 0, i32 0, i32 0
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %23) #10
  br label %25

25:                                               ; preds = %22, %21
  %26 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 0, i32 3
  %27 = getelementptr inbounds %"class.MARC::ThreadPool", %"class.MARC::ThreadPool"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 1
  %28 = bitcast %"struct.std::atomic"*** %27 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !124
  %30 = bitcast %"class.std::vector.0"* %26 to i64*
  %31 = load i64, i64* %30, align 8, !tbaa !119
  %32 = icmp eq i64 %29, %31
  br i1 %32, label %.loopexit3, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %26, i64 0, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %.loopexit, %33
  %36 = phi i64 [ %31, %33 ], [ %54, %.loopexit ]
  %37 = phi i64 [ 0, %33 ], [ %52, %.loopexit ]
  %38 = inttoptr i64 %36 to %"struct.std::atomic"**
  %39 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %38, i64 %37
  %40 = load %"struct.std::atomic"*, %"struct.std::atomic"** %39, align 8, !tbaa !72
  %41 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %40, i64 0, i32 0, i32 0
  %42 = load atomic i8, i8* %41 seq_cst, align 1
  %43 = and i8 %42, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %35, %.preheader
  %45 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %34, align 8, !tbaa !119
  %46 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %45, i64 %37
  %47 = load %"struct.std::atomic"*, %"struct.std::atomic"** %46, align 8, !tbaa !72
  %48 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %47, i64 0, i32 0, i32 0
  %49 = load atomic i8, i8* %48 seq_cst, align 1
  %50 = and i8 %49, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %.loopexit, label %.preheader

.loopexit:                                        ; preds = %.preheader, %35
  %52 = add nuw i64 %37, 1
  %53 = load i64, i64* %28, align 8, !tbaa !124
  %54 = load i64, i64* %30, align 8, !tbaa !119
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 3
  %57 = icmp ugt i64 %56, %52
  br i1 %57, label %35, label %.loopexit3

.loopexit3:                                       ; preds = %.loopexit, %25
  tail call void @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEED2Ev(%"class.MARC::ThreadSafeMutexQueue.11"* nonnull %5) #10
  tail call void @_ZN4MARC19ThreadPoolInterfaceD2Ev(%"class.MARC::ThreadPoolInterface"* nonnull %3) #10
  ret void

58:                                               ; preds = %11
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  tail call void @_ZN4MARC20ThreadSafeMutexQueueISt10unique_ptrINS_11IThreadTaskESt14default_deleteIS2_EEED2Ev(%"class.MARC::ThreadSafeMutexQueue.11"* nonnull %5) #10
  tail call void @_ZN4MARC19ThreadPoolInterfaceD2Ev(%"class.MARC::ThreadPoolInterface"* %3) #10
  tail call void @__clang_call_terminate(i8* %60) #30
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC14ThreadPoolForCC2Ev(%"class.MARC::ThreadPoolForC"*) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::function", align 8
  %3 = tail call i32 @_ZNSt6thread20hardware_concurrencyEv() #10
  %4 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %4, align 8, !tbaa !184
  invoke void @_ZN4MARC14ThreadPoolForCC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolForC"* %0, i1 zeroext false, i32 undef, %"class.std::function"* nonnull %2)
          to label %5 unwind label %15

5:                                                ; preds = %1
  %6 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %4, align 8, !tbaa !184
  %7 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %10 = invoke zeroext i1 %6(%"union.std::_Any_data"* nonnull dereferenceable(16) %9, %"union.std::_Any_data"* nonnull dereferenceable(16) %9, i32 3)
          to label %14 unwind label %11

11:                                               ; preds = %8
  %12 = landingpad { i8*, i32 }
          catch i8* null
  %13 = extractvalue { i8*, i32 } %12, 0
  call void @__clang_call_terminate(i8* %13) #30
  unreachable

14:                                               ; preds = %5, %8
  ret void

15:                                               ; preds = %1
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %4, align 8, !tbaa !184
  %18 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %21 = invoke zeroext i1 %17(%"union.std::_Any_data"* nonnull dereferenceable(16) %20, %"union.std::_Any_data"* nonnull dereferenceable(16) %20, i32 3)
          to label %25 unwind label %22

22:                                               ; preds = %19
  %23 = landingpad { i8*, i32 }
          catch i8* null
  %24 = extractvalue { i8*, i32 } %23, 0
  call void @__clang_call_terminate(i8* %24) #30
  unreachable

25:                                               ; preds = %15, %19
  resume { i8*, i32 } %16
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC25ThreadPoolForCSingleQueueC2Ev(%"class.MARC::ThreadPoolForCSingleQueue"*) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::function", align 8
  %3 = tail call i32 @_ZNSt6thread20hardware_concurrencyEv() #10
  %4 = icmp ugt i32 %3, 2
  %5 = select i1 %4, i32 %3, i32 2
  %6 = add i32 %5, -1
  %7 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  invoke void @_ZN4MARC25ThreadPoolForCSingleQueueC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolForCSingleQueue"* %0, i1 zeroext false, i32 %6, %"class.std::function"* nonnull %2)
          to label %8 unwind label %18

8:                                                ; preds = %1
  %9 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %10 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %13 = invoke zeroext i1 %9(%"union.std::_Any_data"* nonnull dereferenceable(16) %12, %"union.std::_Any_data"* nonnull dereferenceable(16) %12, i32 3)
          to label %17 unwind label %14

14:                                               ; preds = %11
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  call void @__clang_call_terminate(i8* %16) #30
  unreachable

17:                                               ; preds = %8, %11
  ret void

18:                                               ; preds = %1
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %21 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %24 = invoke zeroext i1 %20(%"union.std::_Any_data"* nonnull dereferenceable(16) %23, %"union.std::_Any_data"* nonnull dereferenceable(16) %23, i32 3)
          to label %28 unwind label %25

25:                                               ; preds = %22
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  call void @__clang_call_terminate(i8* %27) #30
  unreachable

28:                                               ; preds = %18, %22
  resume { i8*, i32 } %19
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC25ThreadPoolForCMultiQueuesC2Ev(%"class.MARC::ThreadPoolForCMultiQueues"*) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::function", align 8
  %3 = tail call i32 @_ZNSt6thread20hardware_concurrencyEv() #10
  %4 = icmp ugt i32 %3, 2
  %5 = select i1 %4, i32 %3, i32 2
  %6 = add i32 %5, -1
  %7 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  invoke void @_ZN4MARC25ThreadPoolForCMultiQueuesC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolForCMultiQueues"* %0, i1 zeroext false, i32 %6, %"class.std::function"* nonnull %2)
          to label %8 unwind label %18

8:                                                ; preds = %1
  %9 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %10 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %13 = invoke zeroext i1 %9(%"union.std::_Any_data"* nonnull dereferenceable(16) %12, %"union.std::_Any_data"* nonnull dereferenceable(16) %12, i32 3)
          to label %17 unwind label %14

14:                                               ; preds = %11
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  call void @__clang_call_terminate(i8* %16) #30
  unreachable

17:                                               ; preds = %8, %11
  ret void

18:                                               ; preds = %1
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %21 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::function", %"class.std::function"* %2, i64 0, i32 0, i32 0
  %24 = invoke zeroext i1 %20(%"union.std::_Any_data"* nonnull dereferenceable(16) %23, %"union.std::_Any_data"* nonnull dereferenceable(16) %23, i32 3)
          to label %28 unwind label %25

25:                                               ; preds = %22
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  call void @__clang_call_terminate(i8* %27) #30
  unreachable

28:                                               ; preds = %18, %22
  resume { i8*, i32 } %19
}

; Function Attrs: uwtable
define dso_local void @_ZN4MARC25ThreadPoolForCMultiQueuesC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolForCMultiQueues"*, i1 zeroext, i32, %"class.std::function"*) unnamed_addr #14 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::function", align 8
  %6 = bitcast %"class.MARC::ThreadPoolForCMultiQueues"* %0 to %"class.MARC::ThreadPoolForC"*
  %7 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %8 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 1
  %9 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %8, align 8, !tbaa !184
  %10 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %9, null
  br i1 %10, label %29, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::function", %"class.std::function"* %3, i64 0, i32 0, i32 0
  %14 = invoke zeroext i1 %9(%"union.std::_Any_data"* nonnull dereferenceable(16) %12, %"union.std::_Any_data"* nonnull dereferenceable(16) %13, i32 2)
          to label %15 unwind label %19

15:                                               ; preds = %11
  %16 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %8 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8, !tbaa !72
  %18 = bitcast i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 8, !tbaa !72
  br label %29

19:                                               ; preds = %11
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %22 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = invoke zeroext i1 %21(%"union.std::_Any_data"* nonnull dereferenceable(16) %12, %"union.std::_Any_data"* nonnull dereferenceable(16) %12, i32 3)
          to label %28 unwind label %25

25:                                               ; preds = %23
  %26 = landingpad { i8*, i32 }
          catch i8* null
  %27 = extractvalue { i8*, i32 } %26, 0
  call void @__clang_call_terminate(i8* %27) #30
  unreachable

28:                                               ; preds = %23, %19
  resume { i8*, i32 } %20

29:                                               ; preds = %4, %15
  invoke void @_ZN4MARC14ThreadPoolForCC2EbjSt8functionIFvvEE(%"class.MARC::ThreadPoolForC"* %6, i1 zeroext %1, i32 undef, %"class.std::function"* nonnull %5)
          to label %30 unwind label %52

30:                                               ; preds = %29
  %31 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %32 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %35 = invoke zeroext i1 %31(%"union.std::_Any_data"* nonnull dereferenceable(16) %34, %"union.std::_Any_data"* nonnull dereferenceable(16) %34, i32 3)
          to label %39 unwind label %36

36:                                               ; preds = %33
  %37 = landingpad { i8*, i32 }
          catch i8* null
  %38 = extractvalue { i8*, i32 } %37, 0
  call void @__clang_call_terminate(i8* %38) #30
  unreachable

39:                                               ; preds = %30, %33
  %40 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC25ThreadPoolForCMultiQueuesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8, !tbaa !73
  %41 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 2
  %42 = bitcast %"class.std::vector.35"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #10
  %43 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 3
  %44 = call i32 @pthread_spin_init(i32* nonnull %43, i32 0) #10
  %45 = icmp eq i32 %2, 0
  br i1 %45, label %.loopexit, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %49 = bitcast %"class.std::vector.35"* %41 to i64*
  %50 = bitcast %"class.std::vector.35"* %41 to i8**
  br label %64

.loopexit:                                        ; preds = %116, %39
  %51 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 0
  invoke void @_ZN4MARC19ThreadPoolInterface10newThreadsEj(%"class.MARC::ThreadPoolInterface"* %51, i32 %2)
          to label %137 unwind label %129

52:                                               ; preds = %29
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  %56 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %7, align 8, !tbaa !184
  %57 = icmp eq i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %56, null
  br i1 %57, label %154, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.std::function", %"class.std::function"* %5, i64 0, i32 0, i32 0
  %60 = invoke zeroext i1 %56(%"union.std::_Any_data"* nonnull dereferenceable(16) %59, %"union.std::_Any_data"* nonnull dereferenceable(16) %59, i32 3)
          to label %154 unwind label %61

61:                                               ; preds = %58
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  call void @__clang_call_terminate(i8* %63) #30
  unreachable

64:                                               ; preds = %116, %46
  %65 = phi i32 [ 0, %46 ], [ %119, %116 ]
  %66 = invoke i8* @_Znwm(i64 96) #34
          to label %67 unwind label %121

67:                                               ; preds = %64
  %68 = bitcast i8* %66 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIPNS_11ThreadCTaskEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8, !tbaa !73
  %69 = getelementptr inbounds i8, i8* %66, i64 8
  %70 = bitcast i8* %69 to %"class.std::_Deque_base.32"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 80, i1 false) #10
  invoke void @_ZNSt11_Deque_baseIPN4MARC11ThreadCTaskESaIS2_EE17_M_initialize_mapEm(%"class.std::_Deque_base.32"* nonnull %70, i64 0)
          to label %71 unwind label %125

71:                                               ; preds = %67
  %72 = getelementptr inbounds i8, i8* %66, i64 88
  store i8 1, i8* %72, align 1, !tbaa !123
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8, !tbaa !73
  %73 = getelementptr inbounds i8, i8* %66, i64 92
  %74 = bitcast i8* %73 to i32*
  %75 = call i32 @pthread_spin_init(i32* nonnull %74, i32 0) #10
  %76 = ptrtoint i8* %66 to i64
  %77 = load %"class.MARC::ThreadSafeSpinLockQueue"**, %"class.MARC::ThreadSafeSpinLockQueue"*** %47, align 8, !tbaa !176
  %78 = load %"class.MARC::ThreadSafeSpinLockQueue"**, %"class.MARC::ThreadSafeSpinLockQueue"*** %48, align 8, !tbaa !243
  %79 = icmp eq %"class.MARC::ThreadSafeSpinLockQueue"** %77, %78
  br i1 %79, label %84, label %80

80:                                               ; preds = %71
  %81 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %77 to i64*
  store i64 %76, i64* %81, align 8, !tbaa !72
  %82 = load %"class.MARC::ThreadSafeSpinLockQueue"**, %"class.MARC::ThreadSafeSpinLockQueue"*** %47, align 8, !tbaa !176
  %83 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %82, i64 1
  br label %116

84:                                               ; preds = %71
  %85 = ptrtoint %"class.MARC::ThreadSafeSpinLockQueue"** %77 to i64
  %86 = load i64, i64* %49, align 8, !tbaa !173
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = icmp eq i64 %87, 0
  %90 = select i1 %89, i64 1, i64 %88
  %91 = add nsw i64 %90, %88
  %92 = icmp ult i64 %91, %88
  %93 = icmp ugt i64 %91, 2305843009213693951
  %94 = or i1 %92, %93
  %95 = select i1 %94, i64 2305843009213693951, i64 %91
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %84
  %98 = shl i64 %95, 3
  %99 = invoke i8* @_Znwm(i64 %98)
          to label %100 unwind label %121

100:                                              ; preds = %97
  %101 = bitcast i8* %99 to %"class.MARC::ThreadSafeSpinLockQueue"**
  br label %102

102:                                              ; preds = %100, %84
  %103 = phi i8* [ %99, %100 ], [ null, %84 ]
  %104 = phi %"class.MARC::ThreadSafeSpinLockQueue"** [ %101, %100 ], [ null, %84 ]
  %105 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %104, i64 %88
  %106 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %105 to i64*
  store i64 %76, i64* %106, align 8, !tbaa !72
  br i1 %89, label %109, label %107

107:                                              ; preds = %102
  %108 = inttoptr i64 %86 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %108, i64 %87, i1 false) #10
  br label %109

109:                                              ; preds = %107, %102
  %110 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %105, i64 1
  %111 = icmp eq i64 %86, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  %113 = inttoptr i64 %86 to i8*
  call void @_ZdlPv(i8* nonnull %113) #10
  br label %114

114:                                              ; preds = %112, %109
  store i8* %103, i8** %50, align 8, !tbaa !173
  store %"class.MARC::ThreadSafeSpinLockQueue"** %110, %"class.MARC::ThreadSafeSpinLockQueue"*** %47, align 8, !tbaa !176
  %115 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %104, i64 %95
  br label %116

116:                                              ; preds = %114, %80
  %117 = phi %"class.MARC::ThreadSafeSpinLockQueue"*** [ %48, %114 ], [ %47, %80 ]
  %118 = phi %"class.MARC::ThreadSafeSpinLockQueue"** [ %115, %114 ], [ %83, %80 ]
  store %"class.MARC::ThreadSafeSpinLockQueue"** %118, %"class.MARC::ThreadSafeSpinLockQueue"*** %117, align 8, !tbaa !72
  %119 = add nuw i32 %65, 1
  %120 = icmp eq i32 %119, %2
  br i1 %120, label %.loopexit, label %64

121:                                              ; preds = %97, %64
  %122 = landingpad { i8*, i32 }
          cleanup
  %123 = extractvalue { i8*, i32 } %122, 0
  %124 = extractvalue { i8*, i32 } %122, 1
  br label %138

125:                                              ; preds = %67
  %126 = landingpad { i8*, i32 }
          cleanup
  %127 = extractvalue { i8*, i32 } %126, 0
  %128 = extractvalue { i8*, i32 } %126, 1
  call void @_ZdlPv(i8* nonnull %66) #32
  br label %138

129:                                              ; preds = %.loopexit
  %130 = landingpad { i8*, i32 }
          catch i8* null
  %131 = extractvalue { i8*, i32 } %130, 0
  %132 = call i8* @__cxa_begin_catch(i8* %131) #10
  invoke void @__cxa_rethrow() #33
          to label %162 unwind label %133

133:                                              ; preds = %129
  %134 = landingpad { i8*, i32 }
          cleanup
  %135 = extractvalue { i8*, i32 } %134, 0
  %136 = extractvalue { i8*, i32 } %134, 1
  invoke void @__cxa_end_catch()
          to label %138 unwind label %159

137:                                              ; preds = %.loopexit
  ret void

138:                                              ; preds = %121, %125, %133
  %139 = phi i8* [ %135, %133 ], [ %123, %121 ], [ %127, %125 ]
  %140 = phi i32 [ %136, %133 ], [ %124, %121 ], [ %128, %125 ]
  %141 = getelementptr inbounds %"class.std::vector.35", %"class.std::vector.35"* %41, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.MARC::ThreadSafeSpinLockQueue"**, %"class.MARC::ThreadSafeSpinLockQueue"*** %141, align 8, !tbaa !173
  %143 = icmp eq %"class.MARC::ThreadSafeSpinLockQueue"** %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %142 to i8*
  call void @_ZdlPv(i8* nonnull %145) #10
  br label %146

146:                                              ; preds = %138, %144
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC14ThreadPoolForCE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8, !tbaa !73
  %147 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %148 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %147, align 8, !tbaa !96
  %149 = icmp eq %"class.MARC::ThreadCTask"** %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  %151 = bitcast %"class.MARC::ThreadCTask"** %148 to i8*
  call void @_ZdlPv(i8* nonnull %151) #10
  br label %152

152:                                              ; preds = %146, %150
  %153 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 0
  call void @_ZN4MARC19ThreadPoolInterfaceD2Ev(%"class.MARC::ThreadPoolInterface"* %153) #10
  br label %154

154:                                              ; preds = %58, %52, %152
  %155 = phi i8* [ %139, %152 ], [ %54, %52 ], [ %54, %58 ]
  %156 = phi i32 [ %140, %152 ], [ %55, %52 ], [ %55, %58 ]
  %157 = insertvalue { i8*, i32 } undef, i8* %155, 0
  %158 = insertvalue { i8*, i32 } %157, i32 %156, 1
  resume { i8*, i32 } %158

159:                                              ; preds = %133
  %160 = landingpad { i8*, i32 }
          catch i8* null
  %161 = extractvalue { i8*, i32 } %160, 0
  call void @__clang_call_terminate(i8* %161) #30
  unreachable

162:                                              ; preds = %129
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE6tryPopERS2_(%"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadCTask"** dereferenceable(8)) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 1
  %4 = tail call i32 @pthread_spin_lock(i32* nonnull %3) #10
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %6 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %5, align 8, !tbaa !89
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %8 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %7, align 8, !tbaa !89
  %9 = icmp eq %"class.MARC::ThreadCTask"** %6, %8
  br i1 %9, label %39, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load atomic i8, i8* %11 seq_cst, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.MARC::ThreadCTask"*** %7 to i64**
  %17 = load i64*, i64** %16, align 8, !tbaa !89, !noalias !244
  %18 = load i64, i64* %17, align 8, !tbaa !72
  %19 = bitcast %"class.MARC::ThreadCTask"** %1 to i64*
  store i64 %18, i64* %19, align 8, !tbaa !72
  %20 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %7, align 8, !tbaa !170
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %22 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %21, align 8, !tbaa !171
  %23 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %22, i64 -1
  %24 = icmp eq %"class.MARC::ThreadCTask"** %20, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %20, i64 1
  store %"class.MARC::ThreadCTask"** %26, %"class.MARC::ThreadCTask"*** %7, align 8, !tbaa !170
  br label %39

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %30 = bitcast %"class.MARC::ThreadCTask"*** %29 to i8**
  %31 = load i8*, i8** %30, align 8, !tbaa !172
  tail call void @_ZdlPv(i8* %31) #10
  %32 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %33 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %32, align 8, !tbaa !166
  %34 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %33, i64 1
  store %"class.MARC::ThreadCTask"*** %34, %"class.MARC::ThreadCTask"**** %32, align 8, !tbaa !87
  %35 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %34, align 8, !tbaa !72
  store %"class.MARC::ThreadCTask"** %35, %"class.MARC::ThreadCTask"*** %29, align 8, !tbaa !90
  %36 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %35, i64 64
  store %"class.MARC::ThreadCTask"** %36, %"class.MARC::ThreadCTask"*** %21, align 8, !tbaa !91
  %37 = ptrtoint %"class.MARC::ThreadCTask"** %35 to i64
  %38 = bitcast %"struct.std::_Deque_iterator.33"* %28 to i64*
  store i64 %37, i64* %38, align 8, !tbaa !170
  br label %39

39:                                               ; preds = %27, %25, %2, %10
  %40 = phi i1 [ false, %10 ], [ false, %2 ], [ true, %25 ], [ true, %27 ]
  %41 = tail call i32 @pthread_spin_unlock(i32* nonnull %3) #10
  ret i1 %40
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE7waitPopEv(%"class.MARC::ThreadSafeSpinLockQueue"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %46, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  br label %9

9:                                                ; preds = %6, %13
  %10 = load atomic i8, i8* %2 seq_cst, align 1
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %7, align 8, !tbaa !89
  %15 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %8, align 8, !tbaa !89
  %16 = icmp eq %"class.MARC::ThreadCTask"** %14, %15
  br i1 %16, label %9, label %17

17:                                               ; preds = %9, %13
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 1
  %19 = tail call i32 @pthread_spin_lock(i32* nonnull %18) #10
  %20 = load atomic i8, i8* %2 seq_cst, align 1
  %21 = and i8 %20, 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %43, label %23

23:                                               ; preds = %17
  %24 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %8, align 8, !tbaa !170
  %25 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %26 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %25, align 8, !tbaa !171
  %27 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %26, i64 -1
  %28 = icmp eq %"class.MARC::ThreadCTask"** %24, %27
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %24, i64 1
  store %"class.MARC::ThreadCTask"** %30, %"class.MARC::ThreadCTask"*** %8, align 8, !tbaa !170
  br label %43

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %34 = bitcast %"class.MARC::ThreadCTask"*** %33 to i8**
  %35 = load i8*, i8** %34, align 8, !tbaa !172
  tail call void @_ZdlPv(i8* %35) #10
  %36 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %37 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %36, align 8, !tbaa !166
  %38 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %37, i64 1
  store %"class.MARC::ThreadCTask"*** %38, %"class.MARC::ThreadCTask"**** %36, align 8, !tbaa !87
  %39 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %38, align 8, !tbaa !72
  store %"class.MARC::ThreadCTask"** %39, %"class.MARC::ThreadCTask"*** %33, align 8, !tbaa !90
  %40 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %39, i64 64
  store %"class.MARC::ThreadCTask"** %40, %"class.MARC::ThreadCTask"*** %25, align 8, !tbaa !91
  %41 = ptrtoint %"class.MARC::ThreadCTask"** %39 to i64
  %42 = bitcast %"struct.std::_Deque_iterator.33"* %32 to i64*
  store i64 %41, i64* %42, align 8, !tbaa !170
  br label %43

43:                                               ; preds = %31, %29, %17
  %44 = phi i1 [ false, %17 ], [ true, %29 ], [ true, %31 ]
  %45 = tail call i32 @pthread_spin_unlock(i32* nonnull %18) #10
  br label %46

46:                                               ; preds = %43, %1
  %47 = phi i1 [ false, %1 ], [ %44, %43 ]
  ret i1 %47
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE4pushES2_(%"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadCTask"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = ptrtoint %"class.MARC::ThreadCTask"* %1 to i64
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 1
  %5 = tail call i32 @pthread_spin_lock(i32* nonnull %4) #10
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::queue.30", %"class.std::queue.30"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %9 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %8, align 8, !tbaa !99
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 2
  %11 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %10, align 8, !tbaa !102
  %12 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %11, i64 -1
  %13 = icmp eq %"class.MARC::ThreadCTask"** %9, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.MARC::ThreadCTask"** %9 to i64*
  store i64 %3, i64* %15, align 8, !tbaa !72
  %16 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %8, align 8, !tbaa !99
  %17 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %16, i64 1
  store %"class.MARC::ThreadCTask"** %17, %"class.MARC::ThreadCTask"*** %8, align 8, !tbaa !99
  br label %46

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8, !tbaa !103
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %22 = bitcast %"class.MARC::ThreadCTask"**** %21 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !104
  %24 = bitcast %"class.std::queue.30"* %6 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !105
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 3
  %28 = sub i64 %20, %27
  %29 = icmp ult i64 %28, 2
  br i1 %29, label %30, label %31

30:                                               ; preds = %18
  tail call void @_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE17_M_reallocate_mapEmb(%"class.std::deque.31"* nonnull %7, i64 1, i1 zeroext false)
  br label %31

31:                                               ; preds = %30, %18
  %32 = tail call i8* @_Znwm(i64 512)
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %34 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %21, align 8, !tbaa !104
  %35 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %34, i64 1
  %36 = bitcast %"class.MARC::ThreadCTask"*** %35 to i8**
  store i8* %32, i8** %36, align 8, !tbaa !72
  %37 = bitcast %"struct.std::_Deque_iterator.33"* %33 to i64**
  %38 = load i64*, i64** %37, align 8, !tbaa !99
  store i64 %3, i64* %38, align 8, !tbaa !72
  %39 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %21, align 8, !tbaa !104
  %40 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %39, i64 1
  store %"class.MARC::ThreadCTask"*** %40, %"class.MARC::ThreadCTask"**** %21, align 8, !tbaa !87
  %41 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %40, align 8, !tbaa !72
  %42 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  store %"class.MARC::ThreadCTask"** %41, %"class.MARC::ThreadCTask"*** %42, align 8, !tbaa !90
  %43 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %41, i64 64
  store %"class.MARC::ThreadCTask"** %43, %"class.MARC::ThreadCTask"*** %10, align 8, !tbaa !91
  %44 = ptrtoint %"class.MARC::ThreadCTask"** %41 to i64
  %45 = bitcast %"struct.std::_Deque_iterator.33"* %33 to i64*
  store i64 %44, i64* %45, align 8, !tbaa !99
  br label %46

46:                                               ; preds = %14, %31
  %47 = tail call i32 @pthread_spin_unlock(i32* nonnull %4) #10
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE8waitPushES2_l(%"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadCTask"*, i64) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = ptrtoint %"class.MARC::ThreadCTask"* %1 to i64
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 1
  %6 = tail call i32 @pthread_spin_lock(i32* nonnull %5) #10
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %11 = bitcast %"class.MARC::ThreadCTask"**** %10 to i64*
  %12 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %13 = bitcast %"class.MARC::ThreadCTask"**** %12 to i64*
  %14 = bitcast %"struct.std::_Deque_iterator.33"* %8 to i64*
  %15 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %16 = bitcast %"class.MARC::ThreadCTask"*** %15 to i64*
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %18 = bitcast %"class.MARC::ThreadCTask"*** %17 to i64*
  %19 = bitcast %"struct.std::_Deque_iterator.33"* %9 to i64*
  br label %20

20:                                               ; preds = %41, %3
  %21 = load i64, i64* %11, align 8, !tbaa !87
  %22 = load i64, i64* %13, align 8, !tbaa !87
  %23 = sub i64 %21, %22
  %24 = shl i64 %23, 3
  %25 = add i64 %24, -64
  %26 = load i64, i64* %14, align 8, !tbaa !89
  %27 = load i64, i64* %16, align 8, !tbaa !90
  %28 = sub i64 %26, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %25, %29
  %31 = load i64, i64* %18, align 8, !tbaa !91
  %32 = load i64, i64* %19, align 8, !tbaa !89
  %33 = sub i64 %31, %32
  %34 = ashr exact i64 %33, 3
  %35 = add nsw i64 %30, %34
  %36 = icmp ult i64 %35, %2
  br i1 %36, label %44, label %37

37:                                               ; preds = %20
  %38 = load atomic i8, i8* %7 seq_cst, align 1
  %39 = and i8 %38, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = tail call i32 @pthread_spin_unlock(i32* nonnull %5) #10
  %43 = tail call i32 @pthread_spin_lock(i32* nonnull %5) #10
  br label %20

44:                                               ; preds = %37, %20
  %45 = load atomic i8, i8* %7 seq_cst, align 1
  %46 = and i8 %45, 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %84, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.std::queue.30", %"class.std::queue.30"* %49, i64 0, i32 0
  %51 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %52 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %51, align 8, !tbaa !99
  %53 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 2
  %54 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %53, align 8, !tbaa !102
  %55 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %54, i64 -1
  %56 = icmp eq %"class.MARC::ThreadCTask"** %52, %55
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast %"class.MARC::ThreadCTask"** %52 to i64*
  store i64 %4, i64* %58, align 8, !tbaa !72
  %59 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %51, align 8, !tbaa !99
  %60 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %59, i64 1
  store %"class.MARC::ThreadCTask"** %60, %"class.MARC::ThreadCTask"*** %51, align 8, !tbaa !99
  br label %84

61:                                               ; preds = %48
  %62 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8, !tbaa !103
  %64 = load i64, i64* %11, align 8, !tbaa !104
  %65 = bitcast %"class.std::queue.30"* %49 to i64*
  %66 = load i64, i64* %65, align 8, !tbaa !105
  %67 = sub i64 %64, %66
  %68 = ashr exact i64 %67, 3
  %69 = sub i64 %63, %68
  %70 = icmp ult i64 %69, 2
  br i1 %70, label %71, label %72

71:                                               ; preds = %61
  tail call void @_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE17_M_reallocate_mapEmb(%"class.std::deque.31"* nonnull %50, i64 1, i1 zeroext false)
  br label %72

72:                                               ; preds = %71, %61
  %73 = tail call i8* @_Znwm(i64 512)
  %74 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %10, align 8, !tbaa !104
  %75 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %74, i64 1
  %76 = bitcast %"class.MARC::ThreadCTask"*** %75 to i8**
  store i8* %73, i8** %76, align 8, !tbaa !72
  %77 = bitcast %"struct.std::_Deque_iterator.33"* %8 to i64**
  %78 = load i64*, i64** %77, align 8, !tbaa !99
  store i64 %4, i64* %78, align 8, !tbaa !72
  %79 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %10, align 8, !tbaa !104
  %80 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %79, i64 1
  store %"class.MARC::ThreadCTask"*** %80, %"class.MARC::ThreadCTask"**** %10, align 8, !tbaa !87
  %81 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %80, align 8, !tbaa !72
  store %"class.MARC::ThreadCTask"** %81, %"class.MARC::ThreadCTask"*** %15, align 8, !tbaa !90
  %82 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %81, i64 64
  store %"class.MARC::ThreadCTask"** %82, %"class.MARC::ThreadCTask"*** %53, align 8, !tbaa !91
  %83 = ptrtoint %"class.MARC::ThreadCTask"** %81 to i64
  store i64 %83, i64* %14, align 8, !tbaa !99
  br label %84

84:                                               ; preds = %72, %57, %44
  %85 = phi i1 [ false, %44 ], [ true, %57 ], [ true, %72 ]
  %86 = tail call i32 @pthread_spin_unlock(i32* nonnull %5) #10
  ret i1 %85
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE5clearEv(%"class.MARC::ThreadSafeSpinLockQueue"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 1
  %3 = tail call i32 @pthread_spin_lock(i32* nonnull %2) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %5 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %4, align 8, !tbaa !89
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %7 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %6, align 8, !tbaa !89
  %8 = icmp eq %"class.MARC::ThreadCTask"** %5, %7
  br i1 %8, label %.loopexit, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 1
  %13 = bitcast %"class.MARC::ThreadCTask"*** %12 to i8**
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %15 = bitcast %"struct.std::_Deque_iterator.33"* %11 to i64*
  %16 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %10, align 8, !tbaa !171
  br label %17

17:                                               ; preds = %9, %33
  %18 = phi %"class.MARC::ThreadCTask"** [ %5, %9 ], [ %35, %33 ]
  %19 = phi %"class.MARC::ThreadCTask"** [ %16, %9 ], [ %36, %33 ]
  %20 = phi %"class.MARC::ThreadCTask"** [ %7, %9 ], [ %34, %33 ]
  %21 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %19, i64 -1
  %22 = icmp eq %"class.MARC::ThreadCTask"** %20, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %20, i64 1
  store %"class.MARC::ThreadCTask"** %24, %"class.MARC::ThreadCTask"*** %6, align 8, !tbaa !170
  br label %33

25:                                               ; preds = %17
  %26 = load i8*, i8** %13, align 8, !tbaa !172
  tail call void @_ZdlPv(i8* %26) #10
  %27 = load %"class.MARC::ThreadCTask"***, %"class.MARC::ThreadCTask"**** %14, align 8, !tbaa !166
  %28 = getelementptr inbounds %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %27, i64 1
  store %"class.MARC::ThreadCTask"*** %28, %"class.MARC::ThreadCTask"**** %14, align 8, !tbaa !87
  %29 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %28, align 8, !tbaa !72
  store %"class.MARC::ThreadCTask"** %29, %"class.MARC::ThreadCTask"*** %12, align 8, !tbaa !90
  %30 = getelementptr inbounds %"class.MARC::ThreadCTask"*, %"class.MARC::ThreadCTask"** %29, i64 64
  store %"class.MARC::ThreadCTask"** %30, %"class.MARC::ThreadCTask"*** %10, align 8, !tbaa !91
  %31 = ptrtoint %"class.MARC::ThreadCTask"** %29 to i64
  store i64 %31, i64* %15, align 8, !tbaa !170
  %32 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %4, align 8, !tbaa !89
  br label %33

33:                                               ; preds = %23, %25
  %34 = phi %"class.MARC::ThreadCTask"** [ %24, %23 ], [ %29, %25 ]
  %35 = phi %"class.MARC::ThreadCTask"** [ %18, %23 ], [ %32, %25 ]
  %36 = phi %"class.MARC::ThreadCTask"** [ %19, %23 ], [ %30, %25 ]
  %37 = icmp eq %"class.MARC::ThreadCTask"** %35, %34
  br i1 %37, label %.loopexit, label %17

.loopexit:                                        ; preds = %33, %1
  %38 = tail call i32 @pthread_spin_unlock(i32* nonnull %2) #10
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE5emptyEv(%"class.MARC::ThreadSafeSpinLockQueue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 1
  %3 = tail call i32 @pthread_spin_lock(i32* nonnull %2) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 0
  %5 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %4, align 8, !tbaa !89
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %7 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %6, align 8, !tbaa !89
  %8 = icmp eq %"class.MARC::ThreadCTask"** %5, %7
  %9 = tail call i32 @pthread_spin_unlock(i32* nonnull %2) #10
  ret i1 %8
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK4MARC23ThreadSafeSpinLockQueueIPNS_11ThreadCTaskEE4sizeEv(%"class.MARC::ThreadSafeSpinLockQueue"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 1
  %3 = tail call i32 @pthread_spin_lock(i32* nonnull %2) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %7 = bitcast %"class.MARC::ThreadCTask"**** %6 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !87
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %10 = bitcast %"class.MARC::ThreadCTask"**** %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !87
  %12 = sub i64 %8, %11
  %13 = shl i64 %12, 3
  %14 = add i64 %13, -64
  %15 = bitcast %"struct.std::_Deque_iterator.33"* %4 to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !89
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 1
  %18 = bitcast %"class.MARC::ThreadCTask"*** %17 to i64*
  %19 = load i64, i64* %18, align 8, !tbaa !90
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %14, %21
  %23 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue", %"class.MARC::ThreadSafeSpinLockQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 2
  %24 = bitcast %"class.MARC::ThreadCTask"*** %23 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !91
  %26 = bitcast %"struct.std::_Deque_iterator.33"* %5 to i64*
  %27 = load i64, i64* %26, align 8, !tbaa !89
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %22, %29
  %31 = tail call i32 @pthread_spin_unlock(i32* nonnull %2) #10
  ret i64 %30
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN4MARC25ThreadPoolForCMultiQueuesD2Ev(%"class.MARC::ThreadPoolForCMultiQueues"*) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC25ThreadPoolForCMultiQueuesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store atomic i8 1, i8* %3 seq_cst, align 1
  %4 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 3
  %5 = tail call i32 @pthread_spin_lock(i32* nonnull %4) #10
  %6 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.MARC::ThreadSafeSpinLockQueue"**, %"class.MARC::ThreadSafeSpinLockQueue"*** %6, align 8, !tbaa !72
  %8 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = load %"class.MARC::ThreadSafeSpinLockQueue"**, %"class.MARC::ThreadSafeSpinLockQueue"*** %8, align 8, !tbaa !72
  %10 = icmp eq %"class.MARC::ThreadSafeSpinLockQueue"** %7, %9
  br i1 %10, label %.loopexit9, label %11

11:                                               ; preds = %1
  %12 = ptrtoint %"class.MARC::ThreadSafeSpinLockQueue"** %7 to i64
  %13 = getelementptr %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %9, i64 -1
  %14 = ptrtoint %"class.MARC::ThreadSafeSpinLockQueue"** %13 to i64
  %15 = sub i64 %14, %12
  %16 = lshr i64 %15, 3
  %17 = add nuw nsw i64 %16, 1
  %18 = and i64 %17, 7
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %.loopexit11, label %.preheader10

.preheader10:                                     ; preds = %11, %.preheader10
  %20 = phi %"class.MARC::ThreadSafeSpinLockQueue"** [ %25, %.preheader10 ], [ %7, %11 ]
  %21 = phi i64 [ %26, %.preheader10 ], [ %18, %11 ]
  %22 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %20 to %"class.MARC::ThreadSafeQueue.29"**
  %23 = load %"class.MARC::ThreadSafeQueue.29"*, %"class.MARC::ThreadSafeQueue.29"** %22, align 8, !tbaa !72
  %24 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %23, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %24 seq_cst, align 1
  %25 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %20, i64 1
  %26 = add nsw i64 %21, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %.loopexit11, label %.preheader10, !llvm.loop !247

.loopexit11:                                      ; preds = %.preheader10, %11
  %28 = phi %"class.MARC::ThreadSafeSpinLockQueue"** [ %7, %11 ], [ %25, %.preheader10 ]
  %29 = icmp ult i64 %15, 56
  br i1 %29, label %.loopexit9, label %.preheader8

.loopexit9:                                       ; preds = %.preheader8, %.loopexit11, %1
  %30 = tail call i32 @pthread_spin_unlock(i32* nonnull %4) #10
  %31 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 0, i32 3
  %32 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 1
  %33 = bitcast %"struct.std::atomic"*** %32 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !124
  %35 = bitcast %"class.std::vector.0"* %31 to i64*
  %36 = load i64, i64* %35, align 8, !tbaa !119
  %37 = icmp eq i64 %34, %36
  br i1 %37, label %.loopexit7, label %38

38:                                               ; preds = %.loopexit9
  %39 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %31, i64 0, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %.loopexit, %38
  %41 = phi i64 [ %36, %38 ], [ %59, %.loopexit ]
  %42 = phi i64 [ 0, %38 ], [ %57, %.loopexit ]
  %43 = inttoptr i64 %41 to %"struct.std::atomic"**
  %44 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %43, i64 %42
  %45 = load %"struct.std::atomic"*, %"struct.std::atomic"** %44, align 8, !tbaa !72
  %46 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %45, i64 0, i32 0, i32 0
  %47 = load atomic i8, i8* %46 seq_cst, align 1
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %40, %.preheader
  %50 = load %"struct.std::atomic"**, %"struct.std::atomic"*** %39, align 8, !tbaa !119
  %51 = getelementptr inbounds %"struct.std::atomic"*, %"struct.std::atomic"** %50, i64 %42
  %52 = load %"struct.std::atomic"*, %"struct.std::atomic"** %51, align 8, !tbaa !72
  %53 = getelementptr inbounds %"struct.std::atomic", %"struct.std::atomic"* %52, i64 0, i32 0, i32 0
  %54 = load atomic i8, i8* %53 seq_cst, align 1
  %55 = and i8 %54, 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %.loopexit, label %.preheader

.loopexit:                                        ; preds = %.preheader, %40
  %57 = add nuw i64 %42, 1
  %58 = load i64, i64* %33, align 8, !tbaa !124
  %59 = load i64, i64* %35, align 8, !tbaa !119
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, %57
  br i1 %62, label %40, label %.loopexit7

.loopexit7:                                       ; preds = %.loopexit, %.loopexit9
  %63 = load %"class.MARC::ThreadSafeSpinLockQueue"**, %"class.MARC::ThreadSafeSpinLockQueue"*** %6, align 8, !tbaa !173
  %64 = icmp eq %"class.MARC::ThreadSafeSpinLockQueue"** %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %.loopexit7
  %66 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %63 to i8*
  tail call void @_ZdlPv(i8* nonnull %66) #10
  br label %67

67:                                               ; preds = %.loopexit7, %65
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4MARC14ThreadPoolForCE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %68 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.MARC::ThreadCTask"**, %"class.MARC::ThreadCTask"*** %68, align 8, !tbaa !96
  %70 = icmp eq %"class.MARC::ThreadCTask"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.MARC::ThreadCTask"** %69 to i8*
  tail call void @_ZdlPv(i8* nonnull %72) #10
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.MARC::ThreadPoolForCMultiQueues", %"class.MARC::ThreadPoolForCMultiQueues"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4MARC19ThreadPoolInterfaceD2Ev(%"class.MARC::ThreadPoolInterface"* %74) #10
  ret void

.preheader8:                                      ; preds = %.loopexit11, %.preheader8
  %75 = phi %"class.MARC::ThreadSafeSpinLockQueue"** [ %107, %.preheader8 ], [ %28, %.loopexit11 ]
  %76 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %75 to %"class.MARC::ThreadSafeQueue.29"**
  %77 = load %"class.MARC::ThreadSafeQueue.29"*, %"class.MARC::ThreadSafeQueue.29"** %76, align 8, !tbaa !72
  %78 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %77, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %78 seq_cst, align 1
  %79 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %75, i64 1
  %80 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %79 to %"class.MARC::ThreadSafeQueue.29"**
  %81 = load %"class.MARC::ThreadSafeQueue.29"*, %"class.MARC::ThreadSafeQueue.29"** %80, align 8, !tbaa !72
  %82 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %81, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %82 seq_cst, align 1
  %83 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %75, i64 2
  %84 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %83 to %"class.MARC::ThreadSafeQueue.29"**
  %85 = load %"class.MARC::ThreadSafeQueue.29"*, %"class.MARC::ThreadSafeQueue.29"** %84, align 8, !tbaa !72
  %86 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %85, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %86 seq_cst, align 1
  %87 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %75, i64 3
  %88 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %87 to %"class.MARC::ThreadSafeQueue.29"**
  %89 = load %"class.MARC::ThreadSafeQueue.29"*, %"class.MARC::ThreadSafeQueue.29"** %88, align 8, !tbaa !72
  %90 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %89, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %90 seq_cst, align 1
  %91 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %75, i64 4
  %92 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %91 to %"class.MARC::ThreadSafeQueue.29"**
  %93 = load %"class.MARC::ThreadSafeQueue.29"*, %"class.MARC::ThreadSafeQueue.29"** %92, align 8, !tbaa !72
  %94 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %93, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %94 seq_cst, align 1
  %95 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %75, i64 5
  %96 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %95 to %"class.MARC::ThreadSafeQueue.29"**
  %97 = load %"class.MARC::ThreadSafeQueue.29"*, %"class.MARC::ThreadSafeQueue.29"** %96, align 8, !tbaa !72
  %98 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %97, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %98 seq_cst, align 1
  %99 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %75, i64 6
  %100 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %99 to %"class.MARC::ThreadSafeQueue.29"**
  %101 = load %"class.MARC::ThreadSafeQueue.29"*, %"class.MARC::ThreadSafeQueue.29"** %100, align 8, !tbaa !72
  %102 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %101, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %102 seq_cst, align 1
  %103 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %75, i64 7
  %104 = bitcast %"class.MARC::ThreadSafeSpinLockQueue"** %103 to %"class.MARC::ThreadSafeQueue.29"**
  %105 = load %"class.MARC::ThreadSafeQueue.29"*, %"class.MARC::ThreadSafeQueue.29"** %104, align 8, !tbaa !72
  %106 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.29", %"class.MARC::ThreadSafeQueue.29"* %105, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %106 seq_cst, align 1
  %107 = getelementptr inbounds %"class.MARC::ThreadSafeSpinLockQueue"*, %"class.MARC::ThreadSafeSpinLockQueue"** %75, i64 8
  %108 = icmp eq %"class.MARC::ThreadSafeSpinLockQueue"** %107, %9
  br i1 %108, label %.loopexit9, label %.preheader8
}

; Function Attrs: uwtable
define dso_local void @printReachedS(%"class.std::__cxx11::basic_string"*) local_unnamed_addr #14 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx11::basic_string", align 8
  %3 = bitcast %"class.std::__cxx11::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #10
  call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* nonnull sret %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.15, i64 0, i64 0), %"class.std::__cxx11::basic_string"* dereferenceable(32) %0)
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8, !tbaa !248
  %6 = call i32 @puts(i8* %5)
  %7 = load i8*, i8** %4, align 8, !tbaa !248
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 2
  %9 = bitcast %union.anon.59* %8 to i8*
  %10 = icmp eq i8* %7, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  call void @_ZdlPv(i8* %7) #10
  br label %12

12:                                               ; preds = %1, %11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #10
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* noalias sret, i8*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) local_unnamed_addr #14 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = tail call i64 @strlen(i8* %1) #10
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon.59**
  store %union.anon.59* %5, %union.anon.59** %6, align 8, !tbaa !251
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 0, i64* %7, align 8, !tbaa !252
  %8 = bitcast %union.anon.59* %5 to i8*
  store i8 0, i8* %8, align 8, !tbaa !220
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !252
  %11 = add i64 %10, %4
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"* %0, i64 %11)
          to label %12 unwind label %25

12:                                               ; preds = %3
  %13 = load i64, i64* %7, align 8, !tbaa !252
  %14 = sub i64 9223372036854775807, %13
  %15 = icmp ult i64 %14, %4
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0)) #33
          to label %17 unwind label %25

17:                                               ; preds = %16
  unreachable

18:                                               ; preds = %12
  %19 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %1, i64 %4)
          to label %20 unwind label %25

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %2, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !tbaa !248
  %23 = load i64, i64* %9, align 8, !tbaa !252
  %24 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %22, i64 %23)
          to label %32 unwind label %25

25:                                               ; preds = %18, %16, %20, %3
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8, !tbaa !248
  %29 = icmp eq i8* %28, %8
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  tail call void @_ZdlPv(i8* %28) #10
  br label %31

31:                                               ; preds = %25, %30
  resume { i8*, i32 } %26

32:                                               ; preds = %20
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #28

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"*, i64) local_unnamed_addr #19

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #20

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #19

; Function Attrs: nofree nounwind uwtable
define dso_local void @printReachedI(i32) local_unnamed_addr #29 {
  %2 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7.16, i64 0, i64 0), i32 %0)
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @printPushedP(i32*) local_unnamed_addr #29 {
  %2 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8.17, i64 0, i64 0), i32* %0)
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @printPulledP(i32*) local_unnamed_addr #29 {
  %2 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9.18, i64 0, i64 0), i32* %0)
  ret void
}

; Function Attrs: uwtable
define dso_local void @queuePush8(%"class.MARC::ThreadSafeQueue.60"*, i8* nocapture readonly) local_unnamed_addr #14 {
  %3 = load i8, i8* %1, align 1, !tbaa !220
  %4 = bitcast %"class.MARC::ThreadSafeQueue.60"* %0 to void (%"class.MARC::ThreadSafeQueue.60"*, i8)***
  %5 = load void (%"class.MARC::ThreadSafeQueue.60"*, i8)**, void (%"class.MARC::ThreadSafeQueue.60"*, i8)*** %4, align 8, !tbaa !73
  %6 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.60"*, i8)*, void (%"class.MARC::ThreadSafeQueue.60"*, i8)** %5, i64 3
  %7 = load void (%"class.MARC::ThreadSafeQueue.60"*, i8)*, void (%"class.MARC::ThreadSafeQueue.60"*, i8)** %6, align 8
  tail call void %7(%"class.MARC::ThreadSafeQueue.60"* %0, i8 signext %3)
  ret void
}

; Function Attrs: uwtable
define dso_local void @queuePop8(%"class.MARC::ThreadSafeQueue.60"*, i8*) local_unnamed_addr #14 {
  %3 = bitcast %"class.MARC::ThreadSafeQueue.60"* %0 to i1 (%"class.MARC::ThreadSafeQueue.60"*, i8*)***
  %4 = load i1 (%"class.MARC::ThreadSafeQueue.60"*, i8*)**, i1 (%"class.MARC::ThreadSafeQueue.60"*, i8*)*** %3, align 8, !tbaa !73
  %5 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.60"*, i8*)*, i1 (%"class.MARC::ThreadSafeQueue.60"*, i8*)** %4, i64 1
  %6 = load i1 (%"class.MARC::ThreadSafeQueue.60"*, i8*)*, i1 (%"class.MARC::ThreadSafeQueue.60"*, i8*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.MARC::ThreadSafeQueue.60"* %0, i8* dereferenceable(1) %1)
  ret void
}

; Function Attrs: uwtable
define dso_local void @queuePush16(%"class.MARC::ThreadSafeQueue.69"*, i16* nocapture readonly) local_unnamed_addr #14 {
  %3 = load i16, i16* %1, align 2, !tbaa !253
  %4 = bitcast %"class.MARC::ThreadSafeQueue.69"* %0 to void (%"class.MARC::ThreadSafeQueue.69"*, i16)***
  %5 = load void (%"class.MARC::ThreadSafeQueue.69"*, i16)**, void (%"class.MARC::ThreadSafeQueue.69"*, i16)*** %4, align 8, !tbaa !73
  %6 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.69"*, i16)*, void (%"class.MARC::ThreadSafeQueue.69"*, i16)** %5, i64 3
  %7 = load void (%"class.MARC::ThreadSafeQueue.69"*, i16)*, void (%"class.MARC::ThreadSafeQueue.69"*, i16)** %6, align 8
  tail call void %7(%"class.MARC::ThreadSafeQueue.69"* %0, i16 signext %3)
  ret void
}

; Function Attrs: uwtable
define dso_local void @queuePop16(%"class.MARC::ThreadSafeQueue.69"*, i16*) local_unnamed_addr #14 {
  %3 = bitcast %"class.MARC::ThreadSafeQueue.69"* %0 to i1 (%"class.MARC::ThreadSafeQueue.69"*, i16*)***
  %4 = load i1 (%"class.MARC::ThreadSafeQueue.69"*, i16*)**, i1 (%"class.MARC::ThreadSafeQueue.69"*, i16*)*** %3, align 8, !tbaa !73
  %5 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.69"*, i16*)*, i1 (%"class.MARC::ThreadSafeQueue.69"*, i16*)** %4, i64 1
  %6 = load i1 (%"class.MARC::ThreadSafeQueue.69"*, i16*)*, i1 (%"class.MARC::ThreadSafeQueue.69"*, i16*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.MARC::ThreadSafeQueue.69"* %0, i16* dereferenceable(2) %1)
  ret void
}

; Function Attrs: uwtable
define dso_local void @queuePush32(%"class.MARC::ThreadSafeQueue.78"*, i32* nocapture readonly) local_unnamed_addr #14 {
  %3 = load i32, i32* %1, align 4, !tbaa !122
  %4 = bitcast %"class.MARC::ThreadSafeQueue.78"* %0 to void (%"class.MARC::ThreadSafeQueue.78"*, i32)***
  %5 = load void (%"class.MARC::ThreadSafeQueue.78"*, i32)**, void (%"class.MARC::ThreadSafeQueue.78"*, i32)*** %4, align 8, !tbaa !73
  %6 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.78"*, i32)*, void (%"class.MARC::ThreadSafeQueue.78"*, i32)** %5, i64 3
  %7 = load void (%"class.MARC::ThreadSafeQueue.78"*, i32)*, void (%"class.MARC::ThreadSafeQueue.78"*, i32)** %6, align 8
  tail call void %7(%"class.MARC::ThreadSafeQueue.78"* %0, i32 %3)
  ret void
}

; Function Attrs: uwtable
define dso_local void @queuePop32(%"class.MARC::ThreadSafeQueue.78"*, i32*) local_unnamed_addr #14 {
  %3 = bitcast %"class.MARC::ThreadSafeQueue.78"* %0 to i1 (%"class.MARC::ThreadSafeQueue.78"*, i32*)***
  %4 = load i1 (%"class.MARC::ThreadSafeQueue.78"*, i32*)**, i1 (%"class.MARC::ThreadSafeQueue.78"*, i32*)*** %3, align 8, !tbaa !73
  %5 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.78"*, i32*)*, i1 (%"class.MARC::ThreadSafeQueue.78"*, i32*)** %4, i64 1
  %6 = load i1 (%"class.MARC::ThreadSafeQueue.78"*, i32*)*, i1 (%"class.MARC::ThreadSafeQueue.78"*, i32*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.MARC::ThreadSafeQueue.78"* %0, i32* dereferenceable(4) %1)
  ret void
}

; Function Attrs: uwtable
define dso_local void @queuePush64(%"class.MARC::ThreadSafeQueue.87"*, i64* nocapture readonly) local_unnamed_addr #14 {
  %3 = load i64, i64* %1, align 8, !tbaa !149
  %4 = bitcast %"class.MARC::ThreadSafeQueue.87"* %0 to void (%"class.MARC::ThreadSafeQueue.87"*, i64)***
  %5 = load void (%"class.MARC::ThreadSafeQueue.87"*, i64)**, void (%"class.MARC::ThreadSafeQueue.87"*, i64)*** %4, align 8, !tbaa !73
  %6 = getelementptr inbounds void (%"class.MARC::ThreadSafeQueue.87"*, i64)*, void (%"class.MARC::ThreadSafeQueue.87"*, i64)** %5, i64 3
  %7 = load void (%"class.MARC::ThreadSafeQueue.87"*, i64)*, void (%"class.MARC::ThreadSafeQueue.87"*, i64)** %6, align 8
  tail call void %7(%"class.MARC::ThreadSafeQueue.87"* %0, i64 %3)
  ret void
}

; Function Attrs: uwtable
define dso_local void @queuePop64(%"class.MARC::ThreadSafeQueue.87"*, i64*) local_unnamed_addr #14 {
  %3 = bitcast %"class.MARC::ThreadSafeQueue.87"* %0 to i1 (%"class.MARC::ThreadSafeQueue.87"*, i64*)***
  %4 = load i1 (%"class.MARC::ThreadSafeQueue.87"*, i64*)**, i1 (%"class.MARC::ThreadSafeQueue.87"*, i64*)*** %3, align 8, !tbaa !73
  %5 = getelementptr inbounds i1 (%"class.MARC::ThreadSafeQueue.87"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.87"*, i64*)** %4, i64 1
  %6 = load i1 (%"class.MARC::ThreadSafeQueue.87"*, i64*)*, i1 (%"class.MARC::ThreadSafeQueue.87"*, i64*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.MARC::ThreadSafeQueue.87"* %0, i64* dereferenceable(8) %1)
  ret void
}

; Function Attrs: uwtable
define dso_local { i32, i64 } @NOELLE_DOALLDispatcher(void (i8*, i64, i64, i64)*, i8*, i64, i64) local_unnamed_addr #14 {
  %5 = alloca i32, align 4
  %6 = load %"class.MARC::ThreadPoolForCSingleQueue"*, %"class.MARC::ThreadPoolForCSingleQueue"** getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 0), align 8, !tbaa !186
  %7 = trunc i64 %2 to i32
  %8 = tail call i32 @pthread_spin_lock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  %9 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %10 = icmp ult i32 %9, %7
  %11 = select i1 %10, i32 %9, i32 %7
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %12, i32 1, i32 %11
  %14 = sub i32 %9, %13
  store i32 %14, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %15 = tail call i32 @pthread_spin_unlock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  %16 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #10
  %17 = add i32 %13, -1
  %18 = call %struct.DOALL_args_t* @_ZN13NoelleRuntime12getDOALLArgsEjPj(%class.NoelleRuntime* nonnull @_ZL7runtime, i32 %17, i32* nonnull %5)
  %19 = icmp eq i32 %17, 0
  %20 = zext i32 %13 to i64
  br i1 %19, label %21, label %22

21:                                               ; preds = %4
  tail call void %0(i8* %1, i64 0, i64 %20, i64 %3)
  br label %.loopexit

22:                                               ; preds = %4
  %23 = bitcast %"class.MARC::ThreadPoolForCSingleQueue"* %6 to void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)***
  %24 = zext i32 %17 to i64
  br label %26

25:                                               ; preds = %26
  tail call void %0(i8* %1, i64 %24, i64 %20, i64 %3)
  br label %61

26:                                               ; preds = %22, %26
  %27 = phi i64 [ 0, %22 ], [ %37, %26 ]
  %28 = getelementptr inbounds %struct.DOALL_args_t, %struct.DOALL_args_t* %18, i64 %27
  %29 = getelementptr inbounds %struct.DOALL_args_t, %struct.DOALL_args_t* %28, i64 0, i32 0
  store void (i8*, i64, i64, i64)* %0, void (i8*, i64, i64, i64)** %29, align 8, !tbaa !255
  %30 = getelementptr inbounds %struct.DOALL_args_t, %struct.DOALL_args_t* %18, i64 %27, i32 1
  store i8* %1, i8** %30, align 8, !tbaa !257
  %31 = getelementptr inbounds %struct.DOALL_args_t, %struct.DOALL_args_t* %18, i64 %27, i32 3
  store i64 %20, i64* %31, align 8, !tbaa !258
  %32 = getelementptr inbounds %struct.DOALL_args_t, %struct.DOALL_args_t* %18, i64 %27, i32 4
  store i64 %3, i64* %32, align 8, !tbaa !259
  %33 = bitcast %struct.DOALL_args_t* %28 to i8*
  %34 = load void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)**, void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)*** %23, align 8, !tbaa !73
  %35 = getelementptr inbounds void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)*, void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)** %34, i64 2
  %36 = load void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)*, void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)** %35, align 8
  tail call void %36(%"class.MARC::ThreadPoolForCSingleQueue"* %6, void (i8*)* nonnull @_ZL22NOELLE_DOALLTrampolinePv, i8* %33)
  %37 = add nuw nsw i64 %27, 1
  %38 = icmp ult i64 %37, %24
  br i1 %38, label %26, label %25

.loopexit:                                        ; preds = %61, %21
  %39 = tail call i32 @pthread_spin_lock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  %40 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %41 = add i32 %40, %13
  store i32 %41, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %42 = icmp sgt i32 %41, -1
  %43 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 7), align 4
  %44 = icmp ugt i32 %41, %43
  %45 = and i1 %42, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %.loopexit
  tail call void @__assert_fail(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.14.21, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11.22, i64 0, i64 0), i32 1083, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZN13NoelleRuntime12releaseCoresEj, i64 0, i64 0)) #30
  unreachable

47:                                               ; preds = %.loopexit
  %48 = tail call i32 @pthread_spin_unlock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  %49 = load i32, i32* %5, align 4, !tbaa !122
  %50 = tail call i32 @pthread_spin_lock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 1)) #10
  %51 = zext i32 %49 to i64
  %52 = load i64*, i64** getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), align 8, !tbaa !180
  %53 = lshr i64 %51, 6
  %54 = getelementptr inbounds i64, i64* %52, i64 %53
  %55 = and i64 %51, 63
  %56 = shl i64 1, %55
  %57 = load i64, i64* %54, align 8, !tbaa !149
  %58 = or i64 %57, %56
  store i64 %58, i64* %54, align 8, !tbaa !149
  %59 = tail call i32 @pthread_spin_unlock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 1)) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #10
  %60 = insertvalue { i32, i64 } undef, i32 %13, 0
  ret { i32, i64 } %60

61:                                               ; preds = %25, %61
  %62 = phi i64 [ %65, %61 ], [ 0, %25 ]
  %63 = getelementptr inbounds %struct.DOALL_args_t, %struct.DOALL_args_t* %18, i64 %62, i32 5
  %64 = tail call i32 @pthread_spin_lock(i32* nonnull %63) #10
  %65 = add nuw nsw i64 %62, 1
  %66 = icmp ult i64 %65, %24
  br i1 %66, label %61, label %.loopexit
}

; Function Attrs: uwtable
define dso_local %struct.DOALL_args_t* @_ZN13NoelleRuntime12getDOALLArgsEjPj(%class.NoelleRuntime*, i32, i32* nocapture) local_unnamed_addr #14 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = alloca %struct.DOALL_args_t*, align 8
  %5 = bitcast %struct.DOALL_args_t** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  store %struct.DOALL_args_t* null, %struct.DOALL_args_t** %4, align 8, !tbaa !72
  %6 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 1
  %7 = tail call i32 @pthread_spin_lock(i32* nonnull %6) #10
  %8 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4
  %9 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast i64** %9 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !180
  %12 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8, !tbaa !182
  %14 = bitcast %"class.std::vector.47"* %8 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !180
  %16 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8, !tbaa !182
  %18 = sub i64 %11, %15
  %19 = shl i64 %18, 3
  %20 = zext i32 %13 to i64
  %21 = add nsw i64 %19, %20
  %22 = zext i32 %17 to i64
  %23 = sub i64 %21, %22
  %24 = icmp eq i64 %23, 0
  %25 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 3
  %26 = inttoptr i64 %15 to i64*
  %27 = inttoptr i64 %11 to i64*
  br i1 %24, label %.loopexit13, label %28

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.std::vector.42", %"class.std::vector.42"* %25, i64 0, i32 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8, !tbaa !193
  br label %31

31:                                               ; preds = %44, %28
  %32 = phi i64 [ 0, %28 ], [ %45, %44 ]
  %33 = getelementptr inbounds i32, i32* %30, i64 %32
  %34 = load i32, i32* %33, align 4, !tbaa !122
  %35 = lshr i64 %32, 6
  %36 = getelementptr inbounds i64, i64* %26, i64 %35
  %37 = and i64 %32, 63
  %38 = shl i64 1, %37
  %39 = load i64, i64* %36, align 8, !tbaa !149
  %40 = and i64 %39, %38
  %41 = icmp eq i64 %40, 0
  %42 = icmp ult i32 %34, %1
  %43 = or i1 %42, %41
  br i1 %43, label %44, label %47

44:                                               ; preds = %31
  %45 = add nuw i64 %32, 1
  %46 = icmp eq i64 %45, %23
  br i1 %46, label %.loopexit13, label %31

47:                                               ; preds = %31
  %48 = getelementptr inbounds i64, i64* %26, i64 %35
  %49 = trunc i64 %32 to i32
  %50 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %51 = load %struct.DOALL_args_t**, %struct.DOALL_args_t*** %50, align 8, !tbaa !187
  %52 = getelementptr inbounds %struct.DOALL_args_t*, %struct.DOALL_args_t** %51, i64 %32
  %53 = bitcast %struct.DOALL_args_t** %52 to i64*
  %54 = load i64, i64* %53, align 8, !tbaa !72
  %55 = bitcast %struct.DOALL_args_t** %4 to i64*
  store i64 %54, i64* %55, align 8, !tbaa !72
  %56 = xor i64 %38, -1
  %57 = and i64 %39, %56
  store i64 %57, i64* %48, align 8, !tbaa !149
  store i32 %49, i32* %2, align 4, !tbaa !122
  %58 = tail call i32 @pthread_spin_unlock(i32* nonnull %6) #10
  %59 = inttoptr i64 %54 to %struct.DOALL_args_t*
  br label %.loopexit

.loopexit13:                                      ; preds = %44, %3
  %60 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %61 = load i32*, i32** %60, align 8, !tbaa !260
  %62 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %63 = load i32*, i32** %62, align 8, !tbaa !261
  %64 = icmp eq i32* %61, %63
  br i1 %64, label %67, label %65

65:                                               ; preds = %.loopexit13
  store i32 %1, i32* %61, align 4, !tbaa !122
  %66 = getelementptr inbounds i32, i32* %61, i64 1
  store i32* %66, i32** %60, align 8, !tbaa !260
  br label %100

67:                                               ; preds = %.loopexit13
  %68 = ptrtoint i32* %61 to i64
  %69 = bitcast %"class.std::vector.42"* %25 to i64*
  %70 = load i64, i64* %69, align 8, !tbaa !193
  %71 = sub i64 %68, %70
  %72 = ashr exact i64 %71, 2
  %73 = icmp eq i64 %71, 0
  %74 = select i1 %73, i64 1, i64 %72
  %75 = add nsw i64 %74, %72
  %76 = icmp ult i64 %75, %72
  %77 = icmp ugt i64 %75, 4611686018427387903
  %78 = or i1 %76, %77
  %79 = select i1 %78, i64 4611686018427387903, i64 %75
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %67
  %82 = shl i64 %79, 2
  %83 = tail call i8* @_Znwm(i64 %82)
  %84 = bitcast i8* %83 to i32*
  br label %85

85:                                               ; preds = %81, %67
  %86 = phi i8* [ %83, %81 ], [ null, %67 ]
  %87 = phi i32* [ %84, %81 ], [ null, %67 ]
  %88 = getelementptr inbounds i32, i32* %87, i64 %72
  store i32 %1, i32* %88, align 4, !tbaa !122
  br i1 %73, label %91, label %89

89:                                               ; preds = %85
  %90 = inttoptr i64 %70 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %90, i64 %71, i1 false) #10
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds i32, i32* %88, i64 1
  %93 = icmp eq i64 %70, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = inttoptr i64 %70 to i8*
  tail call void @_ZdlPv(i8* nonnull %95) #10
  br label %96

96:                                               ; preds = %94, %91
  %97 = bitcast %"class.std::vector.42"* %25 to i8**
  store i8* %86, i8** %97, align 8, !tbaa !193
  store i32* %92, i32** %60, align 8, !tbaa !260
  %98 = getelementptr inbounds i32, i32* %87, i64 %79
  store i32* %98, i32** %62, align 8, !tbaa !261
  %99 = load i64*, i64** %9, align 8, !tbaa !180
  br label %100

100:                                              ; preds = %65, %96
  %101 = phi i64* [ %27, %65 ], [ %99, %96 ]
  %102 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %103 = load i64*, i64** %102, align 8, !tbaa !190
  %104 = icmp eq i64* %101, %103
  %105 = load i32, i32* %12, align 8
  br i1 %104, label %117, label %106

106:                                              ; preds = %100
  %107 = add i32 %105, 1
  store i32 %107, i32* %12, align 8, !tbaa !182
  %108 = icmp eq i32 %105, 63
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  store i32 0, i32* %12, align 8, !tbaa !182
  %110 = getelementptr inbounds i64, i64* %101, i64 1
  store i64* %110, i64** %9, align 8, !tbaa !180
  br label %111

111:                                              ; preds = %109, %106
  %112 = zext i32 %105 to i64
  %113 = shl i64 1, %112
  %114 = xor i64 %113, -1
  %115 = load i64, i64* %101, align 8, !tbaa !149
  %116 = and i64 %115, %114
  store i64 %116, i64* %101, align 8, !tbaa !149
  br label %118

117:                                              ; preds = %100
  tail call void @_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb(%"class.std::vector.47"* nonnull %8, i64* %101, i32 %105, i1 zeroext false)
  br label %118

118:                                              ; preds = %111, %117
  %119 = bitcast %struct.DOALL_args_t** %4 to i8**
  %120 = zext i32 %1 to i64
  %121 = mul nuw nsw i64 %120, 48
  %122 = call i32 @posix_memalign(i8** nonnull %119, i64 64, i64 %121) #10
  %123 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 5
  %124 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %125 = load %struct.DOALL_args_t**, %struct.DOALL_args_t*** %124, align 8, !tbaa !262
  %126 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %127 = load %struct.DOALL_args_t**, %struct.DOALL_args_t*** %126, align 8, !tbaa !263
  %128 = icmp eq %struct.DOALL_args_t** %125, %127
  br i1 %128, label %135, label %129

129:                                              ; preds = %118
  %130 = bitcast %struct.DOALL_args_t** %4 to i64*
  %131 = load i64, i64* %130, align 8, !tbaa !72
  %132 = bitcast %struct.DOALL_args_t** %125 to i64*
  store i64 %131, i64* %132, align 8, !tbaa !72
  %133 = load %struct.DOALL_args_t**, %struct.DOALL_args_t*** %124, align 8, !tbaa !262
  %134 = getelementptr inbounds %struct.DOALL_args_t*, %struct.DOALL_args_t** %133, i64 1
  br label %170

135:                                              ; preds = %118
  %136 = ptrtoint %struct.DOALL_args_t** %125 to i64
  %137 = bitcast %"class.std::vector.51"* %123 to i64*
  %138 = load i64, i64* %137, align 8, !tbaa !187
  %139 = sub i64 %136, %138
  %140 = ashr exact i64 %139, 3
  %141 = icmp eq i64 %139, 0
  %142 = select i1 %141, i64 1, i64 %140
  %143 = add nsw i64 %142, %140
  %144 = icmp ult i64 %143, %140
  %145 = icmp ugt i64 %143, 2305843009213693951
  %146 = or i1 %144, %145
  %147 = select i1 %146, i64 2305843009213693951, i64 %143
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %153, label %149

149:                                              ; preds = %135
  %150 = shl i64 %147, 3
  %151 = call i8* @_Znwm(i64 %150)
  %152 = bitcast i8* %151 to %struct.DOALL_args_t**
  br label %153

153:                                              ; preds = %149, %135
  %154 = phi i8* [ %151, %149 ], [ null, %135 ]
  %155 = phi %struct.DOALL_args_t** [ %152, %149 ], [ null, %135 ]
  %156 = getelementptr inbounds %struct.DOALL_args_t*, %struct.DOALL_args_t** %155, i64 %140
  %157 = bitcast %struct.DOALL_args_t** %4 to i64*
  %158 = load i64, i64* %157, align 8, !tbaa !72
  %159 = bitcast %struct.DOALL_args_t** %156 to i64*
  store i64 %158, i64* %159, align 8, !tbaa !72
  br i1 %141, label %162, label %160

160:                                              ; preds = %153
  %161 = inttoptr i64 %138 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %161, i64 %139, i1 false) #10
  br label %162

162:                                              ; preds = %160, %153
  %163 = getelementptr inbounds %struct.DOALL_args_t*, %struct.DOALL_args_t** %156, i64 1
  %164 = icmp eq i64 %138, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %162
  %166 = inttoptr i64 %138 to i8*
  call void @_ZdlPv(i8* nonnull %166) #10
  br label %167

167:                                              ; preds = %165, %162
  %168 = bitcast %"class.std::vector.51"* %123 to i8**
  store i8* %154, i8** %168, align 8, !tbaa !187
  store %struct.DOALL_args_t** %163, %struct.DOALL_args_t*** %124, align 8, !tbaa !262
  %169 = getelementptr inbounds %struct.DOALL_args_t*, %struct.DOALL_args_t** %155, i64 %147
  br label %170

170:                                              ; preds = %129, %167
  %171 = phi %struct.DOALL_args_t*** [ %124, %129 ], [ %126, %167 ]
  %172 = phi %struct.DOALL_args_t** [ %134, %129 ], [ %169, %167 ]
  store %struct.DOALL_args_t** %172, %struct.DOALL_args_t*** %171, align 8, !tbaa !72
  %173 = call i32 @pthread_spin_unlock(i32* nonnull %6) #10
  %174 = trunc i64 %23 to i32
  store i32 %174, i32* %2, align 4, !tbaa !122
  %175 = icmp eq i32 %1, 0
  %176 = load %struct.DOALL_args_t*, %struct.DOALL_args_t** %4, align 8, !tbaa !72
  br i1 %175, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %170, %.preheader
  %177 = phi i64 [ %183, %.preheader ], [ 0, %170 ]
  %178 = phi %struct.DOALL_args_t* [ %184, %.preheader ], [ %176, %170 ]
  %179 = getelementptr inbounds %struct.DOALL_args_t, %struct.DOALL_args_t* %178, i64 %177, i32 2
  store i64 %177, i64* %179, align 8, !tbaa !264
  %180 = getelementptr inbounds %struct.DOALL_args_t, %struct.DOALL_args_t* %178, i64 %177, i32 5
  %181 = call i32 @pthread_spin_init(i32* nonnull %180, i32 0) #10
  %182 = call i32 @pthread_spin_lock(i32* nonnull %180) #10
  %183 = add nuw nsw i64 %177, 1
  %184 = load %struct.DOALL_args_t*, %struct.DOALL_args_t** %4, align 8, !tbaa !72
  %185 = icmp eq i64 %183, %120
  br i1 %185, label %.loopexit, label %.preheader

.loopexit:                                        ; preds = %.preheader, %170, %47
  %186 = phi %struct.DOALL_args_t* [ %59, %47 ], [ %176, %170 ], [ %184, %.preheader ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret %struct.DOALL_args_t* %186
}

; Function Attrs: uwtable
define internal void @_ZL22NOELLE_DOALLTrampolinePv(i8*) #14 {
  %2 = bitcast i8* %0 to void (i8*, i64, i64, i64)**
  %3 = load void (i8*, i64, i64, i64)*, void (i8*, i64, i64, i64)** %2, align 8, !tbaa !255
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !257
  %7 = getelementptr inbounds i8, i8* %0, i64 16
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !264
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !258
  %13 = getelementptr inbounds i8, i8* %0, i64 32
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !259
  tail call void %3(i8* %6, i64 %9, i64 %12, i64 %15)
  %16 = getelementptr inbounds i8, i8* %0, i64 40
  %17 = bitcast i8* %16 to i32*
  %18 = tail call i32 @pthread_spin_unlock(i32* nonnull %17) #10
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb(%"class.std::vector.47"*, i64*, i32, i1 zeroext) local_unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %5 = ptrtoint i64* %1 to i64
  %6 = getelementptr inbounds %"class.std::vector.47", %"class.std::vector.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds %"class.std::vector.47", %"class.std::vector.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i64*, i64** %8, align 8, !tbaa !190
  %10 = icmp eq i64* %7, %9
  %11 = ptrtoint i64* %7 to i64
  %12 = getelementptr inbounds %"class.std::vector.47", %"class.std::vector.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  br i1 %10, label %79, label %14

14:                                               ; preds = %4
  %15 = zext i32 %13 to i64
  %16 = add nuw nsw i64 %15, 1
  %17 = sub i64 %11, %5
  %18 = shl i64 %17, 3
  %19 = zext i32 %2 to i64
  %20 = sub nsw i64 %15, %19
  %21 = add i64 %20, %18
  %22 = icmp sgt i64 %21, 0
  br i1 %22, label %23, label %.loopexit9

23:                                               ; preds = %14
  %24 = trunc i64 %16 to i32
  %25 = and i32 %24, 63
  %26 = lshr i64 %16, 6
  %27 = getelementptr inbounds i64, i64* %7, i64 %26
  br label %28

28:                                               ; preds = %23, %61
  %29 = phi i64 [ %63, %61 ], [ %21, %23 ]
  %30 = phi i32 [ %40, %61 ], [ %13, %23 ]
  %31 = phi i64 [ %39, %61 ], [ %11, %23 ]
  %32 = phi i32 [ %48, %61 ], [ %25, %23 ]
  %33 = phi i64* [ %47, %61 ], [ %27, %23 ]
  %34 = add i32 %30, -1
  %35 = icmp eq i32 %30, 0
  %36 = inttoptr i64 %31 to i64*
  %37 = getelementptr inbounds i64, i64* %36, i64 -1
  %38 = ptrtoint i64* %37 to i64
  %39 = select i1 %35, i64 %38, i64 %31
  %40 = select i1 %35, i32 63, i32 %34
  %41 = inttoptr i64 %39 to i64*
  %42 = zext i32 %40 to i64
  %43 = shl i64 1, %42
  %44 = add i32 %32, -1
  %45 = icmp eq i32 %32, 0
  %46 = getelementptr inbounds i64, i64* %33, i64 -1
  %47 = select i1 %45, i64* %46, i64* %33
  %48 = select i1 %45, i32 63, i32 %44
  %49 = zext i32 %48 to i64
  %50 = shl i64 1, %49
  %51 = load i64, i64* %41, align 8, !tbaa !149
  %52 = and i64 %51, %43
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %28
  %55 = load i64, i64* %47, align 8, !tbaa !149
  %56 = or i64 %55, %50
  br label %61

57:                                               ; preds = %28
  %58 = xor i64 %50, -1
  %59 = load i64, i64* %47, align 8, !tbaa !149
  %60 = and i64 %59, %58
  br label %61

61:                                               ; preds = %57, %54
  %62 = phi i64 [ %56, %54 ], [ %60, %57 ]
  store i64 %62, i64* %47, align 8, !tbaa !149
  %63 = add nsw i64 %29, -1
  %64 = icmp sgt i64 %63, 0
  br i1 %64, label %28, label %.loopexit9

.loopexit9:                                       ; preds = %61, %14
  %65 = shl i64 1, %19
  br i1 %3, label %66, label %69

66:                                               ; preds = %.loopexit9
  %67 = load i64, i64* %1, align 8, !tbaa !149
  %68 = or i64 %67, %65
  br label %73

69:                                               ; preds = %.loopexit9
  %70 = xor i64 %65, -1
  %71 = load i64, i64* %1, align 8, !tbaa !149
  %72 = and i64 %71, %70
  br label %73

73:                                               ; preds = %66, %69
  %74 = phi i64 [ %72, %69 ], [ %68, %66 ]
  store i64 %74, i64* %1, align 8, !tbaa !149
  %75 = add i32 %13, 1
  store i32 %75, i32* %12, align 8, !tbaa !182
  %76 = icmp eq i32 %13, 63
  br i1 %76, label %77, label %239

77:                                               ; preds = %73
  store i32 0, i32* %12, align 8, !tbaa !182
  %78 = getelementptr inbounds i64, i64* %7, i64 1
  store i64* %78, i64** %6, align 8, !tbaa !180
  br label %239

79:                                               ; preds = %4
  %80 = bitcast %"class.std::vector.47"* %0 to i64*
  %81 = load i64, i64* %80, align 8, !tbaa !180
  %82 = getelementptr inbounds %"class.std::vector.47", %"class.std::vector.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 8, !tbaa !182
  %84 = sub i64 %11, %81
  %85 = shl i64 %84, 3
  %86 = zext i32 %13 to i64
  %87 = add nsw i64 %85, %86
  %88 = zext i32 %83 to i64
  %89 = sub i64 %87, %88
  %90 = icmp eq i64 %89, 9223372036854775744
  br i1 %90, label %91, label %92

91:                                               ; preds = %79
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i64 0, i64 0)) #33
  unreachable

92:                                               ; preds = %79
  %93 = icmp eq i64 %89, 0
  %94 = select i1 %93, i64 1, i64 %89
  %95 = add i64 %94, %89
  %96 = icmp ult i64 %95, %89
  %97 = icmp ugt i64 %95, 9223372036854775744
  %98 = or i1 %96, %97
  %99 = add i64 %95, 63
  %100 = lshr i64 %99, 6
  %101 = select i1 %98, i64 144115188075855871, i64 %100
  %102 = shl nuw nsw i64 %101, 3
  %103 = tail call i8* @_Znwm(i64 %102)
  %104 = bitcast i8* %103 to i64*
  %105 = getelementptr inbounds %"class.std::vector.47", %"class.std::vector.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i64*, i64** %105, align 8
  %107 = ptrtoint i64* %106 to i64
  %108 = sub i64 %5, %107
  %109 = ashr exact i64 %108, 3
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %92
  %112 = bitcast i64* %106 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 8 %112, i64 %108, i1 false) #10
  br label %113

113:                                              ; preds = %111, %92
  %114 = getelementptr inbounds i64, i64* %104, i64 %109
  %115 = icmp eq i32 %2, 0
  br i1 %115, label %161, label %116

116:                                              ; preds = %113
  %117 = zext i32 %2 to i64
  br label %118

118:                                              ; preds = %139, %116
  %119 = phi i64 [ %152, %139 ], [ %117, %116 ]
  %120 = phi i32 [ %146, %139 ], [ 0, %116 ]
  %121 = phi i64 [ %145, %139 ], [ %5, %116 ]
  %122 = phi i64* [ %151, %139 ], [ %114, %116 ]
  %123 = phi i32 [ %150, %139 ], [ 0, %116 ]
  %124 = inttoptr i64 %121 to i64*
  %125 = zext i32 %120 to i64
  %126 = shl i64 1, %125
  %127 = load i64, i64* %124, align 8, !tbaa !149
  %128 = and i64 %127, %126
  %129 = icmp eq i64 %128, 0
  %130 = zext i32 %123 to i64
  %131 = shl i64 1, %130
  br i1 %129, label %135, label %132

132:                                              ; preds = %118
  %133 = load i64, i64* %122, align 8, !tbaa !149
  %134 = or i64 %133, %131
  br label %139

135:                                              ; preds = %118
  %136 = xor i64 %131, -1
  %137 = load i64, i64* %122, align 8, !tbaa !149
  %138 = and i64 %137, %136
  br label %139

139:                                              ; preds = %135, %132
  %140 = phi i64 [ %138, %135 ], [ %134, %132 ]
  store i64 %140, i64* %122, align 8, !tbaa !149
  %141 = add i32 %120, 1
  %142 = icmp eq i32 %120, 63
  %143 = getelementptr inbounds i64, i64* %124, i64 1
  %144 = ptrtoint i64* %143 to i64
  %145 = select i1 %142, i64 %144, i64 %121
  %146 = select i1 %142, i32 0, i32 %141
  %147 = add i32 %123, 1
  %148 = icmp eq i32 %123, 63
  %149 = getelementptr inbounds i64, i64* %122, i64 1
  %150 = select i1 %148, i32 0, i32 %147
  %151 = select i1 %148, i64* %149, i64* %122
  %152 = add nsw i64 %119, -1
  %153 = icmp sgt i64 %152, 0
  br i1 %153, label %118, label %154

154:                                              ; preds = %139
  %155 = add i32 %150, 1
  %156 = icmp eq i32 %150, 63
  %157 = getelementptr inbounds i64, i64* %151, i64 1
  %158 = select i1 %156, i64* %157, i64* %151
  %159 = select i1 %156, i32 0, i32 %155
  %160 = zext i32 %150 to i64
  br label %161

161:                                              ; preds = %154, %113
  %162 = phi i64* [ %114, %113 ], [ %151, %154 ]
  %163 = phi i64 [ 0, %113 ], [ %160, %154 ]
  %164 = phi i64* [ %114, %113 ], [ %158, %154 ]
  %165 = phi i32 [ 1, %113 ], [ %159, %154 ]
  %166 = shl i64 1, %163
  br i1 %3, label %167, label %170

167:                                              ; preds = %161
  %168 = load i64, i64* %162, align 8, !tbaa !149
  %169 = or i64 %168, %166
  br label %174

170:                                              ; preds = %161
  %171 = xor i64 %166, -1
  %172 = load i64, i64* %162, align 8, !tbaa !149
  %173 = and i64 %172, %171
  br label %174

174:                                              ; preds = %167, %170
  %175 = phi i64 [ %173, %170 ], [ %169, %167 ]
  store i64 %175, i64* %162, align 8, !tbaa !149
  %176 = bitcast i64** %6 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = load i32, i32* %12, align 8
  %179 = sub i64 %177, %5
  %180 = shl i64 %179, 3
  %181 = zext i32 %178 to i64
  %182 = zext i32 %2 to i64
  %183 = sub nsw i64 %181, %182
  %184 = add i64 %183, %180
  %185 = icmp sgt i64 %184, 0
  br i1 %185, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %174, %206
  %186 = phi i64 [ %219, %206 ], [ %184, %174 ]
  %187 = phi i32 [ %213, %206 ], [ %2, %174 ]
  %188 = phi i64 [ %212, %206 ], [ %5, %174 ]
  %189 = phi i32 [ %218, %206 ], [ %165, %174 ]
  %190 = phi i64* [ %217, %206 ], [ %164, %174 ]
  %191 = inttoptr i64 %188 to i64*
  %192 = zext i32 %187 to i64
  %193 = shl i64 1, %192
  %194 = zext i32 %189 to i64
  %195 = shl i64 1, %194
  %196 = load i64, i64* %191, align 8, !tbaa !149
  %197 = and i64 %196, %193
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %.preheader
  %200 = load i64, i64* %190, align 8, !tbaa !149
  %201 = or i64 %200, %195
  br label %206

202:                                              ; preds = %.preheader
  %203 = xor i64 %195, -1
  %204 = load i64, i64* %190, align 8, !tbaa !149
  %205 = and i64 %204, %203
  br label %206

206:                                              ; preds = %202, %199
  %207 = phi i64 [ %201, %199 ], [ %205, %202 ]
  store i64 %207, i64* %190, align 8, !tbaa !149
  %208 = add i32 %187, 1
  %209 = icmp eq i32 %187, 63
  %210 = getelementptr inbounds i64, i64* %191, i64 1
  %211 = ptrtoint i64* %210 to i64
  %212 = select i1 %209, i64 %211, i64 %188
  %213 = select i1 %209, i32 0, i32 %208
  %214 = add i32 %189, 1
  %215 = icmp eq i32 %189, 63
  %216 = getelementptr inbounds i64, i64* %190, i64 1
  %217 = select i1 %215, i64* %216, i64* %190
  %218 = select i1 %215, i32 0, i32 %214
  %219 = add nsw i64 %186, -1
  %220 = icmp sgt i64 %219, 0
  br i1 %220, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %206, %174
  %221 = phi i64* [ %164, %174 ], [ %217, %206 ]
  %222 = phi i32 [ %165, %174 ], [ %218, %206 ]
  %223 = icmp eq i64* %106, null
  br i1 %223, label %236, label %224

224:                                              ; preds = %.loopexit
  %225 = bitcast i64** %8 to i64*
  %226 = load i64, i64* %225, align 8, !tbaa !190
  %227 = sub i64 %226, %107
  %228 = ashr exact i64 %227, 3
  %229 = inttoptr i64 %226 to i64*
  %230 = sub nsw i64 0, %228
  %231 = getelementptr inbounds i64, i64* %229, i64 %230
  %232 = bitcast i64* %231 to i8*
  tail call void @_ZdlPv(i8* %232) #10
  %233 = getelementptr inbounds %"class.std::vector.47", %"class.std::vector.47"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %234 = bitcast %"struct.std::_Bit_iterator"* %233 to i8*
  store i64* null, i64** %6, align 8
  store i32 0, i32* %12, align 8
  %235 = bitcast %"class.std::vector.47"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %235, i8* nonnull align 8 %234, i64 12, i1 false) #10
  store i64* null, i64** %8, align 8, !tbaa !190
  br label %236

236:                                              ; preds = %.loopexit, %224
  %237 = getelementptr inbounds i64, i64* %104, i64 %101
  store i64* %237, i64** %8, align 8, !tbaa !190
  %238 = bitcast %"class.std::vector.47"* %0 to i8**
  store i8* %103, i8** %238, align 8
  store i32 0, i32* %82, align 8
  store i64* %221, i64** %6, align 8
  store i32 %222, i32* %12, align 8
  br label %239

239:                                              ; preds = %77, %73, %236
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local i32 @posix_memalign(i8**, i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define dso_local i32 @_ZN13NoelleRuntime12reserveCoresEj(%class.NoelleRuntime*, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 8
  %4 = tail call i32 @pthread_spin_lock(i32* nonnull %3) #10
  %5 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8, !tbaa !12
  %7 = icmp ult i32 %6, %1
  %8 = select i1 %7, i32 %6, i32 %1
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i32 1, i32 %8
  %11 = sub i32 %6, %10
  store i32 %11, i32* %5, align 8, !tbaa !12
  %12 = tail call i32 @pthread_spin_unlock(i32* nonnull %3) #10
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN13NoelleRuntime12releaseCoresEj(%class.NoelleRuntime*, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.23, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11.22, i64 0, i64 0), i32 1077, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZN13NoelleRuntime12releaseCoresEj, i64 0, i64 0)) #30
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 8
  %7 = tail call i32 @pthread_spin_lock(i32* nonnull %6) #10
  %8 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8, !tbaa !12
  %10 = add i32 %9, %1
  store i32 %10, i32* %8, align 8, !tbaa !12
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %17

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 4, !tbaa !183
  %15 = icmp ugt i32 %10, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @__assert_fail(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.14.21, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11.22, i64 0, i64 0), i32 1083, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZN13NoelleRuntime12releaseCoresEj, i64 0, i64 0)) #30
  unreachable

17:                                               ; preds = %12, %5
  %18 = tail call i32 @pthread_spin_unlock(i32* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN13NoelleRuntime16releaseDOALLArgsEj(%class.NoelleRuntime*, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 1
  %4 = tail call i32 @pthread_spin_lock(i32* nonnull %3) #10
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8, !tbaa !180
  %8 = lshr i64 %5, 6
  %9 = getelementptr inbounds i64, i64* %7, i64 %8
  %10 = and i64 %5, 63
  %11 = shl i64 1, %10
  %12 = load i64, i64* %9, align 8, !tbaa !149
  %13 = or i64 %12, %11
  store i64 %13, i64* %9, align 8, !tbaa !149
  %14 = tail call i32 @pthread_spin_unlock(i32* nonnull %3) #10
  ret void
}

; Function Attrs: uwtable
define dso_local { i32, i64 } @NOELLE_HELIX_dispatcher_sequentialSegments(void (i8*, i8*, i8*, i8*, i64, i64, i64*)*, i8*, i8*, i64, i64) local_unnamed_addr #14 {
  %6 = tail call fastcc { i32, i64 } @_ZL23NOELLE_HELIX_dispatcherPFvPvS_S_S_llPmES_S_llb(void (i8*, i8*, i8*, i8*, i64, i64, i64*)* %0, i8* %1, i8* %2, i64 %3, i64 %4, i1 zeroext true)
  ret { i32, i64 } %6
}

; Function Attrs: uwtable
define internal fastcc { i32, i64 } @_ZL23NOELLE_HELIX_dispatcherPFvPvS_S_S_llPmES_S_llb(void (i8*, i8*, i8*, i8*, i64, i64, i64*)*, i8*, i8*, i64, i64, i1 zeroext) unnamed_addr #14 {
  %7 = alloca i8*, align 8
  %8 = alloca %struct.NOELLE_HELIX_args_t*, align 8
  %9 = alloca i64, align 8
  %10 = icmp eq void (i8*, i8*, i8*, i8*, i64, i64, i64*)* %0, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  tail call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11.22, i64 0, i64 0), i32 496, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @__PRETTY_FUNCTION__._ZL23NOELLE_HELIX_dispatcherPFvPvS_S_S_llPmES_S_llb, i64 0, i64 0)) #30
  unreachable

12:                                               ; preds = %6
  %13 = icmp eq i8* %1, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %12
  tail call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17.24, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11.22, i64 0, i64 0), i32 497, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @__PRETTY_FUNCTION__._ZL23NOELLE_HELIX_dispatcherPFvPvS_S_S_llPmES_S_llb, i64 0, i64 0)) #30
  unreachable

15:                                               ; preds = %12
  %16 = icmp sgt i64 %3, 1
  br i1 %16, label %18, label %17

17:                                               ; preds = %15
  tail call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11.22, i64 0, i64 0), i32 498, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @__PRETTY_FUNCTION__._ZL23NOELLE_HELIX_dispatcherPFvPvS_S_S_llPmES_S_llb, i64 0, i64 0)) #30
  unreachable

18:                                               ; preds = %15
  %19 = load %"class.MARC::ThreadPoolForCSingleQueue"*, %"class.MARC::ThreadPoolForCSingleQueue"** getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 0), align 8, !tbaa !186
  %20 = trunc i64 %3 to i32
  %21 = tail call i32 @pthread_spin_lock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  %22 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %23 = icmp ult i32 %22, %20
  %24 = select i1 %23, i32 %22, i32 %20
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, i32 1, i32 %24
  %27 = sub i32 %22, %26
  store i32 %27, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %28 = tail call i32 @pthread_spin_unlock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  %29 = select i1 %5, i32 %26, i32 1
  %30 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  store i8* null, i8** %7, align 8, !tbaa !72
  %31 = shl nsw i64 %4, 6
  %32 = icmp sgt i64 %4, 0
  br i1 %32, label %33, label %.loopexit11

33:                                               ; preds = %18
  %34 = zext i32 %29 to i64
  %35 = mul nsw i64 %31, %34
  %36 = call i32 @posix_memalign(i8** nonnull %7, i64 64, i64 %35) #10
  %37 = load i8*, i8** %7, align 8, !tbaa !72
  %38 = icmp eq i8* %37, null
  br i1 %38, label %69, label %39

39:                                               ; preds = %33
  %40 = ptrtoint i8* %37 to i64
  %41 = bitcast i8** %7 to i64*
  br label %42

42:                                               ; preds = %59, %39
  %43 = phi i64 [ %40, %39 ], [ %60, %59 ]
  %44 = phi i64 [ 0, %39 ], [ %57, %59 ]
  %45 = mul nsw i64 %44, %31
  %46 = add i64 %45, %43
  %47 = icmp eq i64 %44, 0
  br i1 %47, label %.preheader, label %.preheader9

.preheader9:                                      ; preds = %42, %.preheader9
  %48 = phi i64 [ %55, %.preheader9 ], [ 0, %42 ]
  %49 = shl i64 %48, 6
  %50 = and i64 %49, 4294967232
  %51 = add i64 %50, %46
  %52 = inttoptr i64 %51 to i32*
  %53 = call i32 @pthread_spin_init(i32* %52, i32 0) #10
  %54 = call i32 @pthread_spin_lock(i32* %52) #10
  %55 = add nuw nsw i64 %48, 1
  %56 = icmp eq i64 %55, %4
  br i1 %56, label %.loopexit8, label %.preheader9

.loopexit8:                                       ; preds = %.preheader9, %.preheader
  %57 = add nuw nsw i64 %44, 1
  %58 = icmp ult i64 %57, %34
  br i1 %58, label %59, label %.loopexit11

59:                                               ; preds = %.loopexit8
  %60 = load i64, i64* %41, align 8, !tbaa !72
  br label %42

.preheader:                                       ; preds = %42, %.preheader
  %61 = phi i64 [ %67, %.preheader ], [ 0, %42 ]
  %62 = shl i64 %61, 6
  %63 = and i64 %62, 4294967232
  %64 = add i64 %63, %46
  %65 = inttoptr i64 %64 to i32*
  %66 = call i32 @pthread_spin_init(i32* %65, i32 0) #10
  %67 = add nuw nsw i64 %61, 1
  %68 = icmp eq i64 %67, %4
  br i1 %68, label %.loopexit8, label %.preheader

69:                                               ; preds = %33
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !72
  %71 = zext i32 %26 to i64
  %72 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.19.25, i64 0, i64 0), i64 %71) #35
  call void @abort() #30
  unreachable

.loopexit11:                                      ; preds = %.loopexit8, %18
  %73 = bitcast %struct.NOELLE_HELIX_args_t** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #10
  %74 = bitcast %struct.NOELLE_HELIX_args_t** %8 to i8**
  %75 = add i32 %26, -1
  %76 = zext i32 %75 to i64
  %77 = mul nuw nsw i64 %76, 72
  %78 = call i32 @posix_memalign(i8** nonnull %74, i64 64, i64 %77) #10
  %79 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #10
  store i64 0, i64* %9, align 8, !tbaa !149
  %80 = icmp eq i32 %75, 0
  br i1 %80, label %127, label %81

81:                                               ; preds = %.loopexit11
  %82 = bitcast i8** %7 to i64*
  %83 = zext i32 %26 to i64
  %84 = bitcast %"class.MARC::ThreadPoolForCSingleQueue"* %19 to void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)***
  br label %93

85:                                               ; preds = %93
  %86 = urem i32 %75, %29
  %87 = load i8*, i8** %7, align 8, !tbaa !72
  %88 = ptrtoint i8* %87 to i64
  %89 = zext i32 %86 to i64
  %90 = mul nsw i64 %31, %89
  %91 = add i64 %90, %88
  %92 = inttoptr i64 %91 to i8*
  call void %0(i8* nonnull %1, i8* %2, i8* %92, i8* %87, i64 %76, i64 %83, i64* nonnull %9)
  br label %142

93:                                               ; preds = %81, %93
  %94 = phi i64 [ 0, %81 ], [ %97, %93 ]
  %95 = trunc i64 %94 to i32
  %96 = urem i32 %95, %29
  %97 = add nuw nsw i64 %94, 1
  %98 = trunc i64 %97 to i32
  %99 = urem i32 %98, %29
  %100 = load i64, i64* %82, align 8, !tbaa !72
  %101 = zext i32 %96 to i64
  %102 = mul nsw i64 %31, %101
  %103 = add i64 %100, %102
  %104 = inttoptr i64 %103 to i8*
  %105 = zext i32 %99 to i64
  %106 = mul nsw i64 %31, %105
  %107 = add i64 %106, %100
  %108 = inttoptr i64 %107 to i8*
  %109 = load %struct.NOELLE_HELIX_args_t*, %struct.NOELLE_HELIX_args_t** %8, align 8, !tbaa !72
  %110 = getelementptr inbounds %struct.NOELLE_HELIX_args_t, %struct.NOELLE_HELIX_args_t* %109, i64 %94
  %111 = getelementptr inbounds %struct.NOELLE_HELIX_args_t, %struct.NOELLE_HELIX_args_t* %110, i64 0, i32 0
  store void (i8*, i8*, i8*, i8*, i64, i64, i64*)* %0, void (i8*, i8*, i8*, i8*, i64, i64, i64*)** %111, align 8, !tbaa !265
  %112 = getelementptr inbounds %struct.NOELLE_HELIX_args_t, %struct.NOELLE_HELIX_args_t* %109, i64 %94, i32 1
  store i8* %1, i8** %112, align 8, !tbaa !267
  %113 = getelementptr inbounds %struct.NOELLE_HELIX_args_t, %struct.NOELLE_HELIX_args_t* %109, i64 %94, i32 2
  store i8* %2, i8** %113, align 8, !tbaa !268
  %114 = getelementptr inbounds %struct.NOELLE_HELIX_args_t, %struct.NOELLE_HELIX_args_t* %109, i64 %94, i32 3
  store i8* %104, i8** %114, align 8, !tbaa !269
  %115 = getelementptr inbounds %struct.NOELLE_HELIX_args_t, %struct.NOELLE_HELIX_args_t* %109, i64 %94, i32 4
  store i8* %108, i8** %115, align 8, !tbaa !270
  %116 = getelementptr inbounds %struct.NOELLE_HELIX_args_t, %struct.NOELLE_HELIX_args_t* %109, i64 %94, i32 5
  store i64 %94, i64* %116, align 8, !tbaa !271
  %117 = getelementptr inbounds %struct.NOELLE_HELIX_args_t, %struct.NOELLE_HELIX_args_t* %109, i64 %94, i32 6
  store i64 %83, i64* %117, align 8, !tbaa !272
  %118 = getelementptr inbounds %struct.NOELLE_HELIX_args_t, %struct.NOELLE_HELIX_args_t* %109, i64 %94, i32 7
  store i64* %9, i64** %118, align 8, !tbaa !273
  %119 = getelementptr inbounds %struct.NOELLE_HELIX_args_t, %struct.NOELLE_HELIX_args_t* %109, i64 %94, i32 8
  %120 = call i32 @pthread_spin_init(i32* nonnull %119, i32 0) #10
  %121 = call i32 @pthread_spin_lock(i32* nonnull %119) #10
  %122 = bitcast %struct.NOELLE_HELIX_args_t* %110 to i8*
  %123 = load void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)**, void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)*** %84, align 8, !tbaa !73
  %124 = getelementptr inbounds void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)*, void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)** %123, i64 2
  %125 = load void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)*, void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)** %124, align 8
  call void %125(%"class.MARC::ThreadPoolForCSingleQueue"* %19, void (i8*)* nonnull @_ZL22NOELLE_HELIXTrampolinePv, i8* %122)
  %126 = icmp ult i64 %97, %76
  br i1 %126, label %93, label %85

127:                                              ; preds = %.loopexit11
  %128 = load i8*, i8** %7, align 8, !tbaa !72
  call void %0(i8* nonnull %1, i8* %2, i8* %128, i8* %128, i64 %76, i64 1, i64* nonnull %9)
  br label %.loopexit

.loopexit:                                        ; preds = %142, %127
  %129 = call i32 @pthread_spin_lock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  %130 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %131 = add i32 %130, %26
  store i32 %131, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %132 = icmp sgt i32 %131, -1
  %133 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 7), align 4
  %134 = icmp ugt i32 %131, %133
  %135 = and i1 %132, %134
  br i1 %135, label %136, label %137

136:                                              ; preds = %.loopexit
  call void @__assert_fail(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.14.21, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11.22, i64 0, i64 0), i32 1083, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZN13NoelleRuntime12releaseCoresEj, i64 0, i64 0)) #30
  unreachable

137:                                              ; preds = %.loopexit
  %138 = call i32 @pthread_spin_unlock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  %139 = load i8*, i8** %74, align 8, !tbaa !72
  call void @free(i8* %139) #10
  %140 = load i8*, i8** %7, align 8, !tbaa !72
  call void @free(i8* %140) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  %141 = insertvalue { i32, i64 } undef, i32 %26, 0
  ret { i32, i64 } %141

142:                                              ; preds = %85, %142
  %143 = phi i64 [ %147, %142 ], [ 0, %85 ]
  %144 = load %struct.NOELLE_HELIX_args_t*, %struct.NOELLE_HELIX_args_t** %8, align 8, !tbaa !72
  %145 = getelementptr inbounds %struct.NOELLE_HELIX_args_t, %struct.NOELLE_HELIX_args_t* %144, i64 %143, i32 8
  %146 = call i32 @pthread_spin_lock(i32* nonnull %145) #10
  %147 = add nuw nsw i64 %143, 1
  %148 = icmp ult i64 %147, %76
  br i1 %148, label %142, label %.loopexit
}

; Function Attrs: nofree nounwind
declare dso_local i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #6

; Function Attrs: uwtable
define internal void @_ZL22NOELLE_HELIXTrampolinePv(i8*) #14 {
  %2 = bitcast i8* %0 to void (i8*, i8*, i8*, i8*, i64, i64, i64*)**
  %3 = load void (i8*, i8*, i8*, i8*, i64, i64, i64*)*, void (i8*, i8*, i8*, i8*, i64, i64, i64*)** %2, align 8, !tbaa !265
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !267
  %7 = getelementptr inbounds i8, i8* %0, i64 16
  %8 = bitcast i8* %7 to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !268
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = bitcast i8* %10 to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !269
  %13 = getelementptr inbounds i8, i8* %0, i64 32
  %14 = bitcast i8* %13 to i8**
  %15 = load i8*, i8** %14, align 8, !tbaa !270
  %16 = getelementptr inbounds i8, i8* %0, i64 40
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8, !tbaa !271
  %19 = getelementptr inbounds i8, i8* %0, i64 48
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8, !tbaa !272
  %22 = getelementptr inbounds i8, i8* %0, i64 56
  %23 = bitcast i8* %22 to i64**
  %24 = load i64*, i64** %23, align 8, !tbaa !273
  tail call void %3(i8* %6, i8* %9, i8* %12, i8* %15, i64 %18, i64 %21, i64* %24)
  %25 = getelementptr inbounds i8, i8* %0, i64 64
  %26 = bitcast i8* %25 to i32*
  %27 = tail call i32 @pthread_spin_unlock(i32* nonnull %26) #10
  ret void
}

; Function Attrs: uwtable
define dso_local { i32, i64 } @NOELLE_HELIX_dispatcher_criticalSections(void (i8*, i8*, i8*, i8*, i64, i64, i64*)*, i8*, i8*, i64, i64) local_unnamed_addr #14 {
  %6 = tail call fastcc { i32, i64 } @_ZL23NOELLE_HELIX_dispatcherPFvPvS_S_S_llPmES_S_llb(void (i8*, i8*, i8*, i8*, i64, i64, i64*)* %0, i8* %1, i8* %2, i64 %3, i64 %4, i1 zeroext false)
  ret { i32, i64 } %6
}

; Function Attrs: nounwind uwtable
define dso_local void @HELIX_wait(i8*) local_unnamed_addr #3 {
  %2 = bitcast i8* %0 to i32*
  %3 = tail call i32 @pthread_spin_lock(i32* %2) #10
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @HELIX_signal(i8*) local_unnamed_addr #3 {
  %2 = bitcast i8* %0 to i32*
  %3 = tail call i32 @pthread_spin_unlock(i32* %2) #10
  ret void
}

; Function Attrs: uwtable
define dso_local void @stageExecuter(void (i8*, i8*)* nocapture, i8*, i8*) local_unnamed_addr #14 {
  tail call void %0(i8* %1, i8* %2)
  ret void
}

; Function Attrs: uwtable
define dso_local { i32, i64 } @NOELLE_DSWPDispatcher(i8*, i64* nocapture readonly, i8* nocapture readonly, i64, i64) local_unnamed_addr #14 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = load %"class.MARC::ThreadPoolForCSingleQueue"*, %"class.MARC::ThreadPoolForCSingleQueue"** getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 0), align 8, !tbaa !186
  %7 = trunc i64 %3 to i32
  %8 = tail call i32 @pthread_spin_lock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  %9 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %10 = icmp ult i32 %9, %7
  %11 = select i1 %10, i32 %9, i32 %7
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %12, i32 1, i32 %11
  %14 = sub i32 %9, %13
  store i32 %14, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %15 = tail call i32 @pthread_spin_unlock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  %16 = alloca i8*, i64 %4, align 16
  %17 = icmp sgt i64 %4, 0
  br i1 %17, label %.preheader10, label %.loopexit11

.loopexit11:                                      ; preds = %56, %5
  %18 = shl i64 %3, 6
  %19 = tail call noalias i8* @malloc(i64 %18) #10
  %20 = bitcast i8* %19 to %struct.NOELLE_DSWP_args_t*
  %21 = bitcast i8* %2 to i8**
  %22 = icmp sgt i64 %3, 0
  br i1 %22, label %23, label %.loopexit9

23:                                               ; preds = %.loopexit11
  %24 = bitcast %"class.MARC::ThreadPoolForCSingleQueue"* %6 to void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)***
  br label %64

.preheader10:                                     ; preds = %5, %56
  %25 = phi i64 [ %59, %56 ], [ 0, %5 ]
  %26 = getelementptr inbounds i64, i64* %1, i64 %25
  %27 = load i64, i64* %26, align 8, !tbaa !149
  switch i64 %27, label %53 [
    i64 1, label %28
    i64 8, label %33
    i64 16, label %38
    i64 32, label %43
    i64 64, label %48
  ]

28:                                               ; preds = %.preheader10
  %29 = tail call i8* @_Znwm(i64 224) #34
  %30 = bitcast i8* %29 to %"class.MARC::ThreadSafeLockFreeQueue"*
  invoke void @_ZN4MARC23ThreadSafeLockFreeQueueIaEC2Ev(%"class.MARC::ThreadSafeLockFreeQueue"* nonnull %30)
          to label %56 unwind label %31

31:                                               ; preds = %28
  %32 = landingpad { i8*, i32 }
          cleanup
  br label %61

33:                                               ; preds = %.preheader10
  %34 = tail call i8* @_Znwm(i64 224) #34
  %35 = bitcast i8* %34 to %"class.MARC::ThreadSafeLockFreeQueue"*
  invoke void @_ZN4MARC23ThreadSafeLockFreeQueueIaEC2Ev(%"class.MARC::ThreadSafeLockFreeQueue"* nonnull %35)
          to label %56 unwind label %36

36:                                               ; preds = %33
  %37 = landingpad { i8*, i32 }
          cleanup
  br label %61

38:                                               ; preds = %.preheader10
  %39 = tail call i8* @_Znwm(i64 224) #34
  %40 = bitcast i8* %39 to %"class.MARC::ThreadSafeLockFreeQueue.101"*
  invoke void @_ZN4MARC23ThreadSafeLockFreeQueueIsEC2Ev(%"class.MARC::ThreadSafeLockFreeQueue.101"* nonnull %40)
          to label %56 unwind label %41

41:                                               ; preds = %38
  %42 = landingpad { i8*, i32 }
          cleanup
  br label %61

43:                                               ; preds = %.preheader10
  %44 = tail call i8* @_Znwm(i64 224) #34
  %45 = bitcast i8* %44 to %"class.MARC::ThreadSafeLockFreeQueue.108"*
  invoke void @_ZN4MARC23ThreadSafeLockFreeQueueIiEC2Ev(%"class.MARC::ThreadSafeLockFreeQueue.108"* nonnull %45)
          to label %56 unwind label %46

46:                                               ; preds = %43
  %47 = landingpad { i8*, i32 }
          cleanup
  br label %61

48:                                               ; preds = %.preheader10
  %49 = tail call i8* @_Znwm(i64 224) #34
  %50 = bitcast i8* %49 to %"class.MARC::ThreadSafeLockFreeQueue.115"*
  invoke void @_ZN4MARC23ThreadSafeLockFreeQueueIlEC2Ev(%"class.MARC::ThreadSafeLockFreeQueue.115"* nonnull %50)
          to label %56 unwind label %51

51:                                               ; preds = %48
  %52 = landingpad { i8*, i32 }
          cleanup
  br label %61

53:                                               ; preds = %.preheader10
  %54 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cerr, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12.26, i64 0, i64 0))
  %55 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) %54)
  tail call void @abort() #30
  unreachable

56:                                               ; preds = %48, %43, %38, %33, %28
  %57 = phi i8* [ %29, %28 ], [ %34, %33 ], [ %39, %38 ], [ %44, %43 ], [ %49, %48 ]
  %58 = getelementptr inbounds i8*, i8** %16, i64 %25
  store i8* %57, i8** %58, align 8, !tbaa !72
  %59 = add nuw nsw i64 %25, 1
  %60 = icmp eq i64 %59, %4
  br i1 %60, label %.loopexit11, label %.preheader10

61:                                               ; preds = %51, %46, %41, %36, %31
  %62 = phi { i8*, i32 } [ %52, %51 ], [ %47, %46 ], [ %42, %41 ], [ %37, %36 ], [ %32, %31 ]
  %63 = phi i8* [ %49, %51 ], [ %44, %46 ], [ %39, %41 ], [ %34, %36 ], [ %29, %31 ]
  tail call void @_ZdlPv(i8* nonnull %63) #32
  resume { i8*, i32 } %62

64:                                               ; preds = %64, %23
  %65 = phi i64 [ 0, %23 ], [ %81, %64 ]
  %66 = getelementptr inbounds %struct.NOELLE_DSWP_args_t, %struct.NOELLE_DSWP_args_t* %20, i64 %65
  %67 = getelementptr inbounds i8*, i8** %21, i64 %65
  %68 = bitcast i8** %67 to i64*
  %69 = load i64, i64* %68, align 8, !tbaa !72
  %70 = bitcast %struct.NOELLE_DSWP_args_t* %66 to i64*
  store i64 %69, i64* %70, align 8, !tbaa !274
  %71 = getelementptr inbounds %struct.NOELLE_DSWP_args_t, %struct.NOELLE_DSWP_args_t* %20, i64 %65, i32 1
  store i8* %0, i8** %71, align 8, !tbaa !276
  %72 = getelementptr inbounds %struct.NOELLE_DSWP_args_t, %struct.NOELLE_DSWP_args_t* %20, i64 %65, i32 2
  %73 = bitcast i8** %72 to i8***
  store i8** %16, i8*** %73, align 8, !tbaa !277
  %74 = getelementptr inbounds %struct.NOELLE_DSWP_args_t, %struct.NOELLE_DSWP_args_t* %20, i64 %65, i32 3
  %75 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* nonnull %74, %"struct.std::_Head_base.143"* null) #10
  %76 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %74) #10
  %77 = bitcast %struct.NOELLE_DSWP_args_t* %66 to i8*
  %78 = load void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)**, void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)*** %24, align 8, !tbaa !73
  %79 = getelementptr inbounds void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)*, void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)** %78, i64 2
  %80 = load void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)*, void (%"class.MARC::ThreadPoolForCSingleQueue"*, void (i8*)*, i8*)** %79, align 8
  call void %80(%"class.MARC::ThreadPoolForCSingleQueue"* %6, void (i8*)* nonnull @_ZL21NOELLE_DSWPTrampolinePv, i8* %77)
  %81 = add nuw nsw i64 %65, 1
  %82 = icmp eq i64 %81, %3
  br i1 %82, label %.preheader8, label %64

.loopexit9:                                       ; preds = %.preheader8, %.loopexit11
  %83 = call i32 @pthread_spin_lock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  %84 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %85 = add i32 %84, %13
  store i32 %85, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %86 = icmp sgt i32 %85, -1
  %87 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 7), align 4
  %88 = icmp ugt i32 %85, %87
  %89 = and i1 %86, %88
  br i1 %89, label %90, label %91

90:                                               ; preds = %.loopexit9
  call void @__assert_fail(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.14.21, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11.22, i64 0, i64 0), i32 1083, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__PRETTY_FUNCTION__._ZN13NoelleRuntime12releaseCoresEj, i64 0, i64 0)) #30
  unreachable

91:                                               ; preds = %.loopexit9
  %92 = call i32 @pthread_spin_unlock(i32* nonnull getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 8)) #10
  br i1 %17, label %.preheader, label %.loopexit

.preheader8:                                      ; preds = %64, %.preheader8
  %93 = phi i64 [ %96, %.preheader8 ], [ 0, %64 ]
  %94 = getelementptr inbounds %struct.NOELLE_DSWP_args_t, %struct.NOELLE_DSWP_args_t* %20, i64 %93, i32 3
  %95 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* nonnull %94) #10
  %96 = add nuw nsw i64 %93, 1
  %97 = icmp eq i64 %96, %3
  br i1 %97, label %.loopexit9, label %.preheader8

.loopexit:                                        ; preds = %132, %91
  call void @free(i8* %19) #10
  %98 = insertvalue { i32, i64 } undef, i32 %7, 0
  ret { i32, i64 } %98

.preheader:                                       ; preds = %91, %132
  %99 = phi i64 [ %133, %132 ], [ 0, %91 ]
  %100 = getelementptr inbounds i64, i64* %1, i64 %99
  %101 = load i64, i64* %100, align 8, !tbaa !149
  switch i64 %101, label %132 [
    i64 1, label %102
    i64 8, label %108
    i64 16, label %114
    i64 32, label %120
    i64 64, label %126
  ]

102:                                              ; preds = %.preheader
  %103 = getelementptr inbounds i8*, i8** %16, i64 %99
  %104 = load i8*, i8** %103, align 8, !tbaa !72
  %105 = icmp eq i8* %104, null
  br i1 %105, label %132, label %106

106:                                              ; preds = %102
  %107 = bitcast i8* %104 to %"class.MARC::ThreadSafeLockFreeQueue"*
  call void @_ZN4MARC23ThreadSafeLockFreeQueueIaED2Ev(%"class.MARC::ThreadSafeLockFreeQueue"* nonnull %107) #10
  call void @_ZdlPv(i8* nonnull %104) #32
  br label %132

108:                                              ; preds = %.preheader
  %109 = getelementptr inbounds i8*, i8** %16, i64 %99
  %110 = load i8*, i8** %109, align 8, !tbaa !72
  %111 = icmp eq i8* %110, null
  br i1 %111, label %132, label %112

112:                                              ; preds = %108
  %113 = bitcast i8* %110 to %"class.MARC::ThreadSafeLockFreeQueue"*
  call void @_ZN4MARC23ThreadSafeLockFreeQueueIaED2Ev(%"class.MARC::ThreadSafeLockFreeQueue"* nonnull %113) #10
  call void @_ZdlPv(i8* nonnull %110) #32
  br label %132

114:                                              ; preds = %.preheader
  %115 = getelementptr inbounds i8*, i8** %16, i64 %99
  %116 = load i8*, i8** %115, align 8, !tbaa !72
  %117 = icmp eq i8* %116, null
  br i1 %117, label %132, label %118

118:                                              ; preds = %114
  %119 = bitcast i8* %116 to %"class.MARC::ThreadSafeLockFreeQueue.101"*
  call void @_ZN4MARC23ThreadSafeLockFreeQueueIsED2Ev(%"class.MARC::ThreadSafeLockFreeQueue.101"* nonnull %119) #10
  call void @_ZdlPv(i8* nonnull %116) #32
  br label %132

120:                                              ; preds = %.preheader
  %121 = getelementptr inbounds i8*, i8** %16, i64 %99
  %122 = load i8*, i8** %121, align 8, !tbaa !72
  %123 = icmp eq i8* %122, null
  br i1 %123, label %132, label %124

124:                                              ; preds = %120
  %125 = bitcast i8* %122 to %"class.MARC::ThreadSafeLockFreeQueue.108"*
  call void @_ZN4MARC23ThreadSafeLockFreeQueueIiED2Ev(%"class.MARC::ThreadSafeLockFreeQueue.108"* nonnull %125) #10
  call void @_ZdlPv(i8* nonnull %122) #32
  br label %132

126:                                              ; preds = %.preheader
  %127 = getelementptr inbounds i8*, i8** %16, i64 %99
  %128 = load i8*, i8** %127, align 8, !tbaa !72
  %129 = icmp eq i8* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = bitcast i8* %128 to %"class.MARC::ThreadSafeLockFreeQueue.115"*
  call void @_ZN4MARC23ThreadSafeLockFreeQueueIlED2Ev(%"class.MARC::ThreadSafeLockFreeQueue.115"* nonnull %131) #10
  call void @_ZdlPv(i8* nonnull %128) #32
  br label %132

132:                                              ; preds = %.preheader, %106, %102, %112, %108, %118, %114, %124, %120, %130, %126
  %133 = add nuw nsw i64 %99, 1
  %134 = icmp eq i64 %133, %4
  br i1 %134, label %.loopexit, label %.preheader
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIaEC2Ev(%"class.MARC::ThreadSafeLockFreeQueue"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIaEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::queue.61", %"class.std::queue.61"* %3, i64 0, i32 0, i32 0
  %5 = bitcast %"class.std::queue.61"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 80, i1 false) #10
  tail call void @_ZNSt11_Deque_baseIaSaIaEE17_M_initialize_mapEm(%"class.std::_Deque_base.63"* nonnull %4, i64 0)
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8 1, i8* %6, align 1, !tbaa !123
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC23ThreadSafeLockFreeQueueIaEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 0, i32 4
  store i8 0, i8* %7, align 8, !tbaa !278
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %8, align 1, !tbaa !283
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 0, i32 3
  store i64 16, i64* %9, align 8, !tbaa !284
  %10 = tail call noalias i8* @malloc(i64 183) #10
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = tail call i8* @__cxa_allocate_exception(i64 8) #10
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !73
  invoke void @__cxa_throw(i8* %13, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*)) #33
          to label %15 unwind label %39

15:                                               ; preds = %12
  unreachable

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 0, i32 2
  %19 = ptrtoint i8* %10 to i64
  %20 = sub i64 0, %19
  %21 = and i64 %20, 7
  %22 = getelementptr inbounds i8, i8* %10, i64 %21
  %23 = getelementptr inbounds i8, i8* %22, i64 160
  %24 = getelementptr inbounds i8, i8* %22, i64 64
  %25 = getelementptr inbounds i8, i8* %22, i64 128
  %26 = getelementptr inbounds i8, i8* %22, i64 136
  %27 = bitcast i8* %26 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 16, i1 false)
  store i8* %23, i8** %27, align 8, !tbaa !285
  %28 = getelementptr inbounds i8, i8* %22, i64 144
  %29 = bitcast i8* %28 to i64*
  store i64 15, i64* %29, align 8, !tbaa !289
  %30 = getelementptr inbounds i8, i8* %22, i64 152
  %31 = bitcast i8* %30 to i8**
  store i8* %10, i8** %31, align 8, !tbaa !290
  %32 = ptrtoint i8* %22 to i64
  %33 = bitcast i8* %25 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = bitcast %"class.moodycamel::BlockingReaderWriterQueue"* %17 to i64*
  store atomic i64 %32, i64* %34 monotonic, align 8
  %35 = bitcast %"class.moodycamel::weak_atomic"* %18 to i64*
  store atomic i64 %32, i64* %35 monotonic, align 8
  fence seq_cst
  %36 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %36, align 8, !tbaa !291
  %37 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %38 = tail call i32 @sem_init(%union.sem_t* nonnull %37, i32 0, i32 0) #10
  ret void

39:                                               ; preds = %12
  %40 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIaEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %41 = getelementptr inbounds %"class.std::queue.61", %"class.std::queue.61"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8**, i8*** %41, align 8, !tbaa !293
  %43 = icmp eq i8** %42, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = bitcast i8** %42 to i8*
  %46 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %47 = load i8**, i8*** %46, align 8, !tbaa !297
  %48 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %49 = load i8**, i8*** %48, align 8, !tbaa !298
  %50 = getelementptr inbounds i8*, i8** %49, i64 1
  %51 = icmp ult i8** %47, %50
  br i1 %51, label %.preheader, label %59

.preheader:                                       ; preds = %44, %.preheader
  %52 = phi i8** [ %54, %.preheader ], [ %47, %44 ]
  %53 = load i8*, i8** %52, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %53) #10
  %54 = getelementptr inbounds i8*, i8** %52, i64 1
  %55 = icmp ult i8** %52, %49
  br i1 %55, label %.preheader, label %56

56:                                               ; preds = %.preheader
  %57 = bitcast %"class.std::queue.61"* %3 to i8**
  %58 = load i8*, i8** %57, align 8, !tbaa !293
  br label %59

59:                                               ; preds = %56, %44
  %60 = phi i8* [ %58, %56 ], [ %45, %44 ]
  tail call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %39, %59
  resume { i8*, i32 } %40
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIsEC2Ev(%"class.MARC::ThreadSafeLockFreeQueue.101"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIsEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::queue.70", %"class.std::queue.70"* %3, i64 0, i32 0, i32 0
  %5 = bitcast %"class.std::queue.70"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 80, i1 false) #10
  tail call void @_ZNSt11_Deque_baseIsSaIsEE17_M_initialize_mapEm(%"class.std::_Deque_base.72"* nonnull %4, i64 0)
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8 1, i8* %6, align 1, !tbaa !123
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC23ThreadSafeLockFreeQueueIsEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 0, i32 4
  store i8 0, i8* %7, align 8, !tbaa !299
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %8, align 1, !tbaa !304
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 0, i32 3
  store i64 16, i64* %9, align 8, !tbaa !305
  %10 = tail call noalias i8* @malloc(i64 200) #10
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = tail call i8* @__cxa_allocate_exception(i64 8) #10
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !73
  invoke void @__cxa_throw(i8* %13, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*)) #33
          to label %15 unwind label %42

15:                                               ; preds = %12
  unreachable

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 0, i32 2
  %19 = ptrtoint i8* %10 to i64
  %20 = sub i64 0, %19
  %21 = and i64 %20, 7
  %22 = getelementptr inbounds i8, i8* %10, i64 %21
  %23 = getelementptr inbounds i8, i8* %22, i64 160
  %24 = ptrtoint i8* %23 to i64
  %25 = and i64 %24, 1
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  %27 = getelementptr inbounds i8, i8* %22, i64 64
  %28 = getelementptr inbounds i8, i8* %22, i64 128
  %29 = getelementptr inbounds i8, i8* %22, i64 136
  %30 = bitcast i8* %29 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false)
  store i8* %26, i8** %30, align 8, !tbaa !306
  %31 = getelementptr inbounds i8, i8* %22, i64 144
  %32 = bitcast i8* %31 to i64*
  store i64 15, i64* %32, align 8, !tbaa !308
  %33 = getelementptr inbounds i8, i8* %22, i64 152
  %34 = bitcast i8* %33 to i8**
  store i8* %10, i8** %34, align 8, !tbaa !309
  %35 = ptrtoint i8* %22 to i64
  %36 = bitcast i8* %28 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = bitcast %"class.moodycamel::BlockingReaderWriterQueue.102"* %17 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = bitcast %"class.moodycamel::weak_atomic.104"* %18 to i64*
  store atomic i64 %35, i64* %38 monotonic, align 8
  fence seq_cst
  %39 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %39, align 8, !tbaa !291
  %40 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %41 = tail call i32 @sem_init(%union.sem_t* nonnull %40, i32 0, i32 0) #10
  ret void

42:                                               ; preds = %12
  %43 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIsEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %44 = getelementptr inbounds %"class.std::queue.70", %"class.std::queue.70"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16**, i16*** %44, align 8, !tbaa !310
  %46 = icmp eq i16** %45, null
  br i1 %46, label %65, label %47

47:                                               ; preds = %42
  %48 = bitcast i16** %45 to i8*
  %49 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %50 = load i16**, i16*** %49, align 8, !tbaa !314
  %51 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %52 = load i16**, i16*** %51, align 8, !tbaa !315
  %53 = getelementptr inbounds i16*, i16** %52, i64 1
  %54 = icmp ult i16** %50, %53
  br i1 %54, label %.preheader, label %63

.preheader:                                       ; preds = %47, %.preheader
  %55 = phi i16** [ %58, %.preheader ], [ %50, %47 ]
  %56 = bitcast i16** %55 to i8**
  %57 = load i8*, i8** %56, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %57) #10
  %58 = getelementptr inbounds i16*, i16** %55, i64 1
  %59 = icmp ult i16** %55, %52
  br i1 %59, label %.preheader, label %60

60:                                               ; preds = %.preheader
  %61 = bitcast %"class.std::queue.70"* %3 to i8**
  %62 = load i8*, i8** %61, align 8, !tbaa !310
  br label %63

63:                                               ; preds = %60, %47
  %64 = phi i8* [ %62, %60 ], [ %48, %47 ]
  tail call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %42, %63
  resume { i8*, i32 } %43
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIiEC2Ev(%"class.MARC::ThreadSafeLockFreeQueue.108"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::queue.79", %"class.std::queue.79"* %3, i64 0, i32 0, i32 0
  %5 = bitcast %"class.std::queue.79"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 80, i1 false) #10
  tail call void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base.81"* nonnull %4, i64 0)
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8 1, i8* %6, align 1, !tbaa !123
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC23ThreadSafeLockFreeQueueIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 0, i32 4
  store i8 0, i8* %7, align 8, !tbaa !316
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %8, align 1, !tbaa !321
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 0, i32 3
  store i64 16, i64* %9, align 8, !tbaa !322
  %10 = tail call noalias i8* @malloc(i64 234) #10
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = tail call i8* @__cxa_allocate_exception(i64 8) #10
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !73
  invoke void @__cxa_throw(i8* %13, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*)) #33
          to label %15 unwind label %43

15:                                               ; preds = %12
  unreachable

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 0, i32 2
  %19 = ptrtoint i8* %10 to i64
  %20 = sub i64 0, %19
  %21 = and i64 %20, 7
  %22 = getelementptr inbounds i8, i8* %10, i64 %21
  %23 = getelementptr inbounds i8, i8* %22, i64 160
  %24 = ptrtoint i8* %23 to i64
  %25 = sub i64 0, %24
  %26 = and i64 %25, 3
  %27 = getelementptr inbounds i8, i8* %23, i64 %26
  %28 = getelementptr inbounds i8, i8* %22, i64 64
  %29 = getelementptr inbounds i8, i8* %22, i64 128
  %30 = getelementptr inbounds i8, i8* %22, i64 136
  %31 = bitcast i8* %30 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false)
  store i8* %27, i8** %31, align 8, !tbaa !323
  %32 = getelementptr inbounds i8, i8* %22, i64 144
  %33 = bitcast i8* %32 to i64*
  store i64 15, i64* %33, align 8, !tbaa !325
  %34 = getelementptr inbounds i8, i8* %22, i64 152
  %35 = bitcast i8* %34 to i8**
  store i8* %10, i8** %35, align 8, !tbaa !326
  %36 = ptrtoint i8* %22 to i64
  %37 = bitcast i8* %29 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = bitcast %"class.moodycamel::BlockingReaderWriterQueue.109"* %17 to i64*
  store atomic i64 %36, i64* %38 monotonic, align 8
  %39 = bitcast %"class.moodycamel::weak_atomic.111"* %18 to i64*
  store atomic i64 %36, i64* %39 monotonic, align 8
  fence seq_cst
  %40 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %40, align 8, !tbaa !291
  %41 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %42 = tail call i32 @sem_init(%union.sem_t* nonnull %41, i32 0, i32 0) #10
  ret void

43:                                               ; preds = %12
  %44 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %45 = getelementptr inbounds %"class.std::queue.79", %"class.std::queue.79"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i32**, i32*** %45, align 8, !tbaa !327
  %47 = icmp eq i32** %46, null
  br i1 %47, label %66, label %48

48:                                               ; preds = %43
  %49 = bitcast i32** %46 to i8*
  %50 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %51 = load i32**, i32*** %50, align 8, !tbaa !331
  %52 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %53 = load i32**, i32*** %52, align 8, !tbaa !332
  %54 = getelementptr inbounds i32*, i32** %53, i64 1
  %55 = icmp ult i32** %51, %54
  br i1 %55, label %.preheader, label %64

.preheader:                                       ; preds = %48, %.preheader
  %56 = phi i32** [ %59, %.preheader ], [ %51, %48 ]
  %57 = bitcast i32** %56 to i8**
  %58 = load i8*, i8** %57, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %58) #10
  %59 = getelementptr inbounds i32*, i32** %56, i64 1
  %60 = icmp ult i32** %56, %53
  br i1 %60, label %.preheader, label %61

61:                                               ; preds = %.preheader
  %62 = bitcast %"class.std::queue.79"* %3 to i8**
  %63 = load i8*, i8** %62, align 8, !tbaa !327
  br label %64

64:                                               ; preds = %61, %48
  %65 = phi i8* [ %63, %61 ], [ %49, %48 ]
  tail call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %43, %64
  resume { i8*, i32 } %44
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIlEC2Ev(%"class.MARC::ThreadSafeLockFreeQueue.115"*) unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::queue.88", %"class.std::queue.88"* %3, i64 0, i32 0, i32 0
  %5 = bitcast %"class.std::queue.88"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 80, i1 false) #10
  tail call void @_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm(%"class.std::_Deque_base.90"* nonnull %4, i64 0)
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8 1, i8* %6, align 1, !tbaa !123
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC23ThreadSafeLockFreeQueueIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 0, i32 4
  store i8 0, i8* %7, align 8, !tbaa !333
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %8, align 1, !tbaa !338
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 0, i32 3
  store i64 16, i64* %9, align 8, !tbaa !339
  %10 = tail call noalias i8* @malloc(i64 302) #10
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = tail call i8* @__cxa_allocate_exception(i64 8) #10
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !73
  invoke void @__cxa_throw(i8* %13, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*)) #33
          to label %15 unwind label %43

15:                                               ; preds = %12
  unreachable

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 0, i32 2
  %19 = ptrtoint i8* %10 to i64
  %20 = sub i64 0, %19
  %21 = and i64 %20, 7
  %22 = getelementptr inbounds i8, i8* %10, i64 %21
  %23 = getelementptr inbounds i8, i8* %22, i64 160
  %24 = ptrtoint i8* %23 to i64
  %25 = sub i64 0, %24
  %26 = and i64 %25, 7
  %27 = getelementptr inbounds i8, i8* %23, i64 %26
  %28 = getelementptr inbounds i8, i8* %22, i64 64
  %29 = getelementptr inbounds i8, i8* %22, i64 128
  %30 = getelementptr inbounds i8, i8* %22, i64 136
  %31 = bitcast i8* %30 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false)
  store i8* %27, i8** %31, align 8, !tbaa !340
  %32 = getelementptr inbounds i8, i8* %22, i64 144
  %33 = bitcast i8* %32 to i64*
  store i64 15, i64* %33, align 8, !tbaa !342
  %34 = getelementptr inbounds i8, i8* %22, i64 152
  %35 = bitcast i8* %34 to i8**
  store i8* %10, i8** %35, align 8, !tbaa !343
  %36 = ptrtoint i8* %22 to i64
  %37 = bitcast i8* %29 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = bitcast %"class.moodycamel::BlockingReaderWriterQueue.116"* %17 to i64*
  store atomic i64 %36, i64* %38 monotonic, align 8
  %39 = bitcast %"class.moodycamel::weak_atomic.118"* %18 to i64*
  store atomic i64 %36, i64* %39 monotonic, align 8
  fence seq_cst
  %40 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %40, align 8, !tbaa !291
  %41 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %42 = tail call i32 @sem_init(%union.sem_t* nonnull %41, i32 0, i32 0) #10
  ret void

43:                                               ; preds = %12
  %44 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %45 = getelementptr inbounds %"class.std::queue.88", %"class.std::queue.88"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i64**, i64*** %45, align 8, !tbaa !344
  %47 = icmp eq i64** %46, null
  br i1 %47, label %66, label %48

48:                                               ; preds = %43
  %49 = bitcast i64** %46 to i8*
  %50 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %51 = load i64**, i64*** %50, align 8, !tbaa !348
  %52 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %53 = load i64**, i64*** %52, align 8, !tbaa !349
  %54 = getelementptr inbounds i64*, i64** %53, i64 1
  %55 = icmp ult i64** %51, %54
  br i1 %55, label %.preheader, label %64

.preheader:                                       ; preds = %48, %.preheader
  %56 = phi i64** [ %59, %.preheader ], [ %51, %48 ]
  %57 = bitcast i64** %56 to i8**
  %58 = load i8*, i8** %57, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %58) #10
  %59 = getelementptr inbounds i64*, i64** %56, i64 1
  %60 = icmp ult i64** %56, %53
  br i1 %60, label %.preheader, label %61

61:                                               ; preds = %.preheader
  %62 = bitcast %"class.std::queue.88"* %3 to i8**
  %63 = load i8*, i8** %62, align 8, !tbaa !344
  br label %64

64:                                               ; preds = %61, %48
  %65 = phi i8* [ %63, %61 ], [ %49, %48 ]
  tail call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %43, %64
  resume { i8*, i32 } %44
}

; Function Attrs: nounwind
declare dso_local i32 @pthread_mutex_init(%union.pthread_mutex_t*, %"struct.std::_Head_base.143"*) local_unnamed_addr #17

; Function Attrs: uwtable
define internal void @_ZL21NOELLE_DSWPTrampolinePv(i8*) #14 {
  %2 = bitcast i8* %0 to void (i8*, i8*)**
  %3 = load void (i8*, i8*)*, void (i8*, i8*)** %2, align 8, !tbaa !274
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !276
  %7 = getelementptr inbounds i8, i8* %0, i64 16
  %8 = bitcast i8* %7 to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !277
  tail call void %3(i8* %6, i8* %9)
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = bitcast i8* %10 to %union.pthread_mutex_t*
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* nonnull %11) #10
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIaED2Ev(%"class.MARC::ThreadSafeLockFreeQueue"*) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC23ThreadSafeLockFreeQueueIaEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %3 seq_cst, align 1
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %6 = tail call i32 @sem_destroy(%union.sem_t* nonnull %5) #10
  fence seq_cst
  %7 = bitcast %"class.moodycamel::BlockingReaderWriterQueue"* %4 to i64*
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = inttoptr i64 %8 to %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"*
  br label %10

10:                                               ; preds = %.loopexit, %1
  %11 = phi %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* [ %15, %.loopexit ], [ %9, %1 ]
  %12 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %11, i64 0, i32 6
  %13 = bitcast %"class.moodycamel::weak_atomic"* %12 to i64*
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = inttoptr i64 %14 to %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"*
  %16 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %.loopexit, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %11, i64 0, i32 8
  %23 = load i64, i64* %22, align 8, !tbaa !289
  br label %27

.loopexit:                                        ; preds = %27, %10
  %24 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %11, i64 0, i32 9
  %25 = load i8*, i8** %24, align 8, !tbaa !290
  tail call void @free(i8* %25) #10
  %26 = icmp eq %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %15, %9
  br i1 %26, label %32, label %10

27:                                               ; preds = %27, %21
  %28 = phi i64 [ %17, %21 ], [ %30, %27 ]
  %29 = add i64 %28, 1
  %30 = and i64 %29, %23
  %31 = icmp eq i64 %30, %19
  br i1 %31, label %.loopexit, label %27

32:                                               ; preds = %.loopexit
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIaEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::queue.61", %"class.std::queue.61"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8**, i8*** %34, align 8, !tbaa !293
  %36 = icmp eq i8** %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %32
  %38 = bitcast i8** %35 to i8*
  %39 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %40 = load i8**, i8*** %39, align 8, !tbaa !297
  %41 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %42 = load i8**, i8*** %41, align 8, !tbaa !298
  %43 = getelementptr inbounds i8*, i8** %42, i64 1
  %44 = icmp ult i8** %40, %43
  br i1 %44, label %.preheader, label %52

.preheader:                                       ; preds = %37, %.preheader
  %45 = phi i8** [ %47, %.preheader ], [ %40, %37 ]
  %46 = load i8*, i8** %45, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %46) #10
  %47 = getelementptr inbounds i8*, i8** %45, i64 1
  %48 = icmp ult i8** %45, %42
  br i1 %48, label %.preheader, label %49

49:                                               ; preds = %.preheader
  %50 = bitcast %"class.std::queue.61"* %33 to i8**
  %51 = load i8*, i8** %50, align 8, !tbaa !293
  br label %52

52:                                               ; preds = %49, %37
  %53 = phi i8* [ %51, %49 ], [ %38, %37 ]
  tail call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %32, %52
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIsED2Ev(%"class.MARC::ThreadSafeLockFreeQueue.101"*) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC23ThreadSafeLockFreeQueueIsEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %3 seq_cst, align 1
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %6 = tail call i32 @sem_destroy(%union.sem_t* nonnull %5) #10
  fence seq_cst
  %7 = bitcast %"class.moodycamel::BlockingReaderWriterQueue.102"* %4 to i64*
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = inttoptr i64 %8 to %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"*
  br label %10

10:                                               ; preds = %.loopexit, %1
  %11 = phi %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* [ %15, %.loopexit ], [ %9, %1 ]
  %12 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %11, i64 0, i32 6
  %13 = bitcast %"class.moodycamel::weak_atomic.104"* %12 to i64*
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = inttoptr i64 %14 to %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"*
  %16 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %.loopexit, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %11, i64 0, i32 8
  %23 = load i64, i64* %22, align 8, !tbaa !308
  br label %27

.loopexit:                                        ; preds = %27, %10
  %24 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %11, i64 0, i32 9
  %25 = load i8*, i8** %24, align 8, !tbaa !309
  tail call void @free(i8* %25) #10
  %26 = icmp eq %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %15, %9
  br i1 %26, label %32, label %10

27:                                               ; preds = %27, %21
  %28 = phi i64 [ %17, %21 ], [ %30, %27 ]
  %29 = add i64 %28, 1
  %30 = and i64 %29, %23
  %31 = icmp eq i64 %30, %19
  br i1 %31, label %.loopexit, label %27

32:                                               ; preds = %.loopexit
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIsEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::queue.70", %"class.std::queue.70"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i16**, i16*** %34, align 8, !tbaa !310
  %36 = icmp eq i16** %35, null
  br i1 %36, label %55, label %37

37:                                               ; preds = %32
  %38 = bitcast i16** %35 to i8*
  %39 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %40 = load i16**, i16*** %39, align 8, !tbaa !314
  %41 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %42 = load i16**, i16*** %41, align 8, !tbaa !315
  %43 = getelementptr inbounds i16*, i16** %42, i64 1
  %44 = icmp ult i16** %40, %43
  br i1 %44, label %.preheader, label %53

.preheader:                                       ; preds = %37, %.preheader
  %45 = phi i16** [ %48, %.preheader ], [ %40, %37 ]
  %46 = bitcast i16** %45 to i8**
  %47 = load i8*, i8** %46, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %47) #10
  %48 = getelementptr inbounds i16*, i16** %45, i64 1
  %49 = icmp ult i16** %45, %42
  br i1 %49, label %.preheader, label %50

50:                                               ; preds = %.preheader
  %51 = bitcast %"class.std::queue.70"* %33 to i8**
  %52 = load i8*, i8** %51, align 8, !tbaa !310
  br label %53

53:                                               ; preds = %50, %37
  %54 = phi i8* [ %52, %50 ], [ %38, %37 ]
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %32, %53
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIiED2Ev(%"class.MARC::ThreadSafeLockFreeQueue.108"*) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC23ThreadSafeLockFreeQueueIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %3 seq_cst, align 1
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %6 = tail call i32 @sem_destroy(%union.sem_t* nonnull %5) #10
  fence seq_cst
  %7 = bitcast %"class.moodycamel::BlockingReaderWriterQueue.109"* %4 to i64*
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = inttoptr i64 %8 to %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"*
  br label %10

10:                                               ; preds = %.loopexit, %1
  %11 = phi %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* [ %15, %.loopexit ], [ %9, %1 ]
  %12 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %11, i64 0, i32 6
  %13 = bitcast %"class.moodycamel::weak_atomic.111"* %12 to i64*
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = inttoptr i64 %14 to %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"*
  %16 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %.loopexit, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %11, i64 0, i32 8
  %23 = load i64, i64* %22, align 8, !tbaa !325
  br label %27

.loopexit:                                        ; preds = %27, %10
  %24 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %11, i64 0, i32 9
  %25 = load i8*, i8** %24, align 8, !tbaa !326
  tail call void @free(i8* %25) #10
  %26 = icmp eq %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %15, %9
  br i1 %26, label %32, label %10

27:                                               ; preds = %27, %21
  %28 = phi i64 [ %17, %21 ], [ %30, %27 ]
  %29 = add i64 %28, 1
  %30 = and i64 %29, %23
  %31 = icmp eq i64 %30, %19
  br i1 %31, label %.loopexit, label %27

32:                                               ; preds = %.loopexit
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::queue.79", %"class.std::queue.79"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i32**, i32*** %34, align 8, !tbaa !327
  %36 = icmp eq i32** %35, null
  br i1 %36, label %55, label %37

37:                                               ; preds = %32
  %38 = bitcast i32** %35 to i8*
  %39 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %40 = load i32**, i32*** %39, align 8, !tbaa !331
  %41 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %42 = load i32**, i32*** %41, align 8, !tbaa !332
  %43 = getelementptr inbounds i32*, i32** %42, i64 1
  %44 = icmp ult i32** %40, %43
  br i1 %44, label %.preheader, label %53

.preheader:                                       ; preds = %37, %.preheader
  %45 = phi i32** [ %48, %.preheader ], [ %40, %37 ]
  %46 = bitcast i32** %45 to i8**
  %47 = load i8*, i8** %46, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %47) #10
  %48 = getelementptr inbounds i32*, i32** %45, i64 1
  %49 = icmp ult i32** %45, %42
  br i1 %49, label %.preheader, label %50

50:                                               ; preds = %.preheader
  %51 = bitcast %"class.std::queue.79"* %33 to i8**
  %52 = load i8*, i8** %51, align 8, !tbaa !327
  br label %53

53:                                               ; preds = %50, %37
  %54 = phi i8* [ %52, %50 ], [ %38, %37 ]
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %32, %53
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIlED2Ev(%"class.MARC::ThreadSafeLockFreeQueue.115"*) unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC23ThreadSafeLockFreeQueueIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %3 seq_cst, align 1
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %6 = tail call i32 @sem_destroy(%union.sem_t* nonnull %5) #10
  fence seq_cst
  %7 = bitcast %"class.moodycamel::BlockingReaderWriterQueue.116"* %4 to i64*
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = inttoptr i64 %8 to %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"*
  br label %10

10:                                               ; preds = %.loopexit, %1
  %11 = phi %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* [ %15, %.loopexit ], [ %9, %1 ]
  %12 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %11, i64 0, i32 6
  %13 = bitcast %"class.moodycamel::weak_atomic.118"* %12 to i64*
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = inttoptr i64 %14 to %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"*
  %16 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %.loopexit, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %11, i64 0, i32 8
  %23 = load i64, i64* %22, align 8, !tbaa !342
  br label %27

.loopexit:                                        ; preds = %27, %10
  %24 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %11, i64 0, i32 9
  %25 = load i8*, i8** %24, align 8, !tbaa !343
  tail call void @free(i8* %25) #10
  %26 = icmp eq %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %15, %9
  br i1 %26, label %32, label %10

27:                                               ; preds = %27, %21
  %28 = phi i64 [ %17, %21 ], [ %30, %27 ]
  %29 = add i64 %28, 1
  %30 = and i64 %29, %23
  %31 = icmp eq i64 %30, %19
  br i1 %31, label %.loopexit, label %27

32:                                               ; preds = %.loopexit
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4MARC15ThreadSafeQueueIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8, !tbaa !73
  %33 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::queue.88", %"class.std::queue.88"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i64**, i64*** %34, align 8, !tbaa !344
  %36 = icmp eq i64** %35, null
  br i1 %36, label %55, label %37

37:                                               ; preds = %32
  %38 = bitcast i64** %35 to i8*
  %39 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 3
  %40 = load i64**, i64*** %39, align 8, !tbaa !348
  %41 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 3, i32 3
  %42 = load i64**, i64*** %41, align 8, !tbaa !349
  %43 = getelementptr inbounds i64*, i64** %42, i64 1
  %44 = icmp ult i64** %40, %43
  br i1 %44, label %.preheader, label %53

.preheader:                                       ; preds = %37, %.preheader
  %45 = phi i64** [ %48, %.preheader ], [ %40, %37 ]
  %46 = bitcast i64** %45 to i8**
  %47 = load i8*, i8** %46, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %47) #10
  %48 = getelementptr inbounds i64*, i64** %45, i64 1
  %49 = icmp ult i64** %45, %42
  br i1 %49, label %.preheader, label %50

50:                                               ; preds = %.preheader
  %51 = bitcast %"class.std::queue.88"* %33 to i8**
  %52 = load i8*, i8** %51, align 8, !tbaa !344
  br label %53

53:                                               ; preds = %50, %37
  %54 = phi i8* [ %52, %50 ], [ %38, %37 ]
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %32, %53
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @sem_destroy(%union.sem_t*) local_unnamed_addr #17

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC15ThreadSafeQueueIlE7isValidEv(%"class.MARC::ThreadSafeQueue.87"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.87", %"class.MARC::ThreadSafeQueue.87"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC15ThreadSafeQueueIlE10invalidateEv(%"class.MARC::ThreadSafeQueue.87"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.87", %"class.MARC::ThreadSafeQueue.87"* %0, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %2 seq_cst, align 1
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIlE6tryPopERl(%"class.MARC::ThreadSafeLockFreeQueue.115"*, i64* dereferenceable(8)) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = atomicrmw add i64* %8, i64 -1 acquire
  %13 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 0
  %14 = tail call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIlLm512EE11try_dequeueIlEEbRT_(%"class.moodycamel::ReaderWriterQueue.117"* nonnull %13, i64* nonnull dereferenceable(8) %1)
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 792, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIlLm512EE11try_dequeueIlEEbRT_, i64 0, i64 0)) #30
  unreachable

16:                                               ; preds = %2, %11, %7
  %17 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %7 ]
  ret i1 %17
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIlE7waitPopERl(%"class.MARC::ThreadSafeLockFreeQueue.115"*, i64* dereferenceable(8)) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %7, %19
  %11 = load atomic i8, i8* %3 seq_cst, align 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %.loopexit, label %14

14:                                               ; preds = %10
  %15 = load atomic i64, i64* %9 monotonic, align 8
  %16 = icmp sgt i64 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = atomicrmw add i64* %9, i64 -1 acquire
  br label %.loopexit1

19:                                               ; preds = %14
  %20 = tail call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %8, i64 5000)
  br i1 %20, label %.loopexit1, label %10

.loopexit1:                                       ; preds = %19, %17
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 0
  %22 = tail call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIlLm512EE11try_dequeueIlEEbRT_(%"class.moodycamel::ReaderWriterQueue.117"* nonnull %21, i64* nonnull dereferenceable(8) %1)
  br i1 %22, label %.loopexit, label %23

23:                                               ; preds = %.loopexit1
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIlLm512EE18wait_dequeue_timedIlEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %10, %.loopexit1
  %24 = load atomic i8, i8* %3 seq_cst, align 1
  %25 = and i8 %24, 1
  %26 = icmp ne i8 %25, 0
  br label %27

27:                                               ; preds = %2, %.loopexit
  %28 = phi i1 [ %26, %.loopexit ], [ false, %2 ]
  ret i1 %28
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIlE7waitPopEv(%"class.MARC::ThreadSafeLockFreeQueue.115"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = load atomic i8, i8* %4 seq_cst, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %20, %8
  %12 = load atomic i8, i8* %4 seq_cst, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %.loopexit, label %15

15:                                               ; preds = %11
  %16 = load atomic i64, i64* %10 monotonic, align 8
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = atomicrmw add i64* %10, i64 -1 acquire
  br label %.loopexit1

20:                                               ; preds = %15
  %21 = tail call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %9, i64 5000)
  br i1 %21, label %.loopexit1, label %11

.loopexit1:                                       ; preds = %20, %18
  %22 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 0
  %23 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIlLm512EE11try_dequeueIlEEbRT_(%"class.moodycamel::ReaderWriterQueue.117"* nonnull %22, i64* nonnull dereferenceable(8) %2)
  br i1 %23, label %.loopexit, label %24

24:                                               ; preds = %.loopexit1
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIlLm512EE18wait_dequeue_timedIlEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %11, %.loopexit1
  %25 = load atomic i8, i8* %4 seq_cst, align 1
  %26 = and i8 %25, 1
  %27 = icmp ne i8 %26, 0
  br label %28

28:                                               ; preds = %1, %.loopexit
  %29 = phi i1 [ %27, %.loopexit ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #10
  ret i1 %29
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIlE4pushEl(%"class.MARC::ThreadSafeLockFreeQueue.115"*, i64) unnamed_addr #14 comdat align 2 {
  %3 = alloca i64, align 8
  store i64 %1, i64* %3, align 8, !tbaa !149
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 0
  %5 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIlLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKlEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue.117"* nonnull %4, i64* nonnull dereferenceable(8) %3)
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i64* %7, i64 1 release
  %9 = icmp sgt i64 %8, -2
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.28, i64 0, i64 0), i32 644, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel9spsc_sema20LightweightSemaphore6signalEl, i64 0, i64 0)) #30
  unreachable

11:                                               ; preds = %6
  %12 = icmp slt i64 %8, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %15 = call i32 @sem_post(%union.sem_t* nonnull %14) #10
  br label %16

16:                                               ; preds = %2, %11, %13
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIlE8waitPushEll(%"class.MARC::ThreadSafeLockFreeQueue.115"*, i64, i64) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %7

7:                                                ; preds = %12, %3
  %8 = load atomic i64, i64* %5 monotonic, align 8
  %9 = icmp sgt i64 %8, 0
  %10 = select i1 %9, i64 %8, i64 0
  %11 = icmp ugt i64 %10, %2
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = load atomic i8, i8* %6 seq_cst, align 1
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %.loopexit, label %7

16:                                               ; preds = %7
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  store i64 %1, i64* %4, align 8, !tbaa !149
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 0
  %19 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIlLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKlEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue.117"* nonnull %18, i64* nonnull dereferenceable(8) %4)
  br i1 %19, label %20, label %29

20:                                               ; preds = %16
  %21 = atomicrmw add i64* %5, i64 1 release
  %22 = icmp sgt i64 %21, -2
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.28, i64 0, i64 0), i32 644, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel9spsc_sema20LightweightSemaphore6signalEl, i64 0, i64 0)) #30
  unreachable

24:                                               ; preds = %20
  %25 = icmp slt i64 %21, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %28 = call i32 @sem_post(%union.sem_t* nonnull %27) #10
  br label %29

29:                                               ; preds = %16, %24, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  br label %.loopexit

.loopexit:                                        ; preds = %12, %29
  %30 = phi i1 [ true, %29 ], [ false, %12 ]
  ret i1 %30
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIlE5clearEv(%"class.MARC::ThreadSafeLockFreeQueue.115"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp slt i64 %4, 1
  br i1 %5, label %.loopexit2, label %6

6:                                                ; preds = %1
  %7 = bitcast i64* %2 to i8*
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 0
  br label %12

12:                                               ; preds = %6, %29
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %13 = load atomic i8, i8* %8 seq_cst, align 1
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %29, label %.preheader

.preheader:                                       ; preds = %12, %24
  %16 = load atomic i8, i8* %8 seq_cst, align 1
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %.loopexit, label %19

19:                                               ; preds = %.preheader
  %20 = load atomic i64, i64* %10 monotonic, align 8
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = atomicrmw add i64* %10, i64 -1 acquire
  br label %.loopexit1

24:                                               ; preds = %19
  %25 = call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %9, i64 5000)
  br i1 %25, label %.loopexit1, label %.preheader

.loopexit1:                                       ; preds = %24, %22
  %26 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIlLm512EE11try_dequeueIlEEbRT_(%"class.moodycamel::ReaderWriterQueue.117"* nonnull %11, i64* nonnull dereferenceable(8) %2)
  br i1 %26, label %.loopexit, label %27

27:                                               ; preds = %.loopexit1
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIlLm512EE18wait_dequeue_timedIlEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %.preheader, %.loopexit1
  %28 = load atomic i8, i8* %8 seq_cst, align 1
  br label %29

29:                                               ; preds = %12, %.loopexit
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %30 = load atomic i64, i64* %3 monotonic, align 8
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %.loopexit2, label %12

.loopexit2:                                       ; preds = %29, %1
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC23ThreadSafeLockFreeQueueIlE5emptyEv(%"class.MARC::ThreadSafeLockFreeQueue.115"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = icmp slt i64 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK4MARC23ThreadSafeLockFreeQueueIlE4sizeEv(%"class.MARC::ThreadSafeLockFreeQueue.115"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.115", %"class.MARC::ThreadSafeLockFreeQueue.115"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = icmp sgt i64 %3, 0
  %5 = select i1 %4, i64 %3, i64 0
  ret i64 %5
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"*, i64) local_unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = alloca %struct.timeval, align 8
  %4 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %5

5:                                                ; preds = %78, %2
  %6 = phi i32 [ 9999, %2 ], [ %79, %78 ]
  %7 = load atomic i64, i64* %4 monotonic, align 8
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %75, %72, %69, %11, %5
  %10 = atomicrmw add i64* %4, i64 -1 acquire
  br label %.loopexit

11:                                               ; preds = %5
  fence syncscope("singlethread") acquire
  %12 = load atomic i64, i64* %4 monotonic, align 8
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %9, label %69

14:                                               ; preds = %78
  %15 = atomicrmw add i64* %4, i64 -1 acquire
  %16 = icmp sgt i64 %15, 0
  br i1 %16, label %.loopexit, label %17

17:                                               ; preds = %14
  %18 = icmp slt i64 %1, 0
  %19 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %0, i64 0, i32 1
  br i1 %18, label %20, label %29

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.moodycamel::spsc_sema::Semaphore", %"class.moodycamel::spsc_sema::Semaphore"* %19, i64 0, i32 0
  br label %22

22:                                               ; preds = %25, %20
  %23 = tail call i32 @sem_wait(%union.sem_t* nonnull %21)
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %.loopexit

25:                                               ; preds = %22
  %26 = tail call i32* @__errno_location() #31
  %27 = load i32, i32* %26, align 4, !tbaa !122
  %28 = icmp eq i32 %27, 4
  br i1 %28, label %22, label %.loopexit

29:                                               ; preds = %17
  %30 = bitcast %struct.timeval* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10
  %31 = call i32 @clock_gettime(i32 0, %struct.timeval* nonnull %3) #10
  %32 = udiv i64 %1, 1000000
  %33 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 0
  %34 = load i64, i64* %33, align 8, !tbaa !350
  %35 = add i64 %34, %32
  store i64 %35, i64* %33, align 8, !tbaa !350
  %36 = urem i64 %1, 1000000
  %37 = mul nuw nsw i64 %36, 1000
  %38 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 1
  %39 = load i64, i64* %38, align 8, !tbaa !352
  %40 = add i64 %39, %37
  store i64 %40, i64* %38, align 8, !tbaa !352
  %41 = icmp sgt i64 %40, 999999999
  br i1 %41, label %42, label %45

42:                                               ; preds = %29
  %43 = add nsw i64 %40, -1000000000
  store i64 %43, i64* %38, align 8, !tbaa !352
  %44 = add nsw i64 %35, 1
  store i64 %44, i64* %33, align 8, !tbaa !350
  br label %45

45:                                               ; preds = %42, %29
  %46 = getelementptr inbounds %"class.moodycamel::spsc_sema::Semaphore", %"class.moodycamel::spsc_sema::Semaphore"* %19, i64 0, i32 0
  br label %47

47:                                               ; preds = %51, %45
  %48 = call i32 @sem_timedwait(%union.sem_t* nonnull %46, %struct.timeval* nonnull %3)
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  br label %.loopexit

51:                                               ; preds = %47
  %52 = tail call i32* @__errno_location() #31
  %53 = load i32, i32* %52, align 4, !tbaa !122
  %54 = icmp eq i32 %53, 4
  br i1 %54, label %47, label %55

55:                                               ; preds = %51
  %56 = icmp eq i32 %53, 110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  br i1 %56, label %57, label %.loopexit

57:                                               ; preds = %55
  %58 = atomicrmw add i64* %4, i64 1 release
  %59 = icmp slt i64 %58, 0
  br i1 %59, label %.loopexit, label %.preheader5

.preheader5:                                      ; preds = %57, %.loopexit4
  %60 = atomicrmw add i64* %4, i64 -1 acquire
  %61 = icmp sgt i64 %60, 0
  br i1 %61, label %.preheader, label %.loopexit4

.preheader:                                       ; preds = %.preheader5, %64
  %62 = call i32 @sem_trywait(%union.sem_t* nonnull %46) #10
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %64, label %.loopexit

64:                                               ; preds = %.preheader
  %65 = load i32, i32* %52, align 4, !tbaa !122
  switch i32 %65, label %.loopexit [
    i32 4, label %.preheader
    i32 11, label %.loopexit4
  ]

.loopexit4:                                       ; preds = %64, %.preheader5
  %66 = atomicrmw add i64* %4, i64 1 release
  %67 = icmp slt i64 %66, 0
  br i1 %67, label %.loopexit, label %.preheader5

.loopexit:                                        ; preds = %.loopexit4, %64, %.preheader, %25, %22, %57, %55, %50, %14, %9
  %68 = phi i1 [ true, %9 ], [ true, %14 ], [ true, %55 ], [ true, %50 ], [ false, %57 ], [ true, %22 ], [ true, %25 ], [ true, %.preheader ], [ true, %64 ], [ false, %.loopexit4 ]
  ret i1 %68

69:                                               ; preds = %11
  fence syncscope("singlethread") acquire
  %70 = load atomic i64, i64* %4 monotonic, align 8
  %71 = icmp sgt i64 %70, 0
  br i1 %71, label %9, label %72

72:                                               ; preds = %69
  fence syncscope("singlethread") acquire
  %73 = load atomic i64, i64* %4 monotonic, align 8
  %74 = icmp sgt i64 %73, 0
  br i1 %74, label %9, label %75

75:                                               ; preds = %72
  fence syncscope("singlethread") acquire
  %76 = load atomic i64, i64* %4 monotonic, align 8
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %9, label %78

78:                                               ; preds = %75
  fence syncscope("singlethread") acquire
  %79 = add nsw i32 %6, -5
  %80 = icmp eq i32 %6, 4
  br i1 %80, label %14, label %5
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIlLm512EE11try_dequeueIlEEbRT_(%"class.moodycamel::ReaderWriterQueue.117"*, i64* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.117", %"class.moodycamel::ReaderWriterQueue.117"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 1, !tbaa !353, !range !62
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIlLm512EE14ReentrantGuardC2ERb, i64 0, i64 0)) #30
  unreachable

7:                                                ; preds = %2
  store i8 1, i8* %3, align 1, !tbaa !353
  %8 = bitcast %"class.moodycamel::ReaderWriterQueue.117"* %0 to i64*
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = inttoptr i64 %9 to %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"*
  %11 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %10, i64 0, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !354
  %13 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = icmp eq i64 %14, %12
  br i1 %15, label %16, label %20

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %10, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load atomic i64, i64* %17 monotonic, align 8
  store i64 %18, i64* %11, align 8, !tbaa !354
  %19 = icmp eq i64 %12, %18
  br i1 %19, label %35, label %20

20:                                               ; preds = %16, %7
  fence acquire
  br label %21

21:                                               ; preds = %41, %20
  %22 = phi %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* [ %43, %41 ], [ %10, %20 ]
  %23 = phi i64 [ %48, %41 ], [ %14, %20 ]
  %24 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %22, i64 0, i32 7
  %25 = load i8*, i8** %24, align 8, !tbaa !340
  %26 = shl i64 %23, 3
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !149
  store i64 %29, i64* %1, align 8, !tbaa !149
  %30 = add i64 %23, 1
  %31 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %22, i64 0, i32 8
  %32 = load i64, i64* %31, align 8, !tbaa !342
  %33 = and i64 %32, %30
  fence release
  %34 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %33, i64* %34 monotonic, align 8
  br label %73

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.117", %"class.moodycamel::ReaderWriterQueue.117"* %0, i64 0, i32 2
  %37 = bitcast %"class.moodycamel::weak_atomic.118"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = inttoptr i64 %38 to %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"*
  %40 = icmp eq %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %10, %39
  br i1 %40, label %73, label %41

41:                                               ; preds = %35
  fence acquire
  %42 = load atomic i64, i64* %8 monotonic, align 8
  %43 = inttoptr i64 %42 to %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"*
  %44 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load atomic i64, i64* %44 monotonic, align 8
  %46 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %43, i64 0, i32 1
  store i64 %45, i64* %46, align 8, !tbaa !354
  %47 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i64, i64* %47 monotonic, align 8
  fence acquire
  %49 = icmp eq i64 %48, %45
  br i1 %49, label %50, label %21

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %43, i64 0, i32 6
  %52 = bitcast %"class.moodycamel::weak_atomic.118"* %51 to i64*
  %53 = load atomic i64, i64* %52 monotonic, align 8
  %54 = inttoptr i64 %53 to %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"*
  %55 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i64, i64* %55 monotonic, align 8
  %57 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %54, i64 0, i32 1
  store i64 %58, i64* %59, align 8, !tbaa !354
  fence acquire
  %60 = icmp eq i64 %56, %58
  br i1 %60, label %61, label %62

61:                                               ; preds = %50
  tail call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 335, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIlLm512EE11try_dequeueIlEEbRT_, i64 0, i64 0)) #30
  unreachable

62:                                               ; preds = %50
  fence release
  store atomic i64 %53, i64* %8 monotonic, align 8
  fence syncscope("singlethread") release
  %63 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %54, i64 0, i32 7
  %64 = load i8*, i8** %63, align 8, !tbaa !340
  %65 = shl i64 %56, 3
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8, !tbaa !149
  store i64 %68, i64* %1, align 8, !tbaa !149
  %69 = add i64 %56, 1
  %70 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %54, i64 0, i32 8
  %71 = load i64, i64* %70, align 8, !tbaa !342
  %72 = and i64 %71, %69
  fence release
  store atomic i64 %72, i64* %55 monotonic, align 8
  br label %73

73:                                               ; preds = %21, %62, %35
  %74 = phi i1 [ false, %35 ], [ true, %62 ], [ true, %21 ]
  store i8 0, i8* %3, align 1, !tbaa !353
  ret i1 %74
}

declare dso_local i32 @sem_wait(%union.sem_t*) local_unnamed_addr #19

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() local_unnamed_addr #16

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timeval*) local_unnamed_addr #17

declare dso_local i32 @sem_timedwait(%union.sem_t*, %struct.timeval*) local_unnamed_addr #19

; Function Attrs: nounwind
declare dso_local i32 @sem_trywait(%union.sem_t*) local_unnamed_addr #17

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIlLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKlEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue.117"*, i64* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.117", %"class.moodycamel::ReaderWriterQueue.117"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !tbaa !353, !range !62
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIlLm512EE14ReentrantGuardC2ERb, i64 0, i64 0)) #30
  unreachable

7:                                                ; preds = %2
  store i8 1, i8* %3, align 1, !tbaa !353
  %8 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.117", %"class.moodycamel::ReaderWriterQueue.117"* %0, i64 0, i32 2
  %9 = bitcast %"class.moodycamel::weak_atomic.118"* %8 to i64*
  %10 = load atomic i64, i64* %9 monotonic, align 8
  %11 = inttoptr i64 %10 to %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"*
  %12 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %11, i64 0, i32 4
  %13 = load i64, i64* %12, align 8, !tbaa !355
  %14 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = add i64 %15, 1
  %17 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %11, i64 0, i32 8
  %18 = load i64, i64* %17, align 8, !tbaa !342
  %19 = and i64 %16, %18
  %20 = icmp eq i64 %19, %13
  br i1 %20, label %21, label %25

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i64, i64* %22 monotonic, align 8
  store i64 %23, i64* %12, align 8, !tbaa !355
  %24 = icmp eq i64 %13, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %21, %7
  fence acquire
  %26 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %11, i64 0, i32 7
  %27 = load i8*, i8** %26, align 8, !tbaa !340
  %28 = shl i64 %15, 3
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %1, align 8, !tbaa !149
  store i64 %31, i64* %30, align 8, !tbaa !149
  fence release
  store atomic i64 %19, i64* %14 monotonic, align 8
  br label %106

32:                                               ; preds = %21
  fence acquire
  %33 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %11, i64 0, i32 6
  %34 = bitcast %"class.moodycamel::weak_atomic.118"* %33 to i64*
  %35 = load atomic i64, i64* %34 monotonic, align 8
  %36 = inttoptr i64 %35 to %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"*
  %37 = bitcast %"class.moodycamel::ReaderWriterQueue.117"* %0 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = inttoptr i64 %38 to %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"*
  %40 = icmp eq %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %36, %39
  br i1 %40, label %62, label %41

41:                                               ; preds = %32
  fence acquire
  %42 = load atomic i64, i64* %34 monotonic, align 8
  %43 = inttoptr i64 %42 to %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"*
  %44 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i64, i64* %44 monotonic, align 8
  %46 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %43, i64 0, i32 4
  store i64 %45, i64* %46, align 8, !tbaa !355
  %47 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load atomic i64, i64* %47 monotonic, align 8
  fence acquire
  %49 = icmp eq i64 %45, %48
  br i1 %49, label %51, label %50

50:                                               ; preds = %41
  tail call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 551, i8* getelementptr inbounds ([192 x i8], [192 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIlLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKlEEEbDpOT0_, i64 0, i64 0)) #30
  unreachable

51:                                               ; preds = %41
  store i64 %45, i64* %46, align 8, !tbaa !355
  %52 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %43, i64 0, i32 7
  %53 = load i8*, i8** %52, align 8, !tbaa !340
  %54 = shl i64 %45, 3
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %1, align 8, !tbaa !149
  store i64 %57, i64* %56, align 8, !tbaa !149
  %58 = add i64 %45, 1
  %59 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* %43, i64 0, i32 8
  %60 = load i64, i64* %59, align 8, !tbaa !342
  %61 = and i64 %60, %58
  store atomic i64 %61, i64* %47 monotonic, align 8
  fence release
  store atomic i64 %42, i64* %9 monotonic, align 8
  br label %106

62:                                               ; preds = %32
  %63 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.117", %"class.moodycamel::ReaderWriterQueue.117"* %0, i64 0, i32 3
  %64 = load i64, i64* %63, align 8, !tbaa !339
  %65 = icmp ult i64 %64, 512
  %66 = zext i1 %65 to i64
  %67 = shl i64 %64, %66
  %68 = shl i64 %67, 3
  %69 = or i64 %68, 7
  %70 = add i64 %69, 167
  %71 = tail call noalias i8* @malloc(i64 %70) #10
  %72 = icmp eq i8* %71, null
  br i1 %72, label %106, label %73

73:                                               ; preds = %62
  %74 = ptrtoint i8* %71 to i64
  %75 = sub i64 0, %74
  %76 = and i64 %75, 7
  %77 = getelementptr inbounds i8, i8* %71, i64 %76
  %78 = getelementptr inbounds i8, i8* %77, i64 160
  %79 = ptrtoint i8* %78 to i64
  %80 = sub i64 0, %79
  %81 = and i64 %80, 7
  %82 = getelementptr inbounds i8, i8* %78, i64 %81
  %83 = getelementptr inbounds i8, i8* %77, i64 64
  %84 = getelementptr inbounds i8, i8* %77, i64 128
  %85 = bitcast i8* %84 to %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"**
  store %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"* null, %"struct.moodycamel::ReaderWriterQueue<long, 512>::Block"** %85, align 8, !tbaa !356
  %86 = getelementptr inbounds i8, i8* %77, i64 136
  %87 = bitcast i8* %86 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 16, i1 false)
  store i8* %82, i8** %87, align 8, !tbaa !340
  %88 = getelementptr inbounds i8, i8* %77, i64 144
  %89 = bitcast i8* %88 to i64*
  %90 = add i64 %67, -1
  store i64 %90, i64* %89, align 8, !tbaa !342
  %91 = getelementptr inbounds i8, i8* %77, i64 152
  %92 = bitcast i8* %91 to i8**
  store i8* %71, i8** %92, align 8, !tbaa !343
  %93 = ptrtoint i8* %77 to i64
  store i64 %67, i64* %63, align 8, !tbaa !339
  %94 = bitcast i8* %82 to i64*
  %95 = load i64, i64* %1, align 8, !tbaa !149
  store i64 %95, i64* %94, align 8, !tbaa !149
  %96 = bitcast i8* %77 to i64*
  %97 = load atomic i64, i64* %96 monotonic, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %73
  tail call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 581, i8* getelementptr inbounds ([192 x i8], [192 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIlLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKlEEEbDpOT0_, i64 0, i64 0)) #30
  unreachable

100:                                              ; preds = %73
  %101 = getelementptr inbounds i8, i8* %77, i64 8
  %102 = bitcast i8* %101 to i64*
  store i64 1, i64* %102, align 8, !tbaa !354
  %103 = bitcast i8* %83 to i64*
  store atomic i64 1, i64* %103 monotonic, align 8
  %104 = load atomic i64, i64* %34 monotonic, align 8
  %105 = bitcast i8* %84 to i64*
  store atomic i64 %104, i64* %105 monotonic, align 8
  store atomic i64 %93, i64* %34 monotonic, align 8
  fence release
  store atomic i64 %93, i64* %9 monotonic, align 8
  br label %106

106:                                              ; preds = %62, %25, %51, %100
  %107 = phi i1 [ true, %100 ], [ true, %51 ], [ true, %25 ], [ false, %62 ]
  store i8 0, i8* %3, align 1, !tbaa !353
  ret i1 %107
}

; Function Attrs: nounwind
declare dso_local i32 @sem_post(%union.sem_t*) local_unnamed_addr #17

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC15ThreadSafeQueueIiE7isValidEv(%"class.MARC::ThreadSafeQueue.78"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.78", %"class.MARC::ThreadSafeQueue.78"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC15ThreadSafeQueueIiE10invalidateEv(%"class.MARC::ThreadSafeQueue.78"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.78", %"class.MARC::ThreadSafeQueue.78"* %0, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %2 seq_cst, align 1
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIiE6tryPopERi(%"class.MARC::ThreadSafeLockFreeQueue.108"*, i32* dereferenceable(4)) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = atomicrmw add i64* %8, i64 -1 acquire
  %13 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 0
  %14 = tail call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIiLm512EE11try_dequeueIiEEbRT_(%"class.moodycamel::ReaderWriterQueue.110"* nonnull %13, i32* nonnull dereferenceable(4) %1)
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 792, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIiLm512EE11try_dequeueIiEEbRT_, i64 0, i64 0)) #30
  unreachable

16:                                               ; preds = %2, %11, %7
  %17 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %7 ]
  ret i1 %17
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIiE7waitPopERi(%"class.MARC::ThreadSafeLockFreeQueue.108"*, i32* dereferenceable(4)) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %7, %19
  %11 = load atomic i8, i8* %3 seq_cst, align 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %.loopexit, label %14

14:                                               ; preds = %10
  %15 = load atomic i64, i64* %9 monotonic, align 8
  %16 = icmp sgt i64 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = atomicrmw add i64* %9, i64 -1 acquire
  br label %.loopexit1

19:                                               ; preds = %14
  %20 = tail call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %8, i64 5000)
  br i1 %20, label %.loopexit1, label %10

.loopexit1:                                       ; preds = %19, %17
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 0
  %22 = tail call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIiLm512EE11try_dequeueIiEEbRT_(%"class.moodycamel::ReaderWriterQueue.110"* nonnull %21, i32* nonnull dereferenceable(4) %1)
  br i1 %22, label %.loopexit, label %23

23:                                               ; preds = %.loopexit1
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIiLm512EE18wait_dequeue_timedIiEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %10, %.loopexit1
  %24 = load atomic i8, i8* %3 seq_cst, align 1
  %25 = and i8 %24, 1
  %26 = icmp ne i8 %25, 0
  br label %27

27:                                               ; preds = %2, %.loopexit
  %28 = phi i1 [ %26, %.loopexit ], [ false, %2 ]
  ret i1 %28
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIiE7waitPopEv(%"class.MARC::ThreadSafeLockFreeQueue.108"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = load atomic i8, i8* %4 seq_cst, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %20, %8
  %12 = load atomic i8, i8* %4 seq_cst, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %.loopexit, label %15

15:                                               ; preds = %11
  %16 = load atomic i64, i64* %10 monotonic, align 8
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = atomicrmw add i64* %10, i64 -1 acquire
  br label %.loopexit1

20:                                               ; preds = %15
  %21 = tail call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %9, i64 5000)
  br i1 %21, label %.loopexit1, label %11

.loopexit1:                                       ; preds = %20, %18
  %22 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 0
  %23 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIiLm512EE11try_dequeueIiEEbRT_(%"class.moodycamel::ReaderWriterQueue.110"* nonnull %22, i32* nonnull dereferenceable(4) %2)
  br i1 %23, label %.loopexit, label %24

24:                                               ; preds = %.loopexit1
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIiLm512EE18wait_dequeue_timedIiEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %11, %.loopexit1
  %25 = load atomic i8, i8* %4 seq_cst, align 1
  %26 = and i8 %25, 1
  %27 = icmp ne i8 %26, 0
  br label %28

28:                                               ; preds = %1, %.loopexit
  %29 = phi i1 [ %27, %.loopexit ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #10
  ret i1 %29
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIiE4pushEi(%"class.MARC::ThreadSafeLockFreeQueue.108"*, i32) unnamed_addr #14 comdat align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4, !tbaa !122
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 0
  %5 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIiLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKiEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue.110"* nonnull %4, i32* nonnull dereferenceable(4) %3)
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i64* %7, i64 1 release
  %9 = icmp sgt i64 %8, -2
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.28, i64 0, i64 0), i32 644, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel9spsc_sema20LightweightSemaphore6signalEl, i64 0, i64 0)) #30
  unreachable

11:                                               ; preds = %6
  %12 = icmp slt i64 %8, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %15 = call i32 @sem_post(%union.sem_t* nonnull %14) #10
  br label %16

16:                                               ; preds = %2, %11, %13
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIiE8waitPushEil(%"class.MARC::ThreadSafeLockFreeQueue.108"*, i32, i64) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %7

7:                                                ; preds = %12, %3
  %8 = load atomic i64, i64* %5 monotonic, align 8
  %9 = icmp sgt i64 %8, 0
  %10 = select i1 %9, i64 %8, i64 0
  %11 = icmp ugt i64 %10, %2
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = load atomic i8, i8* %6 seq_cst, align 1
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %.loopexit, label %7

16:                                               ; preds = %7
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  store i32 %1, i32* %4, align 4, !tbaa !122
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 0
  %19 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIiLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKiEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue.110"* nonnull %18, i32* nonnull dereferenceable(4) %4)
  br i1 %19, label %20, label %29

20:                                               ; preds = %16
  %21 = atomicrmw add i64* %5, i64 1 release
  %22 = icmp sgt i64 %21, -2
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.28, i64 0, i64 0), i32 644, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel9spsc_sema20LightweightSemaphore6signalEl, i64 0, i64 0)) #30
  unreachable

24:                                               ; preds = %20
  %25 = icmp slt i64 %21, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %28 = call i32 @sem_post(%union.sem_t* nonnull %27) #10
  br label %29

29:                                               ; preds = %16, %24, %26
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  br label %.loopexit

.loopexit:                                        ; preds = %12, %29
  %30 = phi i1 [ true, %29 ], [ false, %12 ]
  ret i1 %30
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIiE5clearEv(%"class.MARC::ThreadSafeLockFreeQueue.108"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp slt i64 %4, 1
  br i1 %5, label %.loopexit2, label %6

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 0
  br label %12

12:                                               ; preds = %6, %29
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #10
  %13 = load atomic i8, i8* %8 seq_cst, align 1
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %29, label %.preheader

.preheader:                                       ; preds = %12, %24
  %16 = load atomic i8, i8* %8 seq_cst, align 1
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %.loopexit, label %19

19:                                               ; preds = %.preheader
  %20 = load atomic i64, i64* %10 monotonic, align 8
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = atomicrmw add i64* %10, i64 -1 acquire
  br label %.loopexit1

24:                                               ; preds = %19
  %25 = call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %9, i64 5000)
  br i1 %25, label %.loopexit1, label %.preheader

.loopexit1:                                       ; preds = %24, %22
  %26 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIiLm512EE11try_dequeueIiEEbRT_(%"class.moodycamel::ReaderWriterQueue.110"* nonnull %11, i32* nonnull dereferenceable(4) %2)
  br i1 %26, label %.loopexit, label %27

27:                                               ; preds = %.loopexit1
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIiLm512EE18wait_dequeue_timedIiEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %.preheader, %.loopexit1
  %28 = load atomic i8, i8* %8 seq_cst, align 1
  br label %29

29:                                               ; preds = %12, %.loopexit
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #10
  %30 = load atomic i64, i64* %3 monotonic, align 8
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %.loopexit2, label %12

.loopexit2:                                       ; preds = %29, %1
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC23ThreadSafeLockFreeQueueIiE5emptyEv(%"class.MARC::ThreadSafeLockFreeQueue.108"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = icmp slt i64 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK4MARC23ThreadSafeLockFreeQueueIiE4sizeEv(%"class.MARC::ThreadSafeLockFreeQueue.108"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.108", %"class.MARC::ThreadSafeLockFreeQueue.108"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = icmp sgt i64 %3, 0
  %5 = select i1 %4, i64 %3, i64 0
  ret i64 %5
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIiLm512EE11try_dequeueIiEEbRT_(%"class.moodycamel::ReaderWriterQueue.110"*, i32* dereferenceable(4)) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.110", %"class.moodycamel::ReaderWriterQueue.110"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 1, !tbaa !353, !range !62
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIiLm512EE14ReentrantGuardC2ERb, i64 0, i64 0)) #30
  unreachable

7:                                                ; preds = %2
  store i8 1, i8* %3, align 1, !tbaa !353
  %8 = bitcast %"class.moodycamel::ReaderWriterQueue.110"* %0 to i64*
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = inttoptr i64 %9 to %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"*
  %11 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %10, i64 0, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !357
  %13 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = icmp eq i64 %14, %12
  br i1 %15, label %16, label %20

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %10, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load atomic i64, i64* %17 monotonic, align 8
  store i64 %18, i64* %11, align 8, !tbaa !357
  %19 = icmp eq i64 %12, %18
  br i1 %19, label %35, label %20

20:                                               ; preds = %16, %7
  fence acquire
  br label %21

21:                                               ; preds = %41, %20
  %22 = phi %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* [ %43, %41 ], [ %10, %20 ]
  %23 = phi i64 [ %48, %41 ], [ %14, %20 ]
  %24 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %22, i64 0, i32 7
  %25 = load i8*, i8** %24, align 8, !tbaa !323
  %26 = shl i64 %23, 2
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 4, !tbaa !122
  store i32 %29, i32* %1, align 4, !tbaa !122
  %30 = add i64 %23, 1
  %31 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %22, i64 0, i32 8
  %32 = load i64, i64* %31, align 8, !tbaa !325
  %33 = and i64 %32, %30
  fence release
  %34 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %33, i64* %34 monotonic, align 8
  br label %73

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.110", %"class.moodycamel::ReaderWriterQueue.110"* %0, i64 0, i32 2
  %37 = bitcast %"class.moodycamel::weak_atomic.111"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = inttoptr i64 %38 to %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"*
  %40 = icmp eq %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %10, %39
  br i1 %40, label %73, label %41

41:                                               ; preds = %35
  fence acquire
  %42 = load atomic i64, i64* %8 monotonic, align 8
  %43 = inttoptr i64 %42 to %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"*
  %44 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load atomic i64, i64* %44 monotonic, align 8
  %46 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %43, i64 0, i32 1
  store i64 %45, i64* %46, align 8, !tbaa !357
  %47 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i64, i64* %47 monotonic, align 8
  fence acquire
  %49 = icmp eq i64 %48, %45
  br i1 %49, label %50, label %21

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %43, i64 0, i32 6
  %52 = bitcast %"class.moodycamel::weak_atomic.111"* %51 to i64*
  %53 = load atomic i64, i64* %52 monotonic, align 8
  %54 = inttoptr i64 %53 to %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"*
  %55 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i64, i64* %55 monotonic, align 8
  %57 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %54, i64 0, i32 1
  store i64 %58, i64* %59, align 8, !tbaa !357
  fence acquire
  %60 = icmp eq i64 %56, %58
  br i1 %60, label %61, label %62

61:                                               ; preds = %50
  tail call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 335, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIiLm512EE11try_dequeueIiEEbRT_, i64 0, i64 0)) #30
  unreachable

62:                                               ; preds = %50
  fence release
  store atomic i64 %53, i64* %8 monotonic, align 8
  fence syncscope("singlethread") release
  %63 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %54, i64 0, i32 7
  %64 = load i8*, i8** %63, align 8, !tbaa !323
  %65 = shl i64 %56, 2
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 4, !tbaa !122
  store i32 %68, i32* %1, align 4, !tbaa !122
  %69 = add i64 %56, 1
  %70 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %54, i64 0, i32 8
  %71 = load i64, i64* %70, align 8, !tbaa !325
  %72 = and i64 %71, %69
  fence release
  store atomic i64 %72, i64* %55 monotonic, align 8
  br label %73

73:                                               ; preds = %21, %62, %35
  %74 = phi i1 [ false, %35 ], [ true, %62 ], [ true, %21 ]
  store i8 0, i8* %3, align 1, !tbaa !353
  ret i1 %74
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIiLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKiEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue.110"*, i32* dereferenceable(4)) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.110", %"class.moodycamel::ReaderWriterQueue.110"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !tbaa !353, !range !62
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIiLm512EE14ReentrantGuardC2ERb, i64 0, i64 0)) #30
  unreachable

7:                                                ; preds = %2
  store i8 1, i8* %3, align 1, !tbaa !353
  %8 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.110", %"class.moodycamel::ReaderWriterQueue.110"* %0, i64 0, i32 2
  %9 = bitcast %"class.moodycamel::weak_atomic.111"* %8 to i64*
  %10 = load atomic i64, i64* %9 monotonic, align 8
  %11 = inttoptr i64 %10 to %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"*
  %12 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %11, i64 0, i32 4
  %13 = load i64, i64* %12, align 8, !tbaa !358
  %14 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = add i64 %15, 1
  %17 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %11, i64 0, i32 8
  %18 = load i64, i64* %17, align 8, !tbaa !325
  %19 = and i64 %16, %18
  %20 = icmp eq i64 %19, %13
  br i1 %20, label %21, label %25

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i64, i64* %22 monotonic, align 8
  store i64 %23, i64* %12, align 8, !tbaa !358
  %24 = icmp eq i64 %13, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %21, %7
  fence acquire
  %26 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %11, i64 0, i32 7
  %27 = load i8*, i8** %26, align 8, !tbaa !323
  %28 = shl i64 %15, 2
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %1, align 4, !tbaa !122
  store i32 %31, i32* %30, align 4, !tbaa !122
  fence release
  store atomic i64 %19, i64* %14 monotonic, align 8
  br label %106

32:                                               ; preds = %21
  fence acquire
  %33 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %11, i64 0, i32 6
  %34 = bitcast %"class.moodycamel::weak_atomic.111"* %33 to i64*
  %35 = load atomic i64, i64* %34 monotonic, align 8
  %36 = inttoptr i64 %35 to %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"*
  %37 = bitcast %"class.moodycamel::ReaderWriterQueue.110"* %0 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = inttoptr i64 %38 to %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"*
  %40 = icmp eq %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %36, %39
  br i1 %40, label %62, label %41

41:                                               ; preds = %32
  fence acquire
  %42 = load atomic i64, i64* %34 monotonic, align 8
  %43 = inttoptr i64 %42 to %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"*
  %44 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i64, i64* %44 monotonic, align 8
  %46 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %43, i64 0, i32 4
  store i64 %45, i64* %46, align 8, !tbaa !358
  %47 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load atomic i64, i64* %47 monotonic, align 8
  fence acquire
  %49 = icmp eq i64 %45, %48
  br i1 %49, label %51, label %50

50:                                               ; preds = %41
  tail call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 551, i8* getelementptr inbounds ([188 x i8], [188 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIiLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKiEEEbDpOT0_, i64 0, i64 0)) #30
  unreachable

51:                                               ; preds = %41
  store i64 %45, i64* %46, align 8, !tbaa !358
  %52 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %43, i64 0, i32 7
  %53 = load i8*, i8** %52, align 8, !tbaa !323
  %54 = shl i64 %45, 2
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %1, align 4, !tbaa !122
  store i32 %57, i32* %56, align 4, !tbaa !122
  %58 = add i64 %45, 1
  %59 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* %43, i64 0, i32 8
  %60 = load i64, i64* %59, align 8, !tbaa !325
  %61 = and i64 %60, %58
  store atomic i64 %61, i64* %47 monotonic, align 8
  fence release
  store atomic i64 %42, i64* %9 monotonic, align 8
  br label %106

62:                                               ; preds = %32
  %63 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.110", %"class.moodycamel::ReaderWriterQueue.110"* %0, i64 0, i32 3
  %64 = load i64, i64* %63, align 8, !tbaa !322
  %65 = icmp ult i64 %64, 512
  %66 = zext i1 %65 to i64
  %67 = shl i64 %64, %66
  %68 = shl i64 %67, 2
  %69 = or i64 %68, 3
  %70 = add i64 %69, 167
  %71 = tail call noalias i8* @malloc(i64 %70) #10
  %72 = icmp eq i8* %71, null
  br i1 %72, label %106, label %73

73:                                               ; preds = %62
  %74 = ptrtoint i8* %71 to i64
  %75 = sub i64 0, %74
  %76 = and i64 %75, 7
  %77 = getelementptr inbounds i8, i8* %71, i64 %76
  %78 = getelementptr inbounds i8, i8* %77, i64 160
  %79 = ptrtoint i8* %78 to i64
  %80 = sub i64 0, %79
  %81 = and i64 %80, 3
  %82 = getelementptr inbounds i8, i8* %78, i64 %81
  %83 = getelementptr inbounds i8, i8* %77, i64 64
  %84 = getelementptr inbounds i8, i8* %77, i64 128
  %85 = bitcast i8* %84 to %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"**
  store %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"* null, %"struct.moodycamel::ReaderWriterQueue<int, 512>::Block"** %85, align 8, !tbaa !359
  %86 = getelementptr inbounds i8, i8* %77, i64 136
  %87 = bitcast i8* %86 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 16, i1 false)
  store i8* %82, i8** %87, align 8, !tbaa !323
  %88 = getelementptr inbounds i8, i8* %77, i64 144
  %89 = bitcast i8* %88 to i64*
  %90 = add i64 %67, -1
  store i64 %90, i64* %89, align 8, !tbaa !325
  %91 = getelementptr inbounds i8, i8* %77, i64 152
  %92 = bitcast i8* %91 to i8**
  store i8* %71, i8** %92, align 8, !tbaa !326
  %93 = ptrtoint i8* %77 to i64
  store i64 %67, i64* %63, align 8, !tbaa !322
  %94 = bitcast i8* %82 to i32*
  %95 = load i32, i32* %1, align 4, !tbaa !122
  store i32 %95, i32* %94, align 4, !tbaa !122
  %96 = bitcast i8* %77 to i64*
  %97 = load atomic i64, i64* %96 monotonic, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %73
  tail call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 581, i8* getelementptr inbounds ([188 x i8], [188 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIiLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKiEEEbDpOT0_, i64 0, i64 0)) #30
  unreachable

100:                                              ; preds = %73
  %101 = getelementptr inbounds i8, i8* %77, i64 8
  %102 = bitcast i8* %101 to i64*
  store i64 1, i64* %102, align 8, !tbaa !357
  %103 = bitcast i8* %83 to i64*
  store atomic i64 1, i64* %103 monotonic, align 8
  %104 = load atomic i64, i64* %34 monotonic, align 8
  %105 = bitcast i8* %84 to i64*
  store atomic i64 %104, i64* %105 monotonic, align 8
  store atomic i64 %93, i64* %34 monotonic, align 8
  fence release
  store atomic i64 %93, i64* %9 monotonic, align 8
  br label %106

106:                                              ; preds = %62, %25, %51, %100
  %107 = phi i1 [ true, %100 ], [ true, %51 ], [ true, %25 ], [ false, %62 ]
  store i8 0, i8* %3, align 1, !tbaa !353
  ret i1 %107
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC15ThreadSafeQueueIsE7isValidEv(%"class.MARC::ThreadSafeQueue.69"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.69", %"class.MARC::ThreadSafeQueue.69"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC15ThreadSafeQueueIsE10invalidateEv(%"class.MARC::ThreadSafeQueue.69"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.69", %"class.MARC::ThreadSafeQueue.69"* %0, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %2 seq_cst, align 1
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIsE6tryPopERs(%"class.MARC::ThreadSafeLockFreeQueue.101"*, i16* dereferenceable(2)) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = atomicrmw add i64* %8, i64 -1 acquire
  %13 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 0
  %14 = tail call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIsLm512EE11try_dequeueIsEEbRT_(%"class.moodycamel::ReaderWriterQueue.103"* nonnull %13, i16* nonnull dereferenceable(2) %1)
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 792, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIsLm512EE11try_dequeueIsEEbRT_, i64 0, i64 0)) #30
  unreachable

16:                                               ; preds = %2, %11, %7
  %17 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %7 ]
  ret i1 %17
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIsE7waitPopERs(%"class.MARC::ThreadSafeLockFreeQueue.101"*, i16* dereferenceable(2)) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %7, %19
  %11 = load atomic i8, i8* %3 seq_cst, align 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %.loopexit, label %14

14:                                               ; preds = %10
  %15 = load atomic i64, i64* %9 monotonic, align 8
  %16 = icmp sgt i64 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = atomicrmw add i64* %9, i64 -1 acquire
  br label %.loopexit1

19:                                               ; preds = %14
  %20 = tail call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %8, i64 5000)
  br i1 %20, label %.loopexit1, label %10

.loopexit1:                                       ; preds = %19, %17
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 0
  %22 = tail call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIsLm512EE11try_dequeueIsEEbRT_(%"class.moodycamel::ReaderWriterQueue.103"* nonnull %21, i16* nonnull dereferenceable(2) %1)
  br i1 %22, label %.loopexit, label %23

23:                                               ; preds = %.loopexit1
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIsLm512EE18wait_dequeue_timedIsEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %10, %.loopexit1
  %24 = load atomic i8, i8* %3 seq_cst, align 1
  %25 = and i8 %24, 1
  %26 = icmp ne i8 %25, 0
  br label %27

27:                                               ; preds = %2, %.loopexit
  %28 = phi i1 [ %26, %.loopexit ], [ false, %2 ]
  ret i1 %28
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIsE7waitPopEv(%"class.MARC::ThreadSafeLockFreeQueue.101"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca i16, align 2
  %3 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = load atomic i8, i8* %4 seq_cst, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %20, %8
  %12 = load atomic i8, i8* %4 seq_cst, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %.loopexit, label %15

15:                                               ; preds = %11
  %16 = load atomic i64, i64* %10 monotonic, align 8
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  %19 = atomicrmw add i64* %10, i64 -1 acquire
  br label %.loopexit1

20:                                               ; preds = %15
  %21 = tail call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %9, i64 5000)
  br i1 %21, label %.loopexit1, label %11

.loopexit1:                                       ; preds = %20, %18
  %22 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 0
  %23 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIsLm512EE11try_dequeueIsEEbRT_(%"class.moodycamel::ReaderWriterQueue.103"* nonnull %22, i16* nonnull dereferenceable(2) %2)
  br i1 %23, label %.loopexit, label %24

24:                                               ; preds = %.loopexit1
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIsLm512EE18wait_dequeue_timedIsEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %11, %.loopexit1
  %25 = load atomic i8, i8* %4 seq_cst, align 1
  %26 = and i8 %25, 1
  %27 = icmp ne i8 %26, 0
  br label %28

28:                                               ; preds = %1, %.loopexit
  %29 = phi i1 [ %27, %.loopexit ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %3) #10
  ret i1 %29
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIsE4pushEs(%"class.MARC::ThreadSafeLockFreeQueue.101"*, i16 signext) unnamed_addr #14 comdat align 2 {
  %3 = alloca i16, align 2
  store i16 %1, i16* %3, align 2, !tbaa !253
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 0
  %5 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIsLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKsEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue.103"* nonnull %4, i16* nonnull dereferenceable(2) %3)
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i64* %7, i64 1 release
  %9 = icmp sgt i64 %8, -2
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.28, i64 0, i64 0), i32 644, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel9spsc_sema20LightweightSemaphore6signalEl, i64 0, i64 0)) #30
  unreachable

11:                                               ; preds = %6
  %12 = icmp slt i64 %8, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %15 = call i32 @sem_post(%union.sem_t* nonnull %14) #10
  br label %16

16:                                               ; preds = %2, %11, %13
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIsE8waitPushEsl(%"class.MARC::ThreadSafeLockFreeQueue.101"*, i16 signext, i64) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = alloca i16, align 2
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %7

7:                                                ; preds = %12, %3
  %8 = load atomic i64, i64* %5 monotonic, align 8
  %9 = icmp sgt i64 %8, 0
  %10 = select i1 %9, i64 %8, i64 0
  %11 = icmp ugt i64 %10, %2
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = load atomic i8, i8* %6 seq_cst, align 1
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %.loopexit, label %7

16:                                               ; preds = %7
  %17 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %17)
  store i16 %1, i16* %4, align 2, !tbaa !253
  %18 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 0
  %19 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIsLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKsEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue.103"* nonnull %18, i16* nonnull dereferenceable(2) %4)
  br i1 %19, label %20, label %29

20:                                               ; preds = %16
  %21 = atomicrmw add i64* %5, i64 1 release
  %22 = icmp sgt i64 %21, -2
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.28, i64 0, i64 0), i32 644, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel9spsc_sema20LightweightSemaphore6signalEl, i64 0, i64 0)) #30
  unreachable

24:                                               ; preds = %20
  %25 = icmp slt i64 %21, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %28 = call i32 @sem_post(%union.sem_t* nonnull %27) #10
  br label %29

29:                                               ; preds = %16, %24, %26
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %17)
  br label %.loopexit

.loopexit:                                        ; preds = %12, %29
  %30 = phi i1 [ true, %29 ], [ false, %12 ]
  ret i1 %30
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIsE5clearEv(%"class.MARC::ThreadSafeLockFreeQueue.101"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca i16, align 2
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp slt i64 %4, 1
  br i1 %5, label %.loopexit2, label %6

6:                                                ; preds = %1
  %7 = bitcast i16* %2 to i8*
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 0
  br label %12

12:                                               ; preds = %6, %29
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7) #10
  %13 = load atomic i8, i8* %8 seq_cst, align 1
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %29, label %.preheader

.preheader:                                       ; preds = %12, %24
  %16 = load atomic i8, i8* %8 seq_cst, align 1
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %.loopexit, label %19

19:                                               ; preds = %.preheader
  %20 = load atomic i64, i64* %10 monotonic, align 8
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = atomicrmw add i64* %10, i64 -1 acquire
  br label %.loopexit1

24:                                               ; preds = %19
  %25 = call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %9, i64 5000)
  br i1 %25, label %.loopexit1, label %.preheader

.loopexit1:                                       ; preds = %24, %22
  %26 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIsLm512EE11try_dequeueIsEEbRT_(%"class.moodycamel::ReaderWriterQueue.103"* nonnull %11, i16* nonnull dereferenceable(2) %2)
  br i1 %26, label %.loopexit, label %27

27:                                               ; preds = %.loopexit1
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIsLm512EE18wait_dequeue_timedIsEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %.preheader, %.loopexit1
  %28 = load atomic i8, i8* %8 seq_cst, align 1
  br label %29

29:                                               ; preds = %12, %.loopexit
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7) #10
  %30 = load atomic i64, i64* %3 monotonic, align 8
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %.loopexit2, label %12

.loopexit2:                                       ; preds = %29, %1
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC23ThreadSafeLockFreeQueueIsE5emptyEv(%"class.MARC::ThreadSafeLockFreeQueue.101"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = icmp slt i64 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i64 @_ZNK4MARC23ThreadSafeLockFreeQueueIsE4sizeEv(%"class.MARC::ThreadSafeLockFreeQueue.101"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue.101", %"class.MARC::ThreadSafeLockFreeQueue.101"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = icmp sgt i64 %3, 0
  %5 = select i1 %4, i64 %3, i64 0
  ret i64 %5
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIsLm512EE11try_dequeueIsEEbRT_(%"class.moodycamel::ReaderWriterQueue.103"*, i16* dereferenceable(2)) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.103", %"class.moodycamel::ReaderWriterQueue.103"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 1, !tbaa !353, !range !62
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIsLm512EE14ReentrantGuardC2ERb, i64 0, i64 0)) #30
  unreachable

7:                                                ; preds = %2
  store i8 1, i8* %3, align 1, !tbaa !353
  %8 = bitcast %"class.moodycamel::ReaderWriterQueue.103"* %0 to i64*
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = inttoptr i64 %9 to %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"*
  %11 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %10, i64 0, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !360
  %13 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = icmp eq i64 %14, %12
  br i1 %15, label %16, label %20

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %10, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load atomic i64, i64* %17 monotonic, align 8
  store i64 %18, i64* %11, align 8, !tbaa !360
  %19 = icmp eq i64 %12, %18
  br i1 %19, label %35, label %20

20:                                               ; preds = %16, %7
  fence acquire
  br label %21

21:                                               ; preds = %41, %20
  %22 = phi %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* [ %43, %41 ], [ %10, %20 ]
  %23 = phi i64 [ %48, %41 ], [ %14, %20 ]
  %24 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %22, i64 0, i32 7
  %25 = load i8*, i8** %24, align 8, !tbaa !306
  %26 = shl i64 %23, 1
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to i16*
  %29 = load i16, i16* %28, align 2, !tbaa !253
  store i16 %29, i16* %1, align 2, !tbaa !253
  %30 = add i64 %23, 1
  %31 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %22, i64 0, i32 8
  %32 = load i64, i64* %31, align 8, !tbaa !308
  %33 = and i64 %32, %30
  fence release
  %34 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %33, i64* %34 monotonic, align 8
  br label %73

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.103", %"class.moodycamel::ReaderWriterQueue.103"* %0, i64 0, i32 2
  %37 = bitcast %"class.moodycamel::weak_atomic.104"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = inttoptr i64 %38 to %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"*
  %40 = icmp eq %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %10, %39
  br i1 %40, label %73, label %41

41:                                               ; preds = %35
  fence acquire
  %42 = load atomic i64, i64* %8 monotonic, align 8
  %43 = inttoptr i64 %42 to %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"*
  %44 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load atomic i64, i64* %44 monotonic, align 8
  %46 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %43, i64 0, i32 1
  store i64 %45, i64* %46, align 8, !tbaa !360
  %47 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i64, i64* %47 monotonic, align 8
  fence acquire
  %49 = icmp eq i64 %48, %45
  br i1 %49, label %50, label %21

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %43, i64 0, i32 6
  %52 = bitcast %"class.moodycamel::weak_atomic.104"* %51 to i64*
  %53 = load atomic i64, i64* %52 monotonic, align 8
  %54 = inttoptr i64 %53 to %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"*
  %55 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i64, i64* %55 monotonic, align 8
  %57 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %54, i64 0, i32 1
  store i64 %58, i64* %59, align 8, !tbaa !360
  fence acquire
  %60 = icmp eq i64 %56, %58
  br i1 %60, label %61, label %62

61:                                               ; preds = %50
  tail call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 335, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIsLm512EE11try_dequeueIsEEbRT_, i64 0, i64 0)) #30
  unreachable

62:                                               ; preds = %50
  fence release
  store atomic i64 %53, i64* %8 monotonic, align 8
  fence syncscope("singlethread") release
  %63 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %54, i64 0, i32 7
  %64 = load i8*, i8** %63, align 8, !tbaa !306
  %65 = shl i64 %56, 1
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = bitcast i8* %66 to i16*
  %68 = load i16, i16* %67, align 2, !tbaa !253
  store i16 %68, i16* %1, align 2, !tbaa !253
  %69 = add i64 %56, 1
  %70 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %54, i64 0, i32 8
  %71 = load i64, i64* %70, align 8, !tbaa !308
  %72 = and i64 %71, %69
  fence release
  store atomic i64 %72, i64* %55 monotonic, align 8
  br label %73

73:                                               ; preds = %21, %62, %35
  %74 = phi i1 [ false, %35 ], [ true, %62 ], [ true, %21 ]
  store i8 0, i8* %3, align 1, !tbaa !353
  ret i1 %74
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIsLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKsEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue.103"*, i16* dereferenceable(2)) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.103", %"class.moodycamel::ReaderWriterQueue.103"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !tbaa !353, !range !62
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIsLm512EE14ReentrantGuardC2ERb, i64 0, i64 0)) #30
  unreachable

7:                                                ; preds = %2
  store i8 1, i8* %3, align 1, !tbaa !353
  %8 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.103", %"class.moodycamel::ReaderWriterQueue.103"* %0, i64 0, i32 2
  %9 = bitcast %"class.moodycamel::weak_atomic.104"* %8 to i64*
  %10 = load atomic i64, i64* %9 monotonic, align 8
  %11 = inttoptr i64 %10 to %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"*
  %12 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %11, i64 0, i32 4
  %13 = load i64, i64* %12, align 8, !tbaa !361
  %14 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = add i64 %15, 1
  %17 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %11, i64 0, i32 8
  %18 = load i64, i64* %17, align 8, !tbaa !308
  %19 = and i64 %16, %18
  %20 = icmp eq i64 %19, %13
  br i1 %20, label %21, label %25

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i64, i64* %22 monotonic, align 8
  store i64 %23, i64* %12, align 8, !tbaa !361
  %24 = icmp eq i64 %13, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %21, %7
  fence acquire
  %26 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %11, i64 0, i32 7
  %27 = load i8*, i8** %26, align 8, !tbaa !306
  %28 = shl i64 %15, 1
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to i16*
  %31 = load i16, i16* %1, align 2, !tbaa !253
  store i16 %31, i16* %30, align 2, !tbaa !253
  fence release
  store atomic i64 %19, i64* %14 monotonic, align 8
  br label %105

32:                                               ; preds = %21
  fence acquire
  %33 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %11, i64 0, i32 6
  %34 = bitcast %"class.moodycamel::weak_atomic.104"* %33 to i64*
  %35 = load atomic i64, i64* %34 monotonic, align 8
  %36 = inttoptr i64 %35 to %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"*
  %37 = bitcast %"class.moodycamel::ReaderWriterQueue.103"* %0 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = inttoptr i64 %38 to %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"*
  %40 = icmp eq %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %36, %39
  br i1 %40, label %62, label %41

41:                                               ; preds = %32
  fence acquire
  %42 = load atomic i64, i64* %34 monotonic, align 8
  %43 = inttoptr i64 %42 to %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"*
  %44 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i64, i64* %44 monotonic, align 8
  %46 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %43, i64 0, i32 4
  store i64 %45, i64* %46, align 8, !tbaa !361
  %47 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load atomic i64, i64* %47 monotonic, align 8
  fence acquire
  %49 = icmp eq i64 %45, %48
  br i1 %49, label %51, label %50

50:                                               ; preds = %41
  tail call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 551, i8* getelementptr inbounds ([196 x i8], [196 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIsLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKsEEEbDpOT0_, i64 0, i64 0)) #30
  unreachable

51:                                               ; preds = %41
  store i64 %45, i64* %46, align 8, !tbaa !361
  %52 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %43, i64 0, i32 7
  %53 = load i8*, i8** %52, align 8, !tbaa !306
  %54 = shl i64 %45, 1
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = bitcast i8* %55 to i16*
  %57 = load i16, i16* %1, align 2, !tbaa !253
  store i16 %57, i16* %56, align 2, !tbaa !253
  %58 = add i64 %45, 1
  %59 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* %43, i64 0, i32 8
  %60 = load i64, i64* %59, align 8, !tbaa !308
  %61 = and i64 %60, %58
  store atomic i64 %61, i64* %47 monotonic, align 8
  fence release
  store atomic i64 %42, i64* %9 monotonic, align 8
  br label %105

62:                                               ; preds = %32
  %63 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue.103", %"class.moodycamel::ReaderWriterQueue.103"* %0, i64 0, i32 3
  %64 = load i64, i64* %63, align 8, !tbaa !305
  %65 = icmp ult i64 %64, 512
  %66 = zext i1 %65 to i64
  %67 = shl i64 %64, %66
  %68 = shl i64 %67, 1
  %69 = or i64 %68, 1
  %70 = add i64 %69, 167
  %71 = tail call noalias i8* @malloc(i64 %70) #10
  %72 = icmp eq i8* %71, null
  br i1 %72, label %105, label %73

73:                                               ; preds = %62
  %74 = ptrtoint i8* %71 to i64
  %75 = sub i64 0, %74
  %76 = and i64 %75, 7
  %77 = getelementptr inbounds i8, i8* %71, i64 %76
  %78 = getelementptr inbounds i8, i8* %77, i64 160
  %79 = ptrtoint i8* %78 to i64
  %80 = and i64 %79, 1
  %81 = getelementptr inbounds i8, i8* %78, i64 %80
  %82 = getelementptr inbounds i8, i8* %77, i64 64
  %83 = getelementptr inbounds i8, i8* %77, i64 128
  %84 = bitcast i8* %83 to %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"**
  store %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"* null, %"struct.moodycamel::ReaderWriterQueue<short, 512>::Block"** %84, align 8, !tbaa !362
  %85 = getelementptr inbounds i8, i8* %77, i64 136
  %86 = bitcast i8* %85 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 16, i1 false)
  store i8* %81, i8** %86, align 8, !tbaa !306
  %87 = getelementptr inbounds i8, i8* %77, i64 144
  %88 = bitcast i8* %87 to i64*
  %89 = add i64 %67, -1
  store i64 %89, i64* %88, align 8, !tbaa !308
  %90 = getelementptr inbounds i8, i8* %77, i64 152
  %91 = bitcast i8* %90 to i8**
  store i8* %71, i8** %91, align 8, !tbaa !309
  %92 = ptrtoint i8* %77 to i64
  store i64 %67, i64* %63, align 8, !tbaa !305
  %93 = bitcast i8* %81 to i16*
  %94 = load i16, i16* %1, align 2, !tbaa !253
  store i16 %94, i16* %93, align 2, !tbaa !253
  %95 = bitcast i8* %77 to i64*
  %96 = load atomic i64, i64* %95 monotonic, align 8
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %73
  tail call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 581, i8* getelementptr inbounds ([196 x i8], [196 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIsLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKsEEEbDpOT0_, i64 0, i64 0)) #30
  unreachable

99:                                               ; preds = %73
  %100 = getelementptr inbounds i8, i8* %77, i64 8
  %101 = bitcast i8* %100 to i64*
  store i64 1, i64* %101, align 8, !tbaa !360
  %102 = bitcast i8* %82 to i64*
  store atomic i64 1, i64* %102 monotonic, align 8
  %103 = load atomic i64, i64* %34 monotonic, align 8
  %104 = bitcast i8* %83 to i64*
  store atomic i64 %103, i64* %104 monotonic, align 8
  store atomic i64 %92, i64* %34 monotonic, align 8
  fence release
  store atomic i64 %92, i64* %9 monotonic, align 8
  br label %105

105:                                              ; preds = %62, %25, %51, %99
  %106 = phi i1 [ true, %99 ], [ true, %51 ], [ true, %25 ], [ false, %62 ]
  store i8 0, i8* %3, align 1, !tbaa !353
  ret i1 %106
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC15ThreadSafeQueueIaE7isValidEv(%"class.MARC::ThreadSafeQueue.60"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.60", %"class.MARC::ThreadSafeQueue.60"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4MARC15ThreadSafeQueueIaE10invalidateEv(%"class.MARC::ThreadSafeQueue.60"*) unnamed_addr #3 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeQueue.60", %"class.MARC::ThreadSafeQueue.60"* %0, i64 0, i32 2, i32 0, i32 0
  store atomic i8 0, i8* %2 seq_cst, align 1
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIaE6tryPopERa(%"class.MARC::ThreadSafeLockFreeQueue"*, i8* dereferenceable(1)) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = atomicrmw add i64* %8, i64 -1 acquire
  %13 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 0
  %14 = tail call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIaLm512EE11try_dequeueIaEEbRT_(%"class.moodycamel::ReaderWriterQueue"* nonnull %13, i8* nonnull dereferenceable(1) %1)
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 792, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIaLm512EE11try_dequeueIaEEbRT_, i64 0, i64 0)) #30
  unreachable

16:                                               ; preds = %2, %11, %7
  %17 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %7 ]
  ret i1 %17
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIaE7waitPopERa(%"class.MARC::ThreadSafeLockFreeQueue"*, i8* dereferenceable(1)) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %7, %19
  %11 = load atomic i8, i8* %3 seq_cst, align 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %.loopexit, label %14

14:                                               ; preds = %10
  %15 = load atomic i64, i64* %9 monotonic, align 8
  %16 = icmp sgt i64 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = atomicrmw add i64* %9, i64 -1 acquire
  br label %.loopexit1

19:                                               ; preds = %14
  %20 = tail call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %8, i64 5000)
  br i1 %20, label %.loopexit1, label %10

.loopexit1:                                       ; preds = %19, %17
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 0
  %22 = tail call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIaLm512EE11try_dequeueIaEEbRT_(%"class.moodycamel::ReaderWriterQueue"* nonnull %21, i8* nonnull dereferenceable(1) %1)
  br i1 %22, label %.loopexit, label %23

23:                                               ; preds = %.loopexit1
  tail call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIaLm512EE18wait_dequeue_timedIaEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %10, %.loopexit1
  %24 = load atomic i8, i8* %3 seq_cst, align 1
  %25 = and i8 %24, 1
  %26 = icmp ne i8 %25, 0
  br label %27

27:                                               ; preds = %2, %.loopexit
  %28 = phi i1 [ %26, %.loopexit ], [ false, %2 ]
  ret i1 %28
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIaE7waitPopEv(%"class.MARC::ThreadSafeLockFreeQueue"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #10
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %19, %7
  %11 = load atomic i8, i8* %3 seq_cst, align 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %.loopexit, label %14

14:                                               ; preds = %10
  %15 = load atomic i64, i64* %9 monotonic, align 8
  %16 = icmp sgt i64 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = atomicrmw add i64* %9, i64 -1 acquire
  br label %.loopexit1

19:                                               ; preds = %14
  %20 = tail call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %8, i64 5000)
  br i1 %20, label %.loopexit1, label %10

.loopexit1:                                       ; preds = %19, %17
  %21 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 0
  %22 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIaLm512EE11try_dequeueIaEEbRT_(%"class.moodycamel::ReaderWriterQueue"* nonnull %21, i8* nonnull dereferenceable(1) %2)
  br i1 %22, label %.loopexit, label %23

23:                                               ; preds = %.loopexit1
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIaLm512EE18wait_dequeue_timedIaEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %10, %.loopexit1
  %24 = load atomic i8, i8* %3 seq_cst, align 1
  %25 = and i8 %24, 1
  %26 = icmp ne i8 %25, 0
  br label %27

27:                                               ; preds = %1, %.loopexit
  %28 = phi i1 [ %26, %.loopexit ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  ret i1 %28
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIaE4pushEa(%"class.MARC::ThreadSafeLockFreeQueue"*, i8 signext) unnamed_addr #14 comdat align 2 {
  %3 = alloca i8, align 1
  store i8 %1, i8* %3, align 1, !tbaa !220
  %4 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 0
  %5 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIaLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKaEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue"* nonnull %4, i8* nonnull dereferenceable(1) %3)
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i64* %7, i64 1 release
  %9 = icmp sgt i64 %8, -2
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.28, i64 0, i64 0), i32 644, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel9spsc_sema20LightweightSemaphore6signalEl, i64 0, i64 0)) #30
  unreachable

11:                                               ; preds = %6
  %12 = icmp slt i64 %8, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %15 = call i32 @sem_post(%union.sem_t* nonnull %14) #10
  br label %16

16:                                               ; preds = %2, %11, %13
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN4MARC23ThreadSafeLockFreeQueueIaE8waitPushEal(%"class.MARC::ThreadSafeLockFreeQueue"*, i8 signext, i64) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %7

7:                                                ; preds = %12, %3
  %8 = load atomic i64, i64* %5 monotonic, align 8
  %9 = icmp sgt i64 %8, 0
  %10 = select i1 %9, i64 %8, i64 0
  %11 = icmp ugt i64 %10, %2
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  %13 = load atomic i8, i8* %6 seq_cst, align 1
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %.loopexit, label %7

16:                                               ; preds = %7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 %1, i8* %4, align 1, !tbaa !220
  %17 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 0
  %18 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIaLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKaEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue"* nonnull %17, i8* nonnull dereferenceable(1) %4)
  br i1 %18, label %19, label %28

19:                                               ; preds = %16
  %20 = atomicrmw add i64* %5, i64 1 release
  %21 = icmp sgt i64 %20, -2
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.28, i64 0, i64 0), i32 644, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel9spsc_sema20LightweightSemaphore6signalEl, i64 0, i64 0)) #30
  unreachable

23:                                               ; preds = %19
  %24 = icmp slt i64 %20, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %27 = call i32 @sem_post(%union.sem_t* nonnull %26) #10
  br label %28

28:                                               ; preds = %16, %23, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  br label %.loopexit

.loopexit:                                        ; preds = %12, %28
  %29 = phi i1 [ true, %28 ], [ false, %12 ]
  ret i1 %29
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4MARC23ThreadSafeLockFreeQueueIaE5clearEv(%"class.MARC::ThreadSafeLockFreeQueue"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp slt i64 %4, 1
  br i1 %5, label %.loopexit2, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1
  %9 = getelementptr inbounds %"class.moodycamel::spsc_sema::LightweightSemaphore", %"class.moodycamel::spsc_sema::LightweightSemaphore"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 0
  br label %11

11:                                               ; preds = %6, %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #10
  %12 = load atomic i8, i8* %7 seq_cst, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %28, label %.preheader

.preheader:                                       ; preds = %11, %23
  %15 = load atomic i8, i8* %7 seq_cst, align 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %.loopexit, label %18

18:                                               ; preds = %.preheader
  %19 = load atomic i64, i64* %9 monotonic, align 8
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = atomicrmw add i64* %9, i64 -1 acquire
  br label %.loopexit1

23:                                               ; preds = %18
  %24 = call zeroext i1 @_ZN10moodycamel9spsc_sema20LightweightSemaphore23waitWithPartialSpinningEl(%"class.moodycamel::spsc_sema::LightweightSemaphore"* nonnull %8, i64 5000)
  br i1 %24, label %.loopexit1, label %.preheader

.loopexit1:                                       ; preds = %23, %21
  %25 = call zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIaLm512EE11try_dequeueIaEEbRT_(%"class.moodycamel::ReaderWriterQueue"* nonnull %10, i8* nonnull dereferenceable(1) %2)
  br i1 %25, label %.loopexit, label %26

26:                                               ; preds = %.loopexit1
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel25BlockingReaderWriterQueueIaLm512EE18wait_dequeue_timedIaEEbRT_l, i64 0, i64 0)) #30
  unreachable

.loopexit:                                        ; preds = %.preheader, %.loopexit1
  %27 = load atomic i8, i8* %7 seq_cst, align 1
  br label %28

28:                                               ; preds = %11, %.loopexit
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #10
  %29 = load atomic i64, i64* %3 monotonic, align 8
  %30 = icmp slt i64 %29, 1
  br i1 %30, label %.loopexit2, label %11

.loopexit2:                                       ; preds = %28, %1
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZNK4MARC23ThreadSafeLockFreeQueueIaE5emptyEv(%"class.MARC::ThreadSafeLockFreeQueue"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = icmp slt i64 %3, 1
  ret i1 %4
}

; Function Attrs: uwtable
define linkonce_odr dso_local i64 @_ZNK4MARC23ThreadSafeLockFreeQueueIaE4sizeEv(%"class.MARC::ThreadSafeLockFreeQueue"*) unnamed_addr #14 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.MARC::ThreadSafeLockFreeQueue", %"class.MARC::ThreadSafeLockFreeQueue"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = icmp sgt i64 %3, 0
  %5 = select i1 %4, i64 %3, i64 0
  ret i64 %5
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIaLm512EE11try_dequeueIaEEbRT_(%"class.moodycamel::ReaderWriterQueue"*, i8* dereferenceable(1)) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue", %"class.moodycamel::ReaderWriterQueue"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 1, !tbaa !353, !range !62
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIaLm512EE14ReentrantGuardC2ERb, i64 0, i64 0)) #30
  unreachable

7:                                                ; preds = %2
  store i8 1, i8* %3, align 1, !tbaa !353
  %8 = bitcast %"class.moodycamel::ReaderWriterQueue"* %0 to i64*
  %9 = load atomic i64, i64* %8 monotonic, align 8
  %10 = inttoptr i64 %9 to %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"*
  %11 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %10, i64 0, i32 1
  %12 = load i64, i64* %11, align 8, !tbaa !363
  %13 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = icmp eq i64 %14, %12
  br i1 %15, label %16, label %20

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %10, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load atomic i64, i64* %17 monotonic, align 8
  store i64 %18, i64* %11, align 8, !tbaa !363
  %19 = icmp eq i64 %12, %18
  br i1 %19, label %33, label %20

20:                                               ; preds = %16, %7
  fence acquire
  br label %21

21:                                               ; preds = %39, %20
  %22 = phi %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* [ %41, %39 ], [ %10, %20 ]
  %23 = phi i64 [ %46, %39 ], [ %14, %20 ]
  %24 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %22, i64 0, i32 7
  %25 = load i8*, i8** %24, align 8, !tbaa !285
  %26 = getelementptr inbounds i8, i8* %25, i64 %23
  %27 = load i8, i8* %26, align 1, !tbaa !220
  store i8 %27, i8* %1, align 1, !tbaa !220
  %28 = add i64 %23, 1
  %29 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %22, i64 0, i32 8
  %30 = load i64, i64* %29, align 8, !tbaa !289
  %31 = and i64 %30, %28
  fence release
  %32 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %31, i64* %32 monotonic, align 8
  br label %69

33:                                               ; preds = %16
  %34 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue", %"class.moodycamel::ReaderWriterQueue"* %0, i64 0, i32 2
  %35 = bitcast %"class.moodycamel::weak_atomic"* %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = inttoptr i64 %36 to %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"*
  %38 = icmp eq %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %10, %37
  br i1 %38, label %69, label %39

39:                                               ; preds = %33
  fence acquire
  %40 = load atomic i64, i64* %8 monotonic, align 8
  %41 = inttoptr i64 %40 to %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"*
  %42 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %41, i64 0, i32 1
  store i64 %43, i64* %44, align 8, !tbaa !363
  %45 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i64, i64* %45 monotonic, align 8
  fence acquire
  %47 = icmp eq i64 %46, %43
  br i1 %47, label %48, label %21

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %41, i64 0, i32 6
  %50 = bitcast %"class.moodycamel::weak_atomic"* %49 to i64*
  %51 = load atomic i64, i64* %50 monotonic, align 8
  %52 = inttoptr i64 %51 to %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"*
  %53 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load atomic i64, i64* %55 monotonic, align 8
  %57 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %52, i64 0, i32 1
  store i64 %56, i64* %57, align 8, !tbaa !363
  fence acquire
  %58 = icmp eq i64 %54, %56
  br i1 %58, label %59, label %60

59:                                               ; preds = %48
  tail call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 335, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIaLm512EE11try_dequeueIaEEbRT_, i64 0, i64 0)) #30
  unreachable

60:                                               ; preds = %48
  fence release
  store atomic i64 %51, i64* %8 monotonic, align 8
  fence syncscope("singlethread") release
  %61 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %52, i64 0, i32 7
  %62 = load i8*, i8** %61, align 8, !tbaa !285
  %63 = getelementptr inbounds i8, i8* %62, i64 %54
  %64 = load i8, i8* %63, align 1, !tbaa !220
  store i8 %64, i8* %1, align 1, !tbaa !220
  %65 = add i64 %54, 1
  %66 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %52, i64 0, i32 8
  %67 = load i64, i64* %66, align 8, !tbaa !289
  %68 = and i64 %67, %65
  fence release
  store atomic i64 %68, i64* %53 monotonic, align 8
  br label %69

69:                                               ; preds = %21, %60, %33
  %70 = phi i1 [ false, %33 ], [ true, %60 ], [ true, %21 ]
  store i8 0, i8* %3, align 1, !tbaa !353
  ret i1 %70
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN10moodycamel17ReaderWriterQueueIaLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKaEEEbDpOT0_(%"class.moodycamel::ReaderWriterQueue"*, i8* dereferenceable(1)) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue", %"class.moodycamel::ReaderWriterQueue"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 1, !tbaa !353, !range !62
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @__assert_fail(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIaLm512EE14ReentrantGuardC2ERb, i64 0, i64 0)) #30
  unreachable

7:                                                ; preds = %2
  store i8 1, i8* %3, align 1, !tbaa !353
  %8 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue", %"class.moodycamel::ReaderWriterQueue"* %0, i64 0, i32 2
  %9 = bitcast %"class.moodycamel::weak_atomic"* %8 to i64*
  %10 = load atomic i64, i64* %9 monotonic, align 8
  %11 = inttoptr i64 %10 to %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"*
  %12 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %11, i64 0, i32 4
  %13 = load i64, i64* %12, align 8, !tbaa !364
  %14 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = add i64 %15, 1
  %17 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %11, i64 0, i32 8
  %18 = load i64, i64* %17, align 8, !tbaa !289
  %19 = and i64 %16, %18
  %20 = icmp eq i64 %19, %13
  br i1 %20, label %21, label %25

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i64, i64* %22 monotonic, align 8
  store i64 %23, i64* %12, align 8, !tbaa !364
  %24 = icmp eq i64 %13, %23
  br i1 %24, label %30, label %25

25:                                               ; preds = %21, %7
  fence acquire
  %26 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %11, i64 0, i32 7
  %27 = load i8*, i8** %26, align 8, !tbaa !285
  %28 = getelementptr inbounds i8, i8* %27, i64 %15
  %29 = load i8, i8* %1, align 1, !tbaa !220
  store i8 %29, i8* %28, align 1, !tbaa !220
  fence release
  store atomic i64 %19, i64* %14 monotonic, align 8
  br label %95

30:                                               ; preds = %21
  fence acquire
  %31 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %11, i64 0, i32 6
  %32 = bitcast %"class.moodycamel::weak_atomic"* %31 to i64*
  %33 = load atomic i64, i64* %32 monotonic, align 8
  %34 = inttoptr i64 %33 to %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"*
  %35 = bitcast %"class.moodycamel::ReaderWriterQueue"* %0 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = inttoptr i64 %36 to %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"*
  %38 = icmp eq %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %34, %37
  br i1 %38, label %58, label %39

39:                                               ; preds = %30
  fence acquire
  %40 = load atomic i64, i64* %32 monotonic, align 8
  %41 = inttoptr i64 %40 to %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"*
  %42 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %41, i64 0, i32 4
  store i64 %43, i64* %44, align 8, !tbaa !364
  %45 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load atomic i64, i64* %45 monotonic, align 8
  fence acquire
  %47 = icmp eq i64 %43, %46
  br i1 %47, label %49, label %48

48:                                               ; preds = %39
  tail call void @__assert_fail(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 551, i8* getelementptr inbounds ([220 x i8], [220 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIaLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKaEEEbDpOT0_, i64 0, i64 0)) #30
  unreachable

49:                                               ; preds = %39
  store i64 %43, i64* %44, align 8, !tbaa !364
  %50 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %41, i64 0, i32 7
  %51 = load i8*, i8** %50, align 8, !tbaa !285
  %52 = getelementptr inbounds i8, i8* %51, i64 %43
  %53 = load i8, i8* %1, align 1, !tbaa !220
  store i8 %53, i8* %52, align 1, !tbaa !220
  %54 = add i64 %43, 1
  %55 = getelementptr inbounds %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block", %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* %41, i64 0, i32 8
  %56 = load i64, i64* %55, align 8, !tbaa !289
  %57 = and i64 %56, %54
  store atomic i64 %57, i64* %45 monotonic, align 8
  fence release
  store atomic i64 %40, i64* %9 monotonic, align 8
  br label %95

58:                                               ; preds = %30
  %59 = getelementptr inbounds %"class.moodycamel::ReaderWriterQueue", %"class.moodycamel::ReaderWriterQueue"* %0, i64 0, i32 3
  %60 = load i64, i64* %59, align 8, !tbaa !284
  %61 = icmp ult i64 %60, 512
  %62 = zext i1 %61 to i64
  %63 = shl i64 %60, %62
  %64 = add i64 %63, 167
  %65 = tail call noalias i8* @malloc(i64 %64) #10
  %66 = icmp eq i8* %65, null
  br i1 %66, label %95, label %67

67:                                               ; preds = %58
  %68 = ptrtoint i8* %65 to i64
  %69 = sub i64 0, %68
  %70 = and i64 %69, 7
  %71 = getelementptr inbounds i8, i8* %65, i64 %70
  %72 = getelementptr inbounds i8, i8* %71, i64 160
  %73 = getelementptr inbounds i8, i8* %71, i64 64
  %74 = getelementptr inbounds i8, i8* %71, i64 128
  %75 = bitcast i8* %74 to %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"**
  store %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"* null, %"struct.moodycamel::ReaderWriterQueue<signed char, 512>::Block"** %75, align 8, !tbaa !365
  %76 = getelementptr inbounds i8, i8* %71, i64 136
  %77 = bitcast i8* %76 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 16, i1 false)
  store i8* %72, i8** %77, align 8, !tbaa !285
  %78 = getelementptr inbounds i8, i8* %71, i64 144
  %79 = bitcast i8* %78 to i64*
  %80 = add i64 %63, -1
  store i64 %80, i64* %79, align 8, !tbaa !289
  %81 = getelementptr inbounds i8, i8* %71, i64 152
  %82 = bitcast i8* %81 to i8**
  store i8* %65, i8** %82, align 8, !tbaa !290
  %83 = ptrtoint i8* %71 to i64
  store i64 %63, i64* %59, align 8, !tbaa !284
  %84 = load i8, i8* %1, align 1, !tbaa !220
  store i8 %84, i8* %72, align 1, !tbaa !220
  %85 = bitcast i8* %71 to i64*
  %86 = load atomic i64, i64* %85 monotonic, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %67
  tail call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i32 581, i8* getelementptr inbounds ([220 x i8], [220 x i8]* @__PRETTY_FUNCTION__._ZN10moodycamel17ReaderWriterQueueIaLm512EE13inner_enqueueILNS1_14AllocationModeE0EJRKaEEEbDpOT0_, i64 0, i64 0)) #30
  unreachable

89:                                               ; preds = %67
  %90 = getelementptr inbounds i8, i8* %71, i64 8
  %91 = bitcast i8* %90 to i64*
  store i64 1, i64* %91, align 8, !tbaa !363
  %92 = bitcast i8* %73 to i64*
  store atomic i64 1, i64* %92 monotonic, align 8
  %93 = load atomic i64, i64* %32 monotonic, align 8
  %94 = bitcast i8* %74 to i64*
  store atomic i64 %93, i64* %94 monotonic, align 8
  store atomic i64 %83, i64* %32 monotonic, align 8
  fence release
  store atomic i64 %83, i64* %9 monotonic, align 8
  br label %95

95:                                               ; preds = %58, %25, %49, %89
  %96 = phi i1 [ true, %89 ], [ true, %49 ], [ true, %25 ], [ false, %58 ]
  store i8 0, i8* %3, align 1, !tbaa !353
  ret i1 %96
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt11_Deque_baseIlSaIlEE17_M_initialize_mapEm(%"class.std::_Deque_base.90"*, i64) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = lshr i64 %1, 6
  %4 = add nuw nsw i64 %3, 1
  %5 = icmp ugt i64 %3, 5
  %6 = select i1 %5, i64 %3, i64 5
  %7 = add nuw nsw i64 %6, 3
  %8 = getelementptr inbounds %"class.std::_Deque_base.90", %"class.std::_Deque_base.90"* %0, i64 0, i32 0, i32 1
  store i64 %7, i64* %8, align 8, !tbaa !366
  %9 = icmp ugt i64 %7, 2305843009213693951
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZSt17__throw_bad_allocv() #33
  unreachable

11:                                               ; preds = %2
  %12 = shl nuw nsw i64 %7, 3
  %13 = tail call i8* @_Znwm(i64 %12)
  %14 = bitcast i8* %13 to i64**
  %15 = bitcast %"class.std::_Deque_base.90"* %0 to i8**
  store i8* %13, i8** %15, align 8, !tbaa !344
  %16 = load i64, i64* %8, align 8, !tbaa !366
  %17 = sub i64 %16, %4
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds i64*, i64** %14, i64 %18
  %20 = getelementptr inbounds i64*, i64** %19, i64 %4
  br label %21

21:                                               ; preds = %11, %24
  %22 = phi i64** [ %26, %24 ], [ %19, %11 ]
  %23 = invoke i8* @_Znwm(i64 512)
          to label %24 unwind label %28

24:                                               ; preds = %21
  %25 = bitcast i64** %22 to i8**
  store i8* %23, i8** %25, align 8, !tbaa !72
  %26 = getelementptr inbounds i64*, i64** %22, i64 1
  %27 = icmp ult i64** %26, %20
  br i1 %27, label %21, label %52

28:                                               ; preds = %21
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = tail call i8* @__cxa_begin_catch(i8* %30) #10
  %32 = icmp ugt i64** %22, %19
  br i1 %32, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %28, %.preheader
  %33 = phi i64** [ %36, %.preheader ], [ %19, %28 ]
  %34 = bitcast i64** %33 to i8**
  %35 = load i8*, i8** %34, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %35) #10
  %36 = getelementptr inbounds i64*, i64** %33, i64 1
  %37 = icmp ult i64** %36, %22
  br i1 %37, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %.preheader, %28
  invoke void @__cxa_rethrow() #33
          to label %43 unwind label %38

38:                                               ; preds = %.loopexit
  %39 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @__cxa_end_catch()
          to label %44 unwind label %40

40:                                               ; preds = %38
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  tail call void @__clang_call_terminate(i8* %42) #30
  unreachable

43:                                               ; preds = %.loopexit
  unreachable

44:                                               ; preds = %38
  %45 = extractvalue { i8*, i32 } %39, 0
  %46 = tail call i8* @__cxa_begin_catch(i8* %45) #10
  %47 = load i8*, i8** %15, align 8, !tbaa !344
  tail call void @_ZdlPv(i8* %47) #10
  %48 = bitcast %"class.std::_Deque_base.90"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #33
          to label %73 unwind label %49

49:                                               ; preds = %44
  %50 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %51 unwind label %70

51:                                               ; preds = %49
  resume { i8*, i32 } %50

52:                                               ; preds = %24
  %53 = getelementptr inbounds %"class.std::_Deque_base.90", %"class.std::_Deque_base.90"* %0, i64 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.std::_Deque_base.90", %"class.std::_Deque_base.90"* %0, i64 0, i32 0, i32 2, i32 3
  store i64** %19, i64*** %54, align 8, !tbaa !367
  %55 = load i64*, i64** %19, align 8, !tbaa !72
  %56 = getelementptr inbounds %"class.std::_Deque_base.90", %"class.std::_Deque_base.90"* %0, i64 0, i32 0, i32 2, i32 1
  store i64* %55, i64** %56, align 8, !tbaa !368
  %57 = getelementptr inbounds i64, i64* %55, i64 64
  %58 = getelementptr inbounds %"class.std::_Deque_base.90", %"class.std::_Deque_base.90"* %0, i64 0, i32 0, i32 2, i32 2
  store i64* %57, i64** %58, align 8, !tbaa !369
  %59 = getelementptr inbounds i64*, i64** %20, i64 -1
  %60 = getelementptr inbounds %"class.std::_Deque_base.90", %"class.std::_Deque_base.90"* %0, i64 0, i32 0, i32 3, i32 3
  store i64** %59, i64*** %60, align 8, !tbaa !367
  %61 = load i64*, i64** %59, align 8, !tbaa !72
  %62 = getelementptr inbounds %"class.std::_Deque_base.90", %"class.std::_Deque_base.90"* %0, i64 0, i32 0, i32 3, i32 1
  store i64* %61, i64** %62, align 8, !tbaa !368
  %63 = getelementptr inbounds i64, i64* %61, i64 64
  %64 = getelementptr inbounds %"class.std::_Deque_base.90", %"class.std::_Deque_base.90"* %0, i64 0, i32 0, i32 3, i32 2
  store i64* %63, i64** %64, align 8, !tbaa !369
  %65 = ptrtoint i64* %55 to i64
  %66 = bitcast %"struct.std::_Deque_iterator.94"* %53 to i64*
  store i64 %65, i64* %66, align 8, !tbaa !370
  %67 = and i64 %1, 63
  %68 = getelementptr inbounds i64, i64* %61, i64 %67
  %69 = getelementptr inbounds %"class.std::_Deque_base.90", %"class.std::_Deque_base.90"* %0, i64 0, i32 0, i32 3, i32 0
  store i64* %68, i64** %69, align 8, !tbaa !371
  ret void

70:                                               ; preds = %49
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  tail call void @__clang_call_terminate(i8* %72) #30
  unreachable

73:                                               ; preds = %44
  unreachable
}

declare dso_local i8* @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: nounwind
declare dso_local void @_ZNSt9bad_allocD1Ev(%"class.std::bad_alloc"*) unnamed_addr #17

declare dso_local void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

; Function Attrs: nounwind
declare dso_local i32 @sem_init(%union.sem_t*, i32, i32) local_unnamed_addr #17

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base.81"*, i64) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = lshr i64 %1, 7
  %4 = add nuw nsw i64 %3, 1
  %5 = icmp ugt i64 %3, 5
  %6 = select i1 %5, i64 %3, i64 5
  %7 = add nuw nsw i64 %6, 3
  %8 = getelementptr inbounds %"class.std::_Deque_base.81", %"class.std::_Deque_base.81"* %0, i64 0, i32 0, i32 1
  store i64 %7, i64* %8, align 8, !tbaa !372
  %9 = icmp ugt i64 %7, 2305843009213693951
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZSt17__throw_bad_allocv() #33
  unreachable

11:                                               ; preds = %2
  %12 = shl nuw nsw i64 %7, 3
  %13 = tail call i8* @_Znwm(i64 %12)
  %14 = bitcast i8* %13 to i32**
  %15 = bitcast %"class.std::_Deque_base.81"* %0 to i8**
  store i8* %13, i8** %15, align 8, !tbaa !327
  %16 = load i64, i64* %8, align 8, !tbaa !372
  %17 = sub i64 %16, %4
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds i32*, i32** %14, i64 %18
  %20 = getelementptr inbounds i32*, i32** %19, i64 %4
  br label %21

21:                                               ; preds = %11, %24
  %22 = phi i32** [ %26, %24 ], [ %19, %11 ]
  %23 = invoke i8* @_Znwm(i64 512)
          to label %24 unwind label %28

24:                                               ; preds = %21
  %25 = bitcast i32** %22 to i8**
  store i8* %23, i8** %25, align 8, !tbaa !72
  %26 = getelementptr inbounds i32*, i32** %22, i64 1
  %27 = icmp ult i32** %26, %20
  br i1 %27, label %21, label %52

28:                                               ; preds = %21
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = tail call i8* @__cxa_begin_catch(i8* %30) #10
  %32 = icmp ugt i32** %22, %19
  br i1 %32, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %28, %.preheader
  %33 = phi i32** [ %36, %.preheader ], [ %19, %28 ]
  %34 = bitcast i32** %33 to i8**
  %35 = load i8*, i8** %34, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %35) #10
  %36 = getelementptr inbounds i32*, i32** %33, i64 1
  %37 = icmp ult i32** %36, %22
  br i1 %37, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %.preheader, %28
  invoke void @__cxa_rethrow() #33
          to label %43 unwind label %38

38:                                               ; preds = %.loopexit
  %39 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @__cxa_end_catch()
          to label %44 unwind label %40

40:                                               ; preds = %38
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  tail call void @__clang_call_terminate(i8* %42) #30
  unreachable

43:                                               ; preds = %.loopexit
  unreachable

44:                                               ; preds = %38
  %45 = extractvalue { i8*, i32 } %39, 0
  %46 = tail call i8* @__cxa_begin_catch(i8* %45) #10
  %47 = load i8*, i8** %15, align 8, !tbaa !327
  tail call void @_ZdlPv(i8* %47) #10
  %48 = bitcast %"class.std::_Deque_base.81"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #33
          to label %73 unwind label %49

49:                                               ; preds = %44
  %50 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %51 unwind label %70

51:                                               ; preds = %49
  resume { i8*, i32 } %50

52:                                               ; preds = %24
  %53 = getelementptr inbounds %"class.std::_Deque_base.81", %"class.std::_Deque_base.81"* %0, i64 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.std::_Deque_base.81", %"class.std::_Deque_base.81"* %0, i64 0, i32 0, i32 2, i32 3
  store i32** %19, i32*** %54, align 8, !tbaa !373
  %55 = load i32*, i32** %19, align 8, !tbaa !72
  %56 = getelementptr inbounds %"class.std::_Deque_base.81", %"class.std::_Deque_base.81"* %0, i64 0, i32 0, i32 2, i32 1
  store i32* %55, i32** %56, align 8, !tbaa !374
  %57 = getelementptr inbounds i32, i32* %55, i64 128
  %58 = getelementptr inbounds %"class.std::_Deque_base.81", %"class.std::_Deque_base.81"* %0, i64 0, i32 0, i32 2, i32 2
  store i32* %57, i32** %58, align 8, !tbaa !375
  %59 = getelementptr inbounds i32*, i32** %20, i64 -1
  %60 = getelementptr inbounds %"class.std::_Deque_base.81", %"class.std::_Deque_base.81"* %0, i64 0, i32 0, i32 3, i32 3
  store i32** %59, i32*** %60, align 8, !tbaa !373
  %61 = load i32*, i32** %59, align 8, !tbaa !72
  %62 = getelementptr inbounds %"class.std::_Deque_base.81", %"class.std::_Deque_base.81"* %0, i64 0, i32 0, i32 3, i32 1
  store i32* %61, i32** %62, align 8, !tbaa !374
  %63 = getelementptr inbounds i32, i32* %61, i64 128
  %64 = getelementptr inbounds %"class.std::_Deque_base.81", %"class.std::_Deque_base.81"* %0, i64 0, i32 0, i32 3, i32 2
  store i32* %63, i32** %64, align 8, !tbaa !375
  %65 = ptrtoint i32* %55 to i64
  %66 = bitcast %"struct.std::_Deque_iterator.85"* %53 to i64*
  store i64 %65, i64* %66, align 8, !tbaa !376
  %67 = and i64 %1, 127
  %68 = getelementptr inbounds i32, i32* %61, i64 %67
  %69 = getelementptr inbounds %"class.std::_Deque_base.81", %"class.std::_Deque_base.81"* %0, i64 0, i32 0, i32 3, i32 0
  store i32* %68, i32** %69, align 8, !tbaa !377
  ret void

70:                                               ; preds = %49
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  tail call void @__clang_call_terminate(i8* %72) #30
  unreachable

73:                                               ; preds = %44
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt11_Deque_baseIsSaIsEE17_M_initialize_mapEm(%"class.std::_Deque_base.72"*, i64) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = lshr i64 %1, 8
  %4 = add nuw nsw i64 %3, 1
  %5 = icmp ugt i64 %3, 5
  %6 = select i1 %5, i64 %3, i64 5
  %7 = add nuw nsw i64 %6, 3
  %8 = getelementptr inbounds %"class.std::_Deque_base.72", %"class.std::_Deque_base.72"* %0, i64 0, i32 0, i32 1
  store i64 %7, i64* %8, align 8, !tbaa !378
  %9 = icmp ugt i64 %7, 2305843009213693951
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZSt17__throw_bad_allocv() #33
  unreachable

11:                                               ; preds = %2
  %12 = shl nuw nsw i64 %7, 3
  %13 = tail call i8* @_Znwm(i64 %12)
  %14 = bitcast i8* %13 to i16**
  %15 = bitcast %"class.std::_Deque_base.72"* %0 to i8**
  store i8* %13, i8** %15, align 8, !tbaa !310
  %16 = load i64, i64* %8, align 8, !tbaa !378
  %17 = sub i64 %16, %4
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds i16*, i16** %14, i64 %18
  %20 = getelementptr inbounds i16*, i16** %19, i64 %4
  br label %21

21:                                               ; preds = %11, %24
  %22 = phi i16** [ %26, %24 ], [ %19, %11 ]
  %23 = invoke i8* @_Znwm(i64 512)
          to label %24 unwind label %28

24:                                               ; preds = %21
  %25 = bitcast i16** %22 to i8**
  store i8* %23, i8** %25, align 8, !tbaa !72
  %26 = getelementptr inbounds i16*, i16** %22, i64 1
  %27 = icmp ult i16** %26, %20
  br i1 %27, label %21, label %52

28:                                               ; preds = %21
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = tail call i8* @__cxa_begin_catch(i8* %30) #10
  %32 = icmp ugt i16** %22, %19
  br i1 %32, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %28, %.preheader
  %33 = phi i16** [ %36, %.preheader ], [ %19, %28 ]
  %34 = bitcast i16** %33 to i8**
  %35 = load i8*, i8** %34, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %35) #10
  %36 = getelementptr inbounds i16*, i16** %33, i64 1
  %37 = icmp ult i16** %36, %22
  br i1 %37, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %.preheader, %28
  invoke void @__cxa_rethrow() #33
          to label %43 unwind label %38

38:                                               ; preds = %.loopexit
  %39 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @__cxa_end_catch()
          to label %44 unwind label %40

40:                                               ; preds = %38
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  tail call void @__clang_call_terminate(i8* %42) #30
  unreachable

43:                                               ; preds = %.loopexit
  unreachable

44:                                               ; preds = %38
  %45 = extractvalue { i8*, i32 } %39, 0
  %46 = tail call i8* @__cxa_begin_catch(i8* %45) #10
  %47 = load i8*, i8** %15, align 8, !tbaa !310
  tail call void @_ZdlPv(i8* %47) #10
  %48 = bitcast %"class.std::_Deque_base.72"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #33
          to label %73 unwind label %49

49:                                               ; preds = %44
  %50 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %51 unwind label %70

51:                                               ; preds = %49
  resume { i8*, i32 } %50

52:                                               ; preds = %24
  %53 = getelementptr inbounds %"class.std::_Deque_base.72", %"class.std::_Deque_base.72"* %0, i64 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.std::_Deque_base.72", %"class.std::_Deque_base.72"* %0, i64 0, i32 0, i32 2, i32 3
  store i16** %19, i16*** %54, align 8, !tbaa !379
  %55 = load i16*, i16** %19, align 8, !tbaa !72
  %56 = getelementptr inbounds %"class.std::_Deque_base.72", %"class.std::_Deque_base.72"* %0, i64 0, i32 0, i32 2, i32 1
  store i16* %55, i16** %56, align 8, !tbaa !380
  %57 = getelementptr inbounds i16, i16* %55, i64 256
  %58 = getelementptr inbounds %"class.std::_Deque_base.72", %"class.std::_Deque_base.72"* %0, i64 0, i32 0, i32 2, i32 2
  store i16* %57, i16** %58, align 8, !tbaa !381
  %59 = getelementptr inbounds i16*, i16** %20, i64 -1
  %60 = getelementptr inbounds %"class.std::_Deque_base.72", %"class.std::_Deque_base.72"* %0, i64 0, i32 0, i32 3, i32 3
  store i16** %59, i16*** %60, align 8, !tbaa !379
  %61 = load i16*, i16** %59, align 8, !tbaa !72
  %62 = getelementptr inbounds %"class.std::_Deque_base.72", %"class.std::_Deque_base.72"* %0, i64 0, i32 0, i32 3, i32 1
  store i16* %61, i16** %62, align 8, !tbaa !380
  %63 = getelementptr inbounds i16, i16* %61, i64 256
  %64 = getelementptr inbounds %"class.std::_Deque_base.72", %"class.std::_Deque_base.72"* %0, i64 0, i32 0, i32 3, i32 2
  store i16* %63, i16** %64, align 8, !tbaa !381
  %65 = ptrtoint i16* %55 to i64
  %66 = bitcast %"struct.std::_Deque_iterator.76"* %53 to i64*
  store i64 %65, i64* %66, align 8, !tbaa !382
  %67 = and i64 %1, 255
  %68 = getelementptr inbounds i16, i16* %61, i64 %67
  %69 = getelementptr inbounds %"class.std::_Deque_base.72", %"class.std::_Deque_base.72"* %0, i64 0, i32 0, i32 3, i32 0
  store i16* %68, i16** %69, align 8, !tbaa !383
  ret void

70:                                               ; preds = %49
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  tail call void @__clang_call_terminate(i8* %72) #30
  unreachable

73:                                               ; preds = %44
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt11_Deque_baseIaSaIaEE17_M_initialize_mapEm(%"class.std::_Deque_base.63"*, i64) local_unnamed_addr #14 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = lshr i64 %1, 9
  %4 = add nuw nsw i64 %3, 1
  %5 = icmp ugt i64 %3, 5
  %6 = select i1 %5, i64 %3, i64 5
  %7 = add nuw nsw i64 %6, 3
  %8 = getelementptr inbounds %"class.std::_Deque_base.63", %"class.std::_Deque_base.63"* %0, i64 0, i32 0, i32 1
  store i64 %7, i64* %8, align 8, !tbaa !384
  %9 = icmp ugt i64 %7, 2305843009213693951
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void @_ZSt17__throw_bad_allocv() #33
  unreachable

11:                                               ; preds = %2
  %12 = shl nuw nsw i64 %7, 3
  %13 = tail call i8* @_Znwm(i64 %12)
  %14 = bitcast i8* %13 to i8**
  %15 = bitcast %"class.std::_Deque_base.63"* %0 to i8**
  store i8* %13, i8** %15, align 8, !tbaa !293
  %16 = load i64, i64* %8, align 8, !tbaa !384
  %17 = sub i64 %16, %4
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds i8*, i8** %14, i64 %18
  %20 = getelementptr inbounds i8*, i8** %19, i64 %4
  br label %21

21:                                               ; preds = %11, %24
  %22 = phi i8** [ %25, %24 ], [ %19, %11 ]
  %23 = invoke i8* @_Znwm(i64 512)
          to label %24 unwind label %27

24:                                               ; preds = %21
  store i8* %23, i8** %22, align 8, !tbaa !72
  %25 = getelementptr inbounds i8*, i8** %22, i64 1
  %26 = icmp ult i8** %25, %20
  br i1 %26, label %21, label %50

27:                                               ; preds = %21
  %28 = landingpad { i8*, i32 }
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  %30 = tail call i8* @__cxa_begin_catch(i8* %29) #10
  %31 = icmp ugt i8** %22, %19
  br i1 %31, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %27, %.preheader
  %32 = phi i8** [ %34, %.preheader ], [ %19, %27 ]
  %33 = load i8*, i8** %32, align 8, !tbaa !72
  tail call void @_ZdlPv(i8* %33) #10
  %34 = getelementptr inbounds i8*, i8** %32, i64 1
  %35 = icmp ult i8** %34, %22
  br i1 %35, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %.preheader, %27
  invoke void @__cxa_rethrow() #33
          to label %41 unwind label %36

36:                                               ; preds = %.loopexit
  %37 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @__cxa_end_catch()
          to label %42 unwind label %38

38:                                               ; preds = %36
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  tail call void @__clang_call_terminate(i8* %40) #30
  unreachable

41:                                               ; preds = %.loopexit
  unreachable

42:                                               ; preds = %36
  %43 = extractvalue { i8*, i32 } %37, 0
  %44 = tail call i8* @__cxa_begin_catch(i8* %43) #10
  %45 = load i8*, i8** %15, align 8, !tbaa !293
  tail call void @_ZdlPv(i8* %45) #10
  %46 = bitcast %"class.std::_Deque_base.63"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false)
  invoke void @__cxa_rethrow() #33
          to label %71 unwind label %47

47:                                               ; preds = %42
  %48 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %49 unwind label %68

49:                                               ; preds = %47
  resume { i8*, i32 } %48

50:                                               ; preds = %24
  %51 = getelementptr inbounds %"class.std::_Deque_base.63", %"class.std::_Deque_base.63"* %0, i64 0, i32 0, i32 2
  %52 = getelementptr inbounds %"class.std::_Deque_base.63", %"class.std::_Deque_base.63"* %0, i64 0, i32 0, i32 2, i32 3
  store i8** %19, i8*** %52, align 8, !tbaa !385
  %53 = load i8*, i8** %19, align 8, !tbaa !72
  %54 = getelementptr inbounds %"class.std::_Deque_base.63", %"class.std::_Deque_base.63"* %0, i64 0, i32 0, i32 2, i32 1
  store i8* %53, i8** %54, align 8, !tbaa !386
  %55 = getelementptr inbounds i8, i8* %53, i64 512
  %56 = getelementptr inbounds %"class.std::_Deque_base.63", %"class.std::_Deque_base.63"* %0, i64 0, i32 0, i32 2, i32 2
  store i8* %55, i8** %56, align 8, !tbaa !387
  %57 = getelementptr inbounds i8*, i8** %20, i64 -1
  %58 = getelementptr inbounds %"class.std::_Deque_base.63", %"class.std::_Deque_base.63"* %0, i64 0, i32 0, i32 3, i32 3
  store i8** %57, i8*** %58, align 8, !tbaa !385
  %59 = load i8*, i8** %57, align 8, !tbaa !72
  %60 = getelementptr inbounds %"class.std::_Deque_base.63", %"class.std::_Deque_base.63"* %0, i64 0, i32 0, i32 3, i32 1
  store i8* %59, i8** %60, align 8, !tbaa !386
  %61 = getelementptr inbounds i8, i8* %59, i64 512
  %62 = getelementptr inbounds %"class.std::_Deque_base.63", %"class.std::_Deque_base.63"* %0, i64 0, i32 0, i32 3, i32 2
  store i8* %61, i8** %62, align 8, !tbaa !387
  %63 = ptrtoint i8* %53 to i64
  %64 = bitcast %"struct.std::_Deque_iterator.67"* %51 to i64*
  store i64 %63, i64* %64, align 8, !tbaa !388
  %65 = and i64 %1, 511
  %66 = getelementptr inbounds i8, i8* %59, i64 %65
  %67 = getelementptr inbounds %"class.std::_Deque_base.63", %"class.std::_Deque_base.63"* %0, i64 0, i32 0, i32 3, i32 0
  store i8* %66, i8** %67, align 8, !tbaa !389
  ret void

68:                                               ; preds = %47
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  tail call void @__clang_call_terminate(i8* %70) #30
  unreachable

71:                                               ; preds = %42
  unreachable
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i32 @NOELLE_getAvailableCores() local_unnamed_addr #25 {
  %1 = load i32, i32* getelementptr inbounds (%class.NoelleRuntime, %class.NoelleRuntime* @_ZL7runtime, i64 0, i32 6), align 8, !tbaa !12
  %2 = icmp sgt i32 %1, 1
  %3 = select i1 %2, i32 %1, i32 1
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i32 @_ZN13NoelleRuntime17getAvailableCoresEv(%class.NoelleRuntime* nocapture readonly) local_unnamed_addr #25 align 2 {
  %2 = getelementptr inbounds %class.NoelleRuntime, %class.NoelleRuntime* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8, !tbaa !12
  %4 = icmp sgt i32 %3, 1
  %5 = select i1 %4, i32 %3, i32 1
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define dso_local i32 @_ZN13NoelleRuntime23getMaximumNumberOfCoresEv(%class.NoelleRuntime* nocapture readnone) local_unnamed_addr #3 align 2 {
  %2 = load i32, i32* @_ZZN13NoelleRuntime23getMaximumNumberOfCoresEvE5cores, align 4, !tbaa !122
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %1
  %5 = tail call i8* @getenv(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0)) #10
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = tail call i32 @_ZNSt6thread20hardware_concurrencyEv() #10
  %9 = lshr i32 %8, 1
  br label %13

10:                                               ; preds = %4
  %11 = tail call i64 @strtol(i8* nocapture nonnull %5, i8** null, i32 10) #10
  %12 = trunc i64 %11 to i32
  br label %13

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %12, %10 ], [ %9, %7 ]
  store i32 %14, i32* @_ZZN13NoelleRuntime23getMaximumNumberOfCoresEvE5cores, align 4, !tbaa !122
  br label %15

15:                                               ; preds = %13, %1
  %16 = phi i32 [ %14, %13 ], [ %2, %1 ]
  ret i32 %16
}

attributes #0 = { cold nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { cold nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { cold nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { cold norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #22 = { noinline noreturn nounwind }
attributes #23 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #24 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #25 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #26 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #27 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #28 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #29 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #30 = { noreturn nounwind }
attributes #31 = { nounwind readnone }
attributes #32 = { builtin nounwind }
attributes #33 = { noreturn }
attributes #34 = { builtin }
attributes #35 = { cold }

!llvm.ident = !{!0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 9.0.0 (git@github.com:scampanoni/LLVM_installer.git 713d2f6594d9a0b77e7f9a120aaa7c917715a640)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = !{!9, !9, i64 0}
!9 = !{!"double", !4, i64 0}
!10 = distinct !{!10, !7}
!11 = !{!"4"}
!12 = !{!13, !17, i64 104}
!13 = !{!"_ZTS13NoelleRuntime", !14, i64 0, !17, i64 8, !18, i64 16, !19, i64 40, !20, i64 80, !17, i64 104, !17, i64 108, !17, i64 112}
!14 = !{!"any pointer", !15, i64 0}
!15 = !{!"omnipotent char", !16, i64 0}
!16 = !{!"Simple C++ TBAA"}
!17 = !{!"int", !15, i64 0}
!18 = !{!"_ZTSSt6vectorIjSaIjEE"}
!19 = !{!"_ZTSSt6vectorIbSaIbEE"}
!20 = !{!"_ZTSSt6vectorIP12DOALL_args_tSaIS1_EE"}
!21 = !{!"23"}
!22 = !{!"25"}
!23 = !{!"24"}
!24 = !{!"0"}
!25 = !{!"1"}
!26 = !{!"2"}
!27 = !{!"3"}
!28 = !{!"6"}
!29 = !{!"11"}
!30 = !{!"13"}
!31 = !{!"5"}
!32 = !{!"8"}
!33 = !{!"12"}
!34 = !{!"14"}
!35 = !{!"7"}
!36 = !{!"10"}
!37 = !{!"17"}
!38 = !{!"15"}
!39 = !{!"18"}
!40 = !{!"16"}
!41 = !{!"9"}
!42 = !{!43, !9, i64 0}
!43 = !{!"", !9, i64 0, !9, i64 8}
!44 = !{!43, !9, i64 8}
!45 = !{!"30"}
!46 = !{!"20"}
!47 = !{!"19"}
!48 = !{!"27"}
!49 = !{!"26"}
!50 = !{!51, !52, i64 0}
!51 = !{!"timeval", !52, i64 0, !52, i64 8}
!52 = !{!"long", !4, i64 0}
!53 = !{!51, !52, i64 8}
!54 = distinct !{!54, !55}
!55 = !{!"llvm.loop.unroll.disable"}
!56 = distinct !{!56, !55}
!57 = !{!58, !60, i64 152}
!58 = !{!"_ZTSN4MARC11ThreadCTaskE", !14, i64 8, !14, i64 16, !59, i64 24, !60, i64 152, !60, i64 153, !61, i64 160, !17, i64 168}
!59 = !{!"_ZTS9cpu_set_t", !15, i64 0}
!60 = !{!"bool", !15, i64 0}
!61 = !{!"long", !15, i64 0}
!62 = !{i8 0, i8 2}
!63 = !{!58, !14, i64 8}
!64 = !{!58, !14, i64 16}
!65 = !{!66, !14, i64 24}
!66 = !{!"_ZTSSt15_Deque_iteratorISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EERS5_PS5_E", !14, i64 0, !14, i64 8, !14, i64 16, !14, i64 24}
!67 = !{!66, !14, i64 0}
!68 = !{!66, !14, i64 8}
!69 = !{!66, !14, i64 16}
!70 = !{!71, !14, i64 0}
!71 = !{!"_ZTSSt10_Head_baseILm0EPN4MARC11IThreadTaskELb0EE", !14, i64 0}
!72 = !{!14, !14, i64 0}
!73 = !{!74, !74, i64 0}
!74 = !{!"vtable pointer", !16, i64 0}
!75 = !{!76, !14, i64 0}
!76 = !{!"_ZTSSt11unique_lockISt5mutexE", !14, i64 0, !60, i64 8}
!77 = !{!76, !60, i64 8}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE5beginEv: argument 0"}
!80 = distinct !{!80, !"_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE5beginEv"}
!81 = !{!82, !14, i64 16}
!82 = !{!"_ZTSSt11_Deque_baseISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE", !83, i64 0}
!83 = !{!"_ZTSNSt11_Deque_baseISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE11_Deque_implE", !14, i64 0, !61, i64 8, !66, i64 16, !66, i64 48}
!84 = !{!82, !14, i64 32}
!85 = !{!82, !14, i64 24}
!86 = !{!82, !14, i64 40}
!87 = !{!88, !14, i64 24}
!88 = !{!"_ZTSSt15_Deque_iteratorIPN4MARC11ThreadCTaskERS2_PS2_E", !14, i64 0, !14, i64 8, !14, i64 16, !14, i64 24}
!89 = !{!88, !14, i64 0}
!90 = !{!88, !14, i64 8}
!91 = !{!88, !14, i64 16}
!92 = !{!58, !60, i64 153}
!93 = !{!94, !14, i64 8}
!94 = !{!"_ZTSSt12_Vector_baseIPN4MARC11ThreadCTaskESaIS2_EE", !95, i64 0}
!95 = !{!"_ZTSNSt12_Vector_baseIPN4MARC11ThreadCTaskESaIS2_EE12_Vector_implE", !14, i64 0, !14, i64 8, !14, i64 16}
!96 = !{!94, !14, i64 0}
!97 = !{!58, !61, i64 160}
!98 = !{!94, !14, i64 16}
!99 = !{!100, !14, i64 48}
!100 = !{!"_ZTSSt11_Deque_baseIPN4MARC11ThreadCTaskESaIS2_EE", !101, i64 0}
!101 = !{!"_ZTSNSt11_Deque_baseIPN4MARC11ThreadCTaskESaIS2_EE11_Deque_implE", !14, i64 0, !61, i64 8, !88, i64 16, !88, i64 48}
!102 = !{!100, !14, i64 64}
!103 = !{!100, !61, i64 8}
!104 = !{!100, !14, i64 72}
!105 = !{!100, !14, i64 0}
!106 = !{!107, !60, i64 296}
!107 = !{!"_ZTSN4MARC19ThreadPoolInterfaceE", !108, i64 8, !110, i64 16, !111, i64 40, !112, i64 64, !60, i64 296, !113, i64 304}
!108 = !{!"_ZTSSt6atomicIbE", !109, i64 0}
!109 = !{!"_ZTSSt13__atomic_baseIbE", !60, i64 0}
!110 = !{!"_ZTSSt6vectorISt6threadSaIS0_EE"}
!111 = !{!"_ZTSSt6vectorIPSt6atomicIbESaIS2_EE"}
!112 = !{!"_ZTSN4MARC20ThreadSafeMutexQueueISt8functionIFvvEEEE", !113, i64 96, !114, i64 136, !114, i64 184}
!113 = !{!"_ZTSSt5mutex"}
!114 = !{!"_ZTSSt18condition_variable", !15, i64 0}
!115 = !{!116, !14, i64 8}
!116 = !{!"_ZTSSt12_Vector_baseISt6threadSaIS0_EE", !117, i64 0}
!117 = !{!"_ZTSNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implE", !14, i64 0, !14, i64 8, !14, i64 16}
!118 = !{!116, !14, i64 0}
!119 = !{!120, !14, i64 0}
!120 = !{!"_ZTSSt12_Vector_baseIPSt6atomicIbESaIS2_EE", !121, i64 0}
!121 = !{!"_ZTSNSt12_Vector_baseIPSt6atomicIbESaIS2_EE12_Vector_implE", !14, i64 0, !14, i64 8, !14, i64 16}
!122 = !{!17, !17, i64 0}
!123 = !{!109, !60, i64 0}
!124 = !{!120, !14, i64 8}
!125 = !{!120, !14, i64 16}
!126 = !{!116, !14, i64 16}
!127 = !{!128, !61, i64 0}
!128 = !{!"_ZTSNSt6thread2idE", !61, i64 0}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZNSt6thread14__make_invokerIPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjEJS3_RS6_RiEEENS_8_InvokerISt5tupleIJNSt5decayIT_E4typeEDpNSD_IT0_E4typeEEEEEOSE_DpOSH_: argument 0"}
!131 = distinct !{!131, !"_ZNSt6thread14__make_invokerIPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjEJS3_RS6_RiEEENS_8_InvokerISt5tupleIJNSt5decayIT_E4typeEDpNSD_IT0_E4typeEEEEEOSE_DpOSH_"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZNSt6thread13_S_make_stateINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEESt10unique_ptrINS_6_StateESt14default_deleteISE_EEOT_: argument 0"}
!134 = distinct !{!134, !"_ZNSt6thread13_S_make_stateINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEESt10unique_ptrINS_6_StateESt14default_deleteISE_EEOT_"}
!135 = !{!136, !17, i64 0}
!136 = !{!"_ZTSSt10_Head_baseILm3EiLb0EE", !17, i64 0}
!137 = !{!138, !14, i64 0}
!138 = !{!"_ZTSSt10_Head_baseILm2EPSt6atomicIbELb0EE", !14, i64 0}
!139 = !{!140, !14, i64 0}
!140 = !{!"_ZTSSt10_Head_baseILm1EPN4MARC19ThreadPoolInterfaceELb0EE", !14, i64 0}
!141 = !{!142, !14, i64 0}
!142 = !{!"_ZTSSt10_Head_baseILm0EPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjELb0EE", !14, i64 0}
!143 = !{!144}
!144 = distinct !{!144, !145, !"_ZNSt6thread14__make_invokerIPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjEJS3_RS6_RiEEENS_8_InvokerISt5tupleIJNSt5decayIT_E4typeEDpNSD_IT0_E4typeEEEEEOSE_DpOSH_: argument 0"}
!145 = distinct !{!145, !"_ZNSt6thread14__make_invokerIPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjEJS3_RS6_RiEEENS_8_InvokerISt5tupleIJNSt5decayIT_E4typeEDpNSD_IT0_E4typeEEEEEOSE_DpOSH_"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZNSt6thread13_S_make_stateINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEESt10unique_ptrINS_6_StateESt14default_deleteISE_EEOT_: argument 0"}
!148 = distinct !{!148, !"_ZNSt6thread13_S_make_stateINS_8_InvokerISt5tupleIJPFvPN4MARC19ThreadPoolInterfaceEPSt6atomicIbEjES5_S8_iEEEEEESt10unique_ptrINS_6_StateESt14default_deleteISE_EEOT_"}
!149 = !{!61, !61, i64 0}
!150 = !{!151}
!151 = distinct !{!151, !152}
!152 = distinct !{!152, !"LVerDomain"}
!153 = !{!154}
!154 = distinct !{!154, !152}
!155 = distinct !{!155, !7}
!156 = distinct !{!156, !55}
!157 = distinct !{!157, !7}
!158 = !{!159}
!159 = distinct !{!159, !160}
!160 = distinct !{!160, !"LVerDomain"}
!161 = !{!162}
!162 = distinct !{!162, !160}
!163 = distinct !{!163, !7}
!164 = distinct !{!164, !55}
!165 = distinct !{!165, !7}
!166 = !{!100, !14, i64 40}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE5beginEv: argument 0"}
!169 = distinct !{!169, !"_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE5beginEv"}
!170 = !{!100, !14, i64 16}
!171 = !{!100, !14, i64 32}
!172 = !{!100, !14, i64 24}
!173 = !{!174, !14, i64 0}
!174 = !{!"_ZTSSt12_Vector_baseIPN4MARC23ThreadSafeSpinLockQueueIPNS0_11ThreadCTaskEEESaIS5_EE", !175, i64 0}
!175 = !{!"_ZTSNSt12_Vector_baseIPN4MARC23ThreadSafeSpinLockQueueIPNS0_11ThreadCTaskEEESaIS5_EE12_Vector_implE", !14, i64 0, !14, i64 8, !14, i64 16}
!176 = !{!174, !14, i64 8}
!177 = !{!178}
!178 = distinct !{!178, !179, !"_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE5beginEv: argument 0"}
!179 = distinct !{!179, !"_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE5beginEv"}
!180 = !{!181, !14, i64 0}
!181 = !{!"_ZTSSt18_Bit_iterator_base", !14, i64 0, !17, i64 8}
!182 = !{!181, !17, i64 8}
!183 = !{!13, !17, i64 108}
!184 = !{!185, !14, i64 16}
!185 = !{!"_ZTSSt14_Function_base", !15, i64 0, !14, i64 16}
!186 = !{!13, !14, i64 0}
!187 = !{!188, !14, i64 0}
!188 = !{!"_ZTSSt12_Vector_baseIP12DOALL_args_tSaIS1_EE", !189, i64 0}
!189 = !{!"_ZTSNSt12_Vector_baseIP12DOALL_args_tSaIS1_EE12_Vector_implE", !14, i64 0, !14, i64 8, !14, i64 16}
!190 = !{!191, !14, i64 32}
!191 = !{!"_ZTSNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataE", !192, i64 0, !192, i64 16, !14, i64 32}
!192 = !{!"_ZTSSt13_Bit_iterator"}
!193 = !{!194, !14, i64 0}
!194 = !{!"_ZTSSt12_Vector_baseIjSaIjEE", !195, i64 0}
!195 = !{!"_ZTSNSt12_Vector_baseIjSaIjEE12_Vector_implE", !14, i64 0, !14, i64 8, !14, i64 16}
!196 = !{!197, !14, i64 24}
!197 = !{!"_ZTSSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E", !14, i64 0, !14, i64 8, !14, i64 16, !14, i64 24}
!198 = !{!197, !14, i64 0}
!199 = !{!197, !14, i64 8}
!200 = !{!197, !14, i64 16}
!201 = !{!202, !14, i64 24}
!202 = !{!"_ZTSSt8functionIFvvEE", !14, i64 24}
!203 = !{!204}
!204 = distinct !{!204, !205, !"_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv: argument 0"}
!205 = distinct !{!205, !"_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv"}
!206 = !{!207}
!207 = distinct !{!207, !208, !"_ZNSt5dequeISt8functionIFvvEESaIS2_EE3endEv: argument 0"}
!208 = distinct !{!208, !"_ZNSt5dequeISt8functionIFvvEESaIS2_EE3endEv"}
!209 = !{!210, !14, i64 0}
!210 = !{!"_ZTSSt11_Deque_baseISt8functionIFvvEESaIS2_EE", !211, i64 0}
!211 = !{!"_ZTSNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implE", !14, i64 0, !61, i64 8, !197, i64 16, !197, i64 48}
!212 = !{!210, !14, i64 40}
!213 = !{!210, !14, i64 72}
!214 = !{!210, !14, i64 16}
!215 = !{!210, !14, i64 32}
!216 = !{!210, !14, i64 24}
!217 = !{!210, !14, i64 48}
!218 = !{!210, !14, i64 64}
!219 = !{i64 0, i64 8, !220, i64 0, i64 8, !220, i64 0, i64 8, !220, i64 0, i64 16, !220, i64 0, i64 16, !220}
!220 = !{!15, !15, i64 0}
!221 = !{!210, !61, i64 8}
!222 = !{!223}
!223 = distinct !{!223, !224, !"_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv: argument 0"}
!224 = distinct !{!224, !"_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv"}
!225 = !{!226}
!226 = distinct !{!226, !227, !"_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE5beginEv: argument 0"}
!227 = distinct !{!227, !"_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE5beginEv"}
!228 = !{i64 0, i64 128, !220}
!229 = !{!82, !61, i64 8}
!230 = !{!82, !14, i64 0}
!231 = !{!82, !14, i64 48}
!232 = !{!233}
!233 = distinct !{!233, !234, !"_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE5beginEv: argument 0"}
!234 = distinct !{!234, !"_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE5beginEv"}
!235 = !{!236}
!236 = distinct !{!236, !237, !"_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE3endEv: argument 0"}
!237 = distinct !{!237, !"_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE3endEv"}
!238 = !{!82, !14, i64 72}
!239 = !{!240}
!240 = distinct !{!240, !241, !"_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE5beginEv: argument 0"}
!241 = distinct !{!241, !"_ZNSt5dequeISt10unique_ptrIN4MARC11IThreadTaskESt14default_deleteIS2_EESaIS5_EE5beginEv"}
!242 = !{!82, !14, i64 64}
!243 = !{!174, !14, i64 16}
!244 = !{!245}
!245 = distinct !{!245, !246, !"_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE5beginEv: argument 0"}
!246 = distinct !{!246, !"_ZNSt5dequeIPN4MARC11ThreadCTaskESaIS2_EE5beginEv"}
!247 = distinct !{!247, !55}
!248 = !{!249, !14, i64 0}
!249 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !250, i64 0, !61, i64 8, !15, i64 16}
!250 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !14, i64 0}
!251 = !{!250, !14, i64 0}
!252 = !{!249, !61, i64 8}
!253 = !{!254, !254, i64 0}
!254 = !{!"short", !15, i64 0}
!255 = !{!256, !14, i64 0}
!256 = !{!"_ZTS12DOALL_args_t", !14, i64 0, !14, i64 8, !61, i64 16, !61, i64 24, !61, i64 32, !17, i64 40}
!257 = !{!256, !14, i64 8}
!258 = !{!256, !61, i64 24}
!259 = !{!256, !61, i64 32}
!260 = !{!194, !14, i64 8}
!261 = !{!194, !14, i64 16}
!262 = !{!188, !14, i64 8}
!263 = !{!188, !14, i64 16}
!264 = !{!256, !61, i64 16}
!265 = !{!266, !14, i64 0}
!266 = !{!"_ZTS19NOELLE_HELIX_args_t", !14, i64 0, !14, i64 8, !14, i64 16, !14, i64 24, !14, i64 32, !61, i64 40, !61, i64 48, !14, i64 56, !17, i64 64}
!267 = !{!266, !14, i64 8}
!268 = !{!266, !14, i64 16}
!269 = !{!266, !14, i64 24}
!270 = !{!266, !14, i64 32}
!271 = !{!266, !61, i64 40}
!272 = !{!266, !61, i64 48}
!273 = !{!266, !14, i64 56}
!274 = !{!275, !14, i64 0}
!275 = !{!"_ZTS18NOELLE_DSWP_args_t", !14, i64 0, !14, i64 8, !14, i64 16, !15, i64 24}
!276 = !{!275, !14, i64 8}
!277 = !{!275, !14, i64 16}
!278 = !{!279, !60, i64 80}
!279 = !{!"_ZTSN10moodycamel17ReaderWriterQueueIaLm512EEE", !280, i64 0, !15, i64 8, !280, i64 64, !61, i64 72, !60, i64 80, !60, i64 81}
!280 = !{!"_ZTSN10moodycamel11weak_atomicIPNS_17ReaderWriterQueueIaLm512EE5BlockEEE", !281, i64 0}
!281 = !{!"_ZTSSt6atomicIPN10moodycamel17ReaderWriterQueueIaLm512EE5BlockEE", !282, i64 0}
!282 = !{!"_ZTSSt13__atomic_baseIPN10moodycamel17ReaderWriterQueueIaLm512EE5BlockEE", !14, i64 0}
!283 = !{!279, !60, i64 81}
!284 = !{!279, !61, i64 72}
!285 = !{!286, !14, i64 136}
!286 = !{!"_ZTSN10moodycamel17ReaderWriterQueueIaLm512EE5BlockE", !287, i64 0, !61, i64 8, !15, i64 16, !287, i64 64, !61, i64 72, !15, i64 80, !280, i64 128, !14, i64 136, !61, i64 144, !14, i64 152}
!287 = !{!"_ZTSN10moodycamel11weak_atomicImEE", !288, i64 0}
!288 = !{!"_ZTSSt6atomicImE"}
!289 = !{!286, !61, i64 144}
!290 = !{!286, !14, i64 152}
!291 = !{!292, !61, i64 0}
!292 = !{!"_ZTSSt13__atomic_baseIlE", !61, i64 0}
!293 = !{!294, !14, i64 0}
!294 = !{!"_ZTSSt11_Deque_baseIaSaIaEE", !295, i64 0}
!295 = !{!"_ZTSNSt11_Deque_baseIaSaIaEE11_Deque_implE", !14, i64 0, !61, i64 8, !296, i64 16, !296, i64 48}
!296 = !{!"_ZTSSt15_Deque_iteratorIaRaPaE", !14, i64 0, !14, i64 8, !14, i64 16, !14, i64 24}
!297 = !{!294, !14, i64 40}
!298 = !{!294, !14, i64 72}
!299 = !{!300, !60, i64 80}
!300 = !{!"_ZTSN10moodycamel17ReaderWriterQueueIsLm512EEE", !301, i64 0, !15, i64 8, !301, i64 64, !61, i64 72, !60, i64 80, !60, i64 81}
!301 = !{!"_ZTSN10moodycamel11weak_atomicIPNS_17ReaderWriterQueueIsLm512EE5BlockEEE", !302, i64 0}
!302 = !{!"_ZTSSt6atomicIPN10moodycamel17ReaderWriterQueueIsLm512EE5BlockEE", !303, i64 0}
!303 = !{!"_ZTSSt13__atomic_baseIPN10moodycamel17ReaderWriterQueueIsLm512EE5BlockEE", !14, i64 0}
!304 = !{!300, !60, i64 81}
!305 = !{!300, !61, i64 72}
!306 = !{!307, !14, i64 136}
!307 = !{!"_ZTSN10moodycamel17ReaderWriterQueueIsLm512EE5BlockE", !287, i64 0, !61, i64 8, !15, i64 16, !287, i64 64, !61, i64 72, !15, i64 80, !301, i64 128, !14, i64 136, !61, i64 144, !14, i64 152}
!308 = !{!307, !61, i64 144}
!309 = !{!307, !14, i64 152}
!310 = !{!311, !14, i64 0}
!311 = !{!"_ZTSSt11_Deque_baseIsSaIsEE", !312, i64 0}
!312 = !{!"_ZTSNSt11_Deque_baseIsSaIsEE11_Deque_implE", !14, i64 0, !61, i64 8, !313, i64 16, !313, i64 48}
!313 = !{!"_ZTSSt15_Deque_iteratorIsRsPsE", !14, i64 0, !14, i64 8, !14, i64 16, !14, i64 24}
!314 = !{!311, !14, i64 40}
!315 = !{!311, !14, i64 72}
!316 = !{!317, !60, i64 80}
!317 = !{!"_ZTSN10moodycamel17ReaderWriterQueueIiLm512EEE", !318, i64 0, !15, i64 8, !318, i64 64, !61, i64 72, !60, i64 80, !60, i64 81}
!318 = !{!"_ZTSN10moodycamel11weak_atomicIPNS_17ReaderWriterQueueIiLm512EE5BlockEEE", !319, i64 0}
!319 = !{!"_ZTSSt6atomicIPN10moodycamel17ReaderWriterQueueIiLm512EE5BlockEE", !320, i64 0}
!320 = !{!"_ZTSSt13__atomic_baseIPN10moodycamel17ReaderWriterQueueIiLm512EE5BlockEE", !14, i64 0}
!321 = !{!317, !60, i64 81}
!322 = !{!317, !61, i64 72}
!323 = !{!324, !14, i64 136}
!324 = !{!"_ZTSN10moodycamel17ReaderWriterQueueIiLm512EE5BlockE", !287, i64 0, !61, i64 8, !15, i64 16, !287, i64 64, !61, i64 72, !15, i64 80, !318, i64 128, !14, i64 136, !61, i64 144, !14, i64 152}
!325 = !{!324, !61, i64 144}
!326 = !{!324, !14, i64 152}
!327 = !{!328, !14, i64 0}
!328 = !{!"_ZTSSt11_Deque_baseIiSaIiEE", !329, i64 0}
!329 = !{!"_ZTSNSt11_Deque_baseIiSaIiEE11_Deque_implE", !14, i64 0, !61, i64 8, !330, i64 16, !330, i64 48}
!330 = !{!"_ZTSSt15_Deque_iteratorIiRiPiE", !14, i64 0, !14, i64 8, !14, i64 16, !14, i64 24}
!331 = !{!328, !14, i64 40}
!332 = !{!328, !14, i64 72}
!333 = !{!334, !60, i64 80}
!334 = !{!"_ZTSN10moodycamel17ReaderWriterQueueIlLm512EEE", !335, i64 0, !15, i64 8, !335, i64 64, !61, i64 72, !60, i64 80, !60, i64 81}
!335 = !{!"_ZTSN10moodycamel11weak_atomicIPNS_17ReaderWriterQueueIlLm512EE5BlockEEE", !336, i64 0}
!336 = !{!"_ZTSSt6atomicIPN10moodycamel17ReaderWriterQueueIlLm512EE5BlockEE", !337, i64 0}
!337 = !{!"_ZTSSt13__atomic_baseIPN10moodycamel17ReaderWriterQueueIlLm512EE5BlockEE", !14, i64 0}
!338 = !{!334, !60, i64 81}
!339 = !{!334, !61, i64 72}
!340 = !{!341, !14, i64 136}
!341 = !{!"_ZTSN10moodycamel17ReaderWriterQueueIlLm512EE5BlockE", !287, i64 0, !61, i64 8, !15, i64 16, !287, i64 64, !61, i64 72, !15, i64 80, !335, i64 128, !14, i64 136, !61, i64 144, !14, i64 152}
!342 = !{!341, !61, i64 144}
!343 = !{!341, !14, i64 152}
!344 = !{!345, !14, i64 0}
!345 = !{!"_ZTSSt11_Deque_baseIlSaIlEE", !346, i64 0}
!346 = !{!"_ZTSNSt11_Deque_baseIlSaIlEE11_Deque_implE", !14, i64 0, !61, i64 8, !347, i64 16, !347, i64 48}
!347 = !{!"_ZTSSt15_Deque_iteratorIlRlPlE", !14, i64 0, !14, i64 8, !14, i64 16, !14, i64 24}
!348 = !{!345, !14, i64 40}
!349 = !{!345, !14, i64 72}
!350 = !{!351, !61, i64 0}
!351 = !{!"_ZTS8timespec", !61, i64 0, !61, i64 8}
!352 = !{!351, !61, i64 8}
!353 = !{!60, !60, i64 0}
!354 = !{!341, !61, i64 8}
!355 = !{!341, !61, i64 72}
!356 = !{!337, !14, i64 0}
!357 = !{!324, !61, i64 8}
!358 = !{!324, !61, i64 72}
!359 = !{!320, !14, i64 0}
!360 = !{!307, !61, i64 8}
!361 = !{!307, !61, i64 72}
!362 = !{!303, !14, i64 0}
!363 = !{!286, !61, i64 8}
!364 = !{!286, !61, i64 72}
!365 = !{!282, !14, i64 0}
!366 = !{!345, !61, i64 8}
!367 = !{!347, !14, i64 24}
!368 = !{!347, !14, i64 8}
!369 = !{!347, !14, i64 16}
!370 = !{!345, !14, i64 16}
!371 = !{!345, !14, i64 48}
!372 = !{!328, !61, i64 8}
!373 = !{!330, !14, i64 24}
!374 = !{!330, !14, i64 8}
!375 = !{!330, !14, i64 16}
!376 = !{!328, !14, i64 16}
!377 = !{!328, !14, i64 48}
!378 = !{!311, !61, i64 8}
!379 = !{!313, !14, i64 24}
!380 = !{!313, !14, i64 8}
!381 = !{!313, !14, i64 16}
!382 = !{!311, !14, i64 16}
!383 = !{!311, !14, i64 48}
!384 = !{!294, !61, i64 8}
!385 = !{!296, !14, i64 24}
!386 = !{!296, !14, i64 8}
!387 = !{!296, !14, i64 16}
!388 = !{!294, !14, i64 16}
!389 = !{!294, !14, i64 48}
